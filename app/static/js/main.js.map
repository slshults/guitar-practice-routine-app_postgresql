{"version":3,"file":"main.js","sources":["../../../node_modules/react-dom/client.js","utils/analytics.js","contexts/NavigationContext.jsx","../../../node_modules/lucide-react/dist/esm/defaultAttributes.mjs","../../../node_modules/lucide-react/dist/esm/createLucideIcon.mjs","../../../node_modules/lucide-react/dist/esm/icons/alert-triangle.mjs","../../../node_modules/lucide-react/dist/esm/icons/book.mjs","../../../node_modules/lucide-react/dist/esm/icons/check-circle-2.mjs","../../../node_modules/lucide-react/dist/esm/icons/check.mjs","../../../node_modules/lucide-react/dist/esm/icons/chevron-down.mjs","../../../node_modules/lucide-react/dist/esm/icons/chevron-right.mjs","../../../node_modules/lucide-react/dist/esm/icons/clock.mjs","../../../node_modules/lucide-react/dist/esm/icons/file-text.mjs","../../../node_modules/lucide-react/dist/esm/icons/grip-vertical.mjs","../../../node_modules/lucide-react/dist/esm/icons/loader-2.mjs","../../../node_modules/lucide-react/dist/esm/icons/log-out.mjs","../../../node_modules/lucide-react/dist/esm/icons/music.mjs","../../../node_modules/lucide-react/dist/esm/icons/pencil.mjs","../../../node_modules/lucide-react/dist/esm/icons/plus.mjs","../../../node_modules/lucide-react/dist/esm/icons/printer.mjs","../../../node_modules/lucide-react/dist/esm/icons/search.mjs","../../../node_modules/lucide-react/dist/esm/icons/sparkles.mjs","../../../node_modules/lucide-react/dist/esm/icons/trash-2.mjs","../../../node_modules/lucide-react/dist/esm/icons/upload.mjs","../../../node_modules/lucide-react/dist/esm/icons/wand.mjs","../../../node_modules/lucide-react/dist/esm/icons/x.mjs","../../../node_modules/lucide-react/dist/esm/icons/zap.mjs","../../../node_modules/clsx/dist/clsx.mjs","../../../node_modules/tailwind-merge/dist/lib/tw-join.mjs","../../../node_modules/tailwind-merge/dist/lib/class-utils.mjs","../../../node_modules/tailwind-merge/dist/lib/lru-cache.mjs","../../../node_modules/tailwind-merge/dist/lib/modifier-utils.mjs","../../../node_modules/tailwind-merge/dist/lib/config-utils.mjs","../../../node_modules/tailwind-merge/dist/lib/merge-classlist.mjs","../../../node_modules/tailwind-merge/dist/lib/create-tailwind-merge.mjs","../../../node_modules/tailwind-merge/dist/lib/from-theme.mjs","../../../node_modules/tailwind-merge/dist/lib/validators.mjs","../../../node_modules/tailwind-merge/dist/lib/default-config.mjs","../../../node_modules/tailwind-merge/dist/lib/tw-merge.mjs","lib/utils.js","components/ui/card.jsx","../../../node_modules/class-variance-authority/dist/index.mjs","components/ui/button.jsx","components/ui/input.jsx","utils/platform.js","components/ui/dialog.jsx","components/ui/textarea.jsx","components/ui/label.jsx","components/ui/tooltip.jsx","components/ItemEditor.jsx","hooks/usePracticeItems.js","components/ChordChartEditor.jsx","components/ApiErrorModal.jsx","components/AutocreateSuccessModal.jsx","utils/logging.js","../../../node_modules/@radix-ui/react-alert-dialog/dist/index.mjs","components/ui/alert-dialog.jsx","components/ChordChartsModal.jsx","components/icons/ChordIcon.jsx","components/PracticeItemsList.jsx","hooks/useActiveRoutine.js","hooks/useItemDetails.js","components/NoteEditor.jsx","components/PracticePage.jsx","hooks/useAuth.js","components/AuthButton.jsx","components/NavMenu.jsx","hooks/useRoutineEditor.js","components/RoutineEditor.jsx","components/RoutinesPage.jsx","hooks/useRoutines.js","components/ui/select.jsx","components/ImportsPage.jsx","hooks/useLightweightItems.js","main.jsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// PostHog Analytics Utility\n// Centralized event tracking for the Guitar Practice Routine App\n\n// Track page visit start times for engagement metrics\nlet pageStartTimes = {};\n\n/**\n * Track page visits for SPA navigation\n * @param {string} pageName - Name of the page visited\n * @param {Object} additionalProperties - Additional properties to track\n */\nexport const trackPageVisit = (pageName, additionalProperties = {}) => {\n  if (typeof window !== 'undefined' && window.posthog) {\n    // Track time spent on previous page\n    const previousPage = additionalProperties.previous_page;\n    if (previousPage && pageStartTimes[previousPage]) {\n      const timeSpent = Date.now() - pageStartTimes[previousPage];\n      window.posthog.capture('Page Time Spent', {\n        page_name: previousPage,\n        time_spent_ms: timeSpent,\n        time_spent_seconds: Math.round(timeSpent / 1000),\n        next_page: pageName\n      });\n    }\n\n    // Record start time for current page\n    pageStartTimes[pageName] = Date.now();\n\n    // Manual SPA pageview tracking using proper $pageview event\n    window.posthog.capture('$pageview', {\n      $current_url: `${window.location.origin}${window.location.pathname}#${pageName}`,\n      $host: window.location.host,\n      $pathname: window.location.pathname,\n      $search: window.location.search,\n      title: `Guitar Practice - ${pageName}`,\n      page_name: pageName,\n      spa_navigation: true,\n      viewport_width: window.innerWidth,\n      viewport_height: window.innerHeight,\n      screen_width: window.screen.width,\n      screen_height: window.screen.height,\n      ...additionalProperties\n    });\n  }\n};\n\n/**\n * Track practice session events\n * @param {string} eventType - Type of practice event (started_timer, marked_done, timer_reset, etc.)\n * @param {string} itemName - Name of the practice item\n * @param {Object} additionalProperties - Additional properties to track\n */\nexport const trackPracticeEvent = (eventType, itemName, additionalProperties = {}) => {\n  if (typeof window !== 'undefined' && window.posthog) {\n    const eventMap = {\n      'started_timer': 'Started Timer',\n      'marked_done': 'Item Marked Done',\n      'timer_reset': 'Timer Reset',\n      'timer_stopped': 'Timer Stopped'\n    };\n\n    window.posthog.capture(eventMap[eventType] || eventType, {\n      item_name: itemName,\n      timer_started: eventType === 'started_timer',\n      timer_stopped: eventType === 'timer_stopped',\n      timer_reset: eventType === 'timer_reset',\n      ...additionalProperties\n    });\n  }\n};\n\n/**\n * Track chord chart interactions\n * @param {string} action - Action performed (added, edited, deleted, autocreated, copied)\n * @param {string} itemName - Name of the item the chord chart belongs to\n * @param {Object} additionalProperties - Additional properties to track\n */\nexport const trackChordChartEvent = (action, itemName, additionalProperties = {}) => {\n  if (typeof window !== 'undefined' && window.posthog) {\n    const eventMap = {\n      'added': 'Chord Chart Added',\n      'edited': 'Chord Chart Edited', \n      'deleted': 'Chord Chart Deleted',\n      'autocreated': 'Chord Charts Autocreated',\n      'copied': 'Chord Charts Copied'\n    };\n\n    window.posthog.capture(eventMap[action] || action, {\n      item_name: itemName,\n      ...additionalProperties\n    });\n  }\n};\n\n/**\n * Track item CRUD operations\n * @param {string} operation - CRUD operation (created, deleted, updated)\n * @param {string} itemType - Type of item (item, routine)\n * @param {string} itemName - Name of the item\n * @param {Object} additionalProperties - Additional properties to track\n */\nexport const trackItemOperation = (operation, itemType, itemName, additionalProperties = {}) => {\n  if (typeof window !== 'undefined' && window.posthog) {\n    const eventName = itemType === 'routine' \n      ? `${operation.charAt(0).toUpperCase() + operation.slice(1)} Routine`\n      : `${operation.charAt(0).toUpperCase() + operation.slice(1)} Item`;\n\n    window.posthog.capture(eventName, {\n      [`${itemType}_name`]: itemName,\n      operation_type: operation,\n      item_type: itemType,\n      ...additionalProperties\n    });\n  }\n};\n\n/**\n * Track routine operations\n * @param {string} operation - Operation performed (item_added, item_removed, activated)\n * @param {string} routineName - Name of the routine\n * @param {string} itemName - Name of the item (if applicable)\n * @param {Object} additionalProperties - Additional properties to track\n */\nexport const trackRoutineOperation = (operation, routineName, itemName = null, additionalProperties = {}) => {\n  if (typeof window !== 'undefined' && window.posthog) {\n    const eventMap = {\n      'item_added': 'Item Added to Routine',\n      'item_removed': 'Item Removed from Routine', \n      'activated': 'Routine Activated'\n    };\n\n    const eventData = {\n      routine_name: routineName,\n      operation_type: operation,\n      ...additionalProperties\n    };\n\n    if (itemName) {\n      eventData.item_name = itemName;\n    }\n\n    window.posthog.capture(eventMap[operation] || operation, eventData);\n  }\n};\n\n/**\n * Track content updates (notes, tuning, folder paths)\n * @param {string} updateType - Type of update (notes, tuning, folder_path)\n * @param {string} itemName - Name of the item\n * @param {Object} additionalProperties - Additional properties to track\n */\nexport const trackContentUpdate = (updateType, itemName, additionalProperties = {}) => {\n  if (typeof window !== 'undefined' && window.posthog) {\n    const eventMap = {\n      'notes': 'Notes Added',\n      'tuning': 'Tuning Added', \n      'folder_path': 'Folder Path Added'\n    };\n\n    window.posthog.capture(eventMap[updateType] || `${updateType} Updated`, {\n      item_name: itemName,\n      update_type: updateType,\n      ...additionalProperties\n    });\n  }\n};\n\n/**\n * Track songbook interactions\n * @param {string} itemName - Name of the item\n * @param {string} folderPath - Path to the songbook folder\n * @param {Object} additionalProperties - Additional properties to track\n */\nexport const trackSongbookLinkClick = (itemName, folderPath, additionalProperties = {}) => {\n  if (typeof window !== 'undefined' && window.posthog) {\n    window.posthog.capture('Songbook Folder Link Clicked', {\n      item_name: itemName,\n      songbook_folder_path: folderPath,\n      ...additionalProperties\n    });\n  }\n};\n\n/**\n * Track active routine when practice page is visited\n * @param {string} routineName - Name of the active routine\n * @param {Object} additionalProperties - Additional properties to track\n */\nexport const trackActiveRoutine = (routineName, additionalProperties = {}) => {\n  if (typeof window !== 'undefined' && window.posthog) {\n    window.posthog.capture('Practice Page Visited', {\n      active_routine_name: routineName,\n      ...additionalProperties\n    });\n  }\n};\n\n/**\n * Debug helper to log events to console in development\n * @param {string} eventName - Name of the event\n * @param {Object} properties - Event properties\n */\nconst debugLog = (eventName, properties) => {\n  if (process.env.NODE_ENV === 'development') {\n    console.log(`[Analytics] ${eventName}:`, properties);\n  }\n};\n\n// Export all functions for easy importing\nexport default {\n  trackPageVisit,\n  trackPracticeEvent,\n  trackChordChartEvent,\n  trackItemOperation,\n  trackRoutineOperation,\n  trackContentUpdate,\n  trackSongbookLinkClick,\n  trackActiveRoutine\n};","// app/static/js/contexts/NavigationContext.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { trackPageVisit } from '../utils/analytics';\n\nconst NavigationContext = createContext(undefined);\n\nexport const NavigationProvider = ({ children }) => {\n  // Initialize from URL hash or default to 'Practice'\n  const getInitialPage = () => {\n    const hash = window.location.hash.slice(1); // Remove the #\n    const validPages = ['Practice', 'Routines', 'Items'];\n    return validPages.includes(hash) ? hash : 'Practice';\n  };\n\n  const [activePage, setActivePage] = useState(getInitialPage);\n\n  // Track initial page load with proper SPA pageview\n  useEffect(() => {\n    // Wait a bit to ensure PostHog is fully loaded\n    const timeoutId = setTimeout(() => {\n      trackPageVisit(activePage, {\n        initial_page_load: true,\n        referrer: document.referrer\n      });\n    }, 100);\n\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  // Enhanced setActivePage that includes analytics tracking and URL sync\n  const setActivePageWithTracking = (pageName, updateHistory = true) => {\n    const previousPage = activePage;\n    setActivePage(pageName);\n\n    // Track navigation with previous page context\n    trackPageVisit(pageName, {\n      previous_page: previousPage,\n      navigation_type: updateHistory ? 'user_action' : 'browser_navigation',\n      timestamp: new Date().toISOString()\n    });\n\n    // Update URL hash to reflect current page\n    if (updateHistory) {\n      window.history.pushState(null, '', `#${pageName}`);\n    }\n  };\n\n  // Listen for browser back/forward button\n  useEffect(() => {\n    const handlePopState = () => {\n      const newPage = getInitialPage();\n      // Update state without creating new history entry\n      setActivePageWithTracking(newPage, false);\n    };\n\n    window.addEventListener('popstate', handlePopState);\n\n    // Cleanup listener\n    return () => {\n      window.removeEventListener('popstate', handlePopState);\n    };\n  }, []);\n\n  return (\n    <NavigationContext.Provider value={{\n      activePage,\n      setActivePage: setActivePageWithTracking\n    }}>\n      {children}\n    </NavigationContext.Provider>\n  );\n};\n\nexport const useNavigation = () => {\n  const context = useContext(NavigationContext);\n  if (context === undefined) {\n    throw new Error('useNavigation must be used within a NavigationProvider');\n  }\n  return context;\n};\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.mjs';\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, children, ...rest }, ref) => createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: `lucide lucide-${toKebabCase(iconName)}`,\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...(Array.isArray(children) ? children : [children]) || []\n      ]\n    )\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\nvar createLucideIcon$1 = createLucideIcon;\n\nexport { createLucideIcon$1 as default, toKebabCase };\n//# sourceMappingURL=createLucideIcon.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst AlertTriangle = createLucideIcon(\"AlertTriangle\", [\n  [\n    \"path\",\n    {\n      d: \"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\",\n      key: \"c3ski4\"\n    }\n  ],\n  [\"path\", { d: \"M12 9v4\", key: \"juzpu7\" }],\n  [\"path\", { d: \"M12 17h.01\", key: \"p32p05\" }]\n]);\n\nexport { AlertTriangle as default };\n//# sourceMappingURL=alert-triangle.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Book = createLucideIcon(\"Book\", [\n  [\n    \"path\",\n    {\n      d: \"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20\",\n      key: \"t4utmx\"\n    }\n  ]\n]);\n\nexport { Book as default };\n//# sourceMappingURL=book.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst CheckCircle2 = createLucideIcon(\"CheckCircle2\", [\n  [\n    \"path\",\n    {\n      d: \"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\",\n      key: \"14v8dr\"\n    }\n  ],\n  [\"path\", { d: \"m9 12 2 2 4-4\", key: \"dzmm74\" }]\n]);\n\nexport { CheckCircle2 as default };\n//# sourceMappingURL=check-circle-2.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Check = createLucideIcon(\"Check\", [\n  [\"polyline\", { points: \"20 6 9 17 4 12\", key: \"10jjfj\" }]\n]);\n\nexport { Check as default };\n//# sourceMappingURL=check.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst ChevronDown = createLucideIcon(\"ChevronDown\", [\n  [\"path\", { d: \"m6 9 6 6 6-6\", key: \"qrunsl\" }]\n]);\n\nexport { ChevronDown as default };\n//# sourceMappingURL=chevron-down.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst ChevronRight = createLucideIcon(\"ChevronRight\", [\n  [\"path\", { d: \"m9 18 6-6-6-6\", key: \"mthhwq\" }]\n]);\n\nexport { ChevronRight as default };\n//# sourceMappingURL=chevron-right.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Clock = createLucideIcon(\"Clock\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"polyline\", { points: \"12 6 12 12 16 14\", key: \"68esgv\" }]\n]);\n\nexport { Clock as default };\n//# sourceMappingURL=clock.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst FileText = createLucideIcon(\"FileText\", [\n  [\n    \"path\",\n    {\n      d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n      key: \"1nnpy2\"\n    }\n  ],\n  [\"polyline\", { points: \"14 2 14 8 20 8\", key: \"1ew0cm\" }],\n  [\"line\", { x1: \"16\", x2: \"8\", y1: \"13\", y2: \"13\", key: \"14keom\" }],\n  [\"line\", { x1: \"16\", x2: \"8\", y1: \"17\", y2: \"17\", key: \"17nazh\" }],\n  [\"line\", { x1: \"10\", x2: \"8\", y1: \"9\", y2: \"9\", key: \"1a5vjj\" }]\n]);\n\nexport { FileText as default };\n//# sourceMappingURL=file-text.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst GripVertical = createLucideIcon(\"GripVertical\", [\n  [\"circle\", { cx: \"9\", cy: \"12\", r: \"1\", key: \"1vctgf\" }],\n  [\"circle\", { cx: \"9\", cy: \"5\", r: \"1\", key: \"hp0tcf\" }],\n  [\"circle\", { cx: \"9\", cy: \"19\", r: \"1\", key: \"fkjjf6\" }],\n  [\"circle\", { cx: \"15\", cy: \"12\", r: \"1\", key: \"1tmaij\" }],\n  [\"circle\", { cx: \"15\", cy: \"5\", r: \"1\", key: \"19l28e\" }],\n  [\"circle\", { cx: \"15\", cy: \"19\", r: \"1\", key: \"f4zoj3\" }]\n]);\n\nexport { GripVertical as default };\n//# sourceMappingURL=grip-vertical.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Loader2 = createLucideIcon(\"Loader2\", [\n  [\"path\", { d: \"M21 12a9 9 0 1 1-6.219-8.56\", key: \"13zald\" }]\n]);\n\nexport { Loader2 as default };\n//# sourceMappingURL=loader-2.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst LogOut = createLucideIcon(\"LogOut\", [\n  [\"path\", { d: \"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\", key: \"1uf3rs\" }],\n  [\"polyline\", { points: \"16 17 21 12 16 7\", key: \"1gabdz\" }],\n  [\"line\", { x1: \"21\", x2: \"9\", y1: \"12\", y2: \"12\", key: \"1uyos4\" }]\n]);\n\nexport { LogOut as default };\n//# sourceMappingURL=log-out.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Music = createLucideIcon(\"Music\", [\n  [\"path\", { d: \"M9 18V5l12-2v13\", key: \"1jmyc2\" }],\n  [\"circle\", { cx: \"6\", cy: \"18\", r: \"3\", key: \"fqmcym\" }],\n  [\"circle\", { cx: \"18\", cy: \"16\", r: \"3\", key: \"1hluhg\" }]\n]);\n\nexport { Music as default };\n//# sourceMappingURL=music.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Pencil = createLucideIcon(\"Pencil\", [\n  [\n    \"path\",\n    { d: \"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\", key: \"5qss01\" }\n  ],\n  [\"path\", { d: \"m15 5 4 4\", key: \"1mk7zo\" }]\n]);\n\nexport { Pencil as default };\n//# sourceMappingURL=pencil.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Plus = createLucideIcon(\"Plus\", [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"M12 5v14\", key: \"s699le\" }]\n]);\n\nexport { Plus as default };\n//# sourceMappingURL=plus.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Printer = createLucideIcon(\"Printer\", [\n  [\"polyline\", { points: \"6 9 6 2 18 2 18 9\", key: \"1306q4\" }],\n  [\n    \"path\",\n    {\n      d: \"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\",\n      key: \"143wyd\"\n    }\n  ],\n  [\"rect\", { width: \"12\", height: \"8\", x: \"6\", y: \"14\", key: \"5ipwut\" }]\n]);\n\nexport { Printer as default };\n//# sourceMappingURL=printer.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Search = createLucideIcon(\"Search\", [\n  [\"circle\", { cx: \"11\", cy: \"11\", r: \"8\", key: \"4ej97u\" }],\n  [\"path\", { d: \"m21 21-4.3-4.3\", key: \"1qie3q\" }]\n]);\n\nexport { Search as default };\n//# sourceMappingURL=search.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Sparkles = createLucideIcon(\"Sparkles\", [\n  [\n    \"path\",\n    {\n      d: \"m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z\",\n      key: \"17u4zn\"\n    }\n  ],\n  [\"path\", { d: \"M5 3v4\", key: \"bklmnn\" }],\n  [\"path\", { d: \"M19 17v4\", key: \"iiml17\" }],\n  [\"path\", { d: \"M3 5h4\", key: \"nem4j1\" }],\n  [\"path\", { d: \"M17 19h4\", key: \"lbex7p\" }]\n]);\n\nexport { Sparkles as default };\n//# sourceMappingURL=sparkles.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Trash2 = createLucideIcon(\"Trash2\", [\n  [\"path\", { d: \"M3 6h18\", key: \"d0wm0j\" }],\n  [\"path\", { d: \"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\", key: \"4alrt4\" }],\n  [\"path\", { d: \"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\", key: \"v07s0e\" }],\n  [\"line\", { x1: \"10\", x2: \"10\", y1: \"11\", y2: \"17\", key: \"1uufr5\" }],\n  [\"line\", { x1: \"14\", x2: \"14\", y1: \"11\", y2: \"17\", key: \"xtxkd\" }]\n]);\n\nexport { Trash2 as default };\n//# sourceMappingURL=trash-2.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Upload = createLucideIcon(\"Upload\", [\n  [\"path\", { d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\", key: \"ih7n3h\" }],\n  [\"polyline\", { points: \"17 8 12 3 7 8\", key: \"t8dd8p\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"3\", y2: \"15\", key: \"widbto\" }]\n]);\n\nexport { Upload as default };\n//# sourceMappingURL=upload.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Wand = createLucideIcon(\"Wand\", [\n  [\"path\", { d: \"M15 4V2\", key: \"z1p9b7\" }],\n  [\"path\", { d: \"M15 16v-2\", key: \"px0unx\" }],\n  [\"path\", { d: \"M8 9h2\", key: \"1g203m\" }],\n  [\"path\", { d: \"M20 9h2\", key: \"19tzq7\" }],\n  [\"path\", { d: \"M17.8 11.8 19 13\", key: \"yihg8r\" }],\n  [\"path\", { d: \"M15 9h0\", key: \"kg5t1u\" }],\n  [\"path\", { d: \"M17.8 6.2 19 5\", key: \"fd4us0\" }],\n  [\"path\", { d: \"m3 21 9-9\", key: \"1jfql5\" }],\n  [\"path\", { d: \"M12.2 6.2 11 5\", key: \"i3da3b\" }]\n]);\n\nexport { Wand as default };\n//# sourceMappingURL=wand.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst X = createLucideIcon(\"X\", [\n  [\"path\", { d: \"M18 6 6 18\", key: \"1bl5f8\" }],\n  [\"path\", { d: \"m6 6 12 12\", key: \"d8bk6v\" }]\n]);\n\nexport { X as default };\n//# sourceMappingURL=x.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Zap = createLucideIcon(\"Zap\", [\n  [\n    \"polygon\",\n    { points: \"13 2 3 14 12 14 11 22 21 10 12 10 13 2\", key: \"45s27k\" }\n  ]\n]);\n\nexport { Zap as default };\n//# sourceMappingURL=zap.mjs.map\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\nfunction twJoin() {\n  var index = 0;\n  var argument;\n  var resolvedValue;\n  var string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nfunction toValue(mix) {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  var resolvedValue;\n  var string = '';\n  for (var k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\n\nexport { twJoin };\n//# sourceMappingURL=tw-join.mjs.map\n","var CLASS_PART_SEPARATOR = '-';\nfunction createClassUtils(config) {\n  var classMap = createClassMap(config);\n  var conflictingClassGroups = config.conflictingClassGroups,\n    _config$conflictingCl = config.conflictingClassGroupModifiers,\n    conflictingClassGroupModifiers = _config$conflictingCl === void 0 ? {} : _config$conflictingCl;\n  function getClassGroupId(className) {\n    var classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  }\n  function getConflictingClassGroupIds(classGroupId, hasPostfixModifier) {\n    var conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [].concat(conflicts, conflictingClassGroupModifiers[classGroupId]);\n    }\n    return conflicts;\n  }\n  return {\n    getClassGroupId: getClassGroupId,\n    getConflictingClassGroupIds: getConflictingClassGroupIds\n  };\n}\nfunction getGroupRecursive(classParts, classPartObject) {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  var currentClassPart = classParts[0];\n  var nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  var classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  var classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(function (_ref) {\n    var validator = _ref.validator;\n    return validator(classRest);\n  })?.classGroupId;\n}\nvar arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nfunction getGroupIdForArbitraryProperty(className) {\n  if (arbitraryPropertyRegex.test(className)) {\n    var arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    var property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n}\n/**\n * Exported for testing only\n */\nfunction createClassMap(config) {\n  var theme = config.theme,\n    prefix = config.prefix;\n  var classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  var prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(function (_ref2) {\n    var classGroupId = _ref2[0],\n      classGroup = _ref2[1];\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n}\nfunction processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {\n  classGroup.forEach(function (classDefinition) {\n    if (typeof classDefinition === 'string') {\n      var classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId: classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(function (_ref3) {\n      var key = _ref3[0],\n        classGroup = _ref3[1];\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n}\nfunction getPart(classPartObject, path) {\n  var currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(function (pathPart) {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n}\nfunction isThemeGetter(func) {\n  return func.isThemeGetter;\n}\nfunction getPrefixedClassGroupEntries(classGroupEntries, prefix) {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n  return classGroupEntries.map(function (_ref4) {\n    var classGroupId = _ref4[0],\n      classGroup = _ref4[1];\n    var prefixedClassGroup = classGroup.map(function (classDefinition) {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(function (_ref5) {\n          var key = _ref5[0],\n            value = _ref5[1];\n          return [prefix + key, value];\n        }));\n      }\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n}\n\nexport { createClassMap, createClassUtils };\n//# sourceMappingURL=class-utils.mjs.map\n","// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nfunction createLruCache(maxCacheSize) {\n  if (maxCacheSize < 1) {\n    return {\n      get: function get() {\n        return undefined;\n      },\n      set: function set() {}\n    };\n  }\n  var cacheSize = 0;\n  var cache = new Map();\n  var previousCache = new Map();\n  function update(key, value) {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  }\n  return {\n    get: function get(key) {\n      var value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set: function set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n}\n\nexport { createLruCache };\n//# sourceMappingURL=lru-cache.mjs.map\n","var IMPORTANT_MODIFIER = '!';\nfunction createSplitModifiers(config) {\n  var separator = config.separator || ':';\n  var isSeparatorSingleCharacter = separator.length === 1;\n  var firstSeparatorCharacter = separator[0];\n  var separatorLength = separator.length;\n  // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n  return function splitModifiers(className) {\n    var modifiers = [];\n    var bracketDepth = 0;\n    var modifierStart = 0;\n    var postfixModifierPosition;\n    for (var index = 0; index < className.length; index++) {\n      var currentCharacter = className[index];\n      if (bracketDepth === 0) {\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separatorLength;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      }\n    }\n    var baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    var hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    var baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    var maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers: modifiers,\n      hasImportantModifier: hasImportantModifier,\n      baseClassName: baseClassName,\n      maybePostfixModifierPosition: maybePostfixModifierPosition\n    };\n  };\n}\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nfunction sortModifiers(modifiers) {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n  var sortedModifiers = [];\n  var unsortedModifiers = [];\n  modifiers.forEach(function (modifier) {\n    var isArbitraryVariant = modifier[0] === '[';\n    if (isArbitraryVariant) {\n      sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort().concat([modifier]));\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort());\n  return sortedModifiers;\n}\n\nexport { IMPORTANT_MODIFIER, createSplitModifiers, sortModifiers };\n//# sourceMappingURL=modifier-utils.mjs.map\n","import { createClassUtils } from './class-utils.mjs';\nimport { createLruCache } from './lru-cache.mjs';\nimport { createSplitModifiers } from './modifier-utils.mjs';\n\nfunction createConfigUtils(config) {\n  return {\n    cache: createLruCache(config.cacheSize),\n    splitModifiers: createSplitModifiers(config),\n    ...createClassUtils(config)\n  };\n}\n\nexport { createConfigUtils };\n//# sourceMappingURL=config-utils.mjs.map\n","import { sortModifiers, IMPORTANT_MODIFIER } from './modifier-utils.mjs';\n\nvar SPLIT_CLASSES_REGEX = /\\s+/;\nfunction mergeClassList(classList, configUtils) {\n  var splitModifiers = configUtils.splitModifiers,\n    getClassGroupId = configUtils.getClassGroupId,\n    getConflictingClassGroupIds = configUtils.getConflictingClassGroupIds;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n  var classGroupsInConflict = new Set();\n  return classList.trim().split(SPLIT_CLASSES_REGEX).map(function (originalClassName) {\n    var _splitModifiers = splitModifiers(originalClassName),\n      modifiers = _splitModifiers.modifiers,\n      hasImportantModifier = _splitModifiers.hasImportantModifier,\n      baseClassName = _splitModifiers.baseClassName,\n      maybePostfixModifierPosition = _splitModifiers.maybePostfixModifierPosition;\n    var classGroupId = getClassGroupId(maybePostfixModifierPosition ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    var hasPostfixModifier = Boolean(maybePostfixModifierPosition);\n    if (!classGroupId) {\n      if (!maybePostfixModifierPosition) {\n        return {\n          isTailwindClass: false,\n          originalClassName: originalClassName\n        };\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        return {\n          isTailwindClass: false,\n          originalClassName: originalClassName\n        };\n      }\n      hasPostfixModifier = false;\n    }\n    var variantModifier = sortModifiers(modifiers).join(':');\n    var modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    return {\n      isTailwindClass: true,\n      modifierId: modifierId,\n      classGroupId: classGroupId,\n      originalClassName: originalClassName,\n      hasPostfixModifier: hasPostfixModifier\n    };\n  }).reverse()\n  // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n  .filter(function (parsed) {\n    if (!parsed.isTailwindClass) {\n      return true;\n    }\n    var modifierId = parsed.modifierId,\n      classGroupId = parsed.classGroupId,\n      hasPostfixModifier = parsed.hasPostfixModifier;\n    var classId = modifierId + classGroupId;\n    if (classGroupsInConflict.has(classId)) {\n      return false;\n    }\n    classGroupsInConflict.add(classId);\n    getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach(function (group) {\n      return classGroupsInConflict.add(modifierId + group);\n    });\n    return true;\n  }).reverse().map(function (parsed) {\n    return parsed.originalClassName;\n  }).join(' ');\n}\n\nexport { mergeClassList };\n//# sourceMappingURL=merge-classlist.mjs.map\n","import { createConfigUtils } from './config-utils.mjs';\nimport { mergeClassList } from './merge-classlist.mjs';\nimport { twJoin } from './tw-join.mjs';\n\nfunction createTailwindMerge() {\n  for (var _len = arguments.length, createConfig = new Array(_len), _key = 0; _key < _len; _key++) {\n    createConfig[_key] = arguments[_key];\n  }\n  var configUtils;\n  var cacheGet;\n  var cacheSet;\n  var functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    var firstCreateConfig = createConfig[0],\n      restCreateConfig = createConfig.slice(1);\n    var config = restCreateConfig.reduce(function (previousConfig, createConfigCurrent) {\n      return createConfigCurrent(previousConfig);\n    }, firstCreateConfig());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    var cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    var result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\n\nexport { createTailwindMerge };\n//# sourceMappingURL=create-tailwind-merge.mjs.map\n","function fromTheme(key) {\n  var themeGetter = function themeGetter(theme) {\n    return theme[key] || [];\n  };\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n}\n\nexport { fromTheme };\n//# sourceMappingURL=from-theme.mjs.map\n","var arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nvar fractionRegex = /^\\d+\\/\\d+$/;\nvar stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nvar tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nvar lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\n// Shadow always begins with x and y offset separated by underscore\nvar shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nfunction isLength(value) {\n  return isNumber(value) || stringLengths.has(value) || fractionRegex.test(value) || isArbitraryLength(value);\n}\nfunction isArbitraryLength(value) {\n  return getIsArbitraryValue(value, 'length', isLengthOnly);\n}\nfunction isArbitrarySize(value) {\n  return getIsArbitraryValue(value, 'size', isNever);\n}\nfunction isArbitraryPosition(value) {\n  return getIsArbitraryValue(value, 'position', isNever);\n}\nfunction isArbitraryUrl(value) {\n  return getIsArbitraryValue(value, 'url', isUrl);\n}\nfunction isArbitraryNumber(value) {\n  return getIsArbitraryValue(value, 'number', isNumber);\n}\n/**\n * @deprecated Will be removed in next major version. Use `isArbitraryNumber` instead.\n */\nvar isArbitraryWeight = isArbitraryNumber;\nfunction isNumber(value) {\n  return !Number.isNaN(Number(value));\n}\nfunction isPercent(value) {\n  return value.endsWith('%') && isNumber(value.slice(0, -1));\n}\nfunction isInteger(value) {\n  return isIntegerOnly(value) || getIsArbitraryValue(value, 'number', isIntegerOnly);\n}\nfunction isArbitraryValue(value) {\n  return arbitraryValueRegex.test(value);\n}\nfunction isAny() {\n  return true;\n}\nfunction isTshirtSize(value) {\n  return tshirtUnitRegex.test(value);\n}\nfunction isArbitraryShadow(value) {\n  return getIsArbitraryValue(value, '', isShadow);\n}\nfunction getIsArbitraryValue(value, label, testValue) {\n  var result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return result[1] === label;\n    }\n    return testValue(result[2]);\n  }\n  return false;\n}\nfunction isLengthOnly(value) {\n  return lengthUnitRegex.test(value);\n}\nfunction isNever() {\n  return false;\n}\nfunction isUrl(value) {\n  return value.startsWith('url(');\n}\nfunction isIntegerOnly(value) {\n  return Number.isInteger(Number(value));\n}\nfunction isShadow(value) {\n  return shadowRegex.test(value);\n}\n\nexport { isAny, isArbitraryLength, isArbitraryNumber, isArbitraryPosition, isArbitraryShadow, isArbitrarySize, isArbitraryUrl, isArbitraryValue, isArbitraryWeight, isInteger, isLength, isNumber, isPercent, isTshirtSize };\n//# sourceMappingURL=validators.mjs.map\n","import { fromTheme } from './from-theme.mjs';\nimport { isAny, isLength, isTshirtSize, isArbitraryValue, isPercent, isArbitraryLength, isInteger, isArbitraryNumber, isNumber, isArbitraryPosition, isArbitrarySize, isArbitraryUrl, isArbitraryShadow } from './validators.mjs';\n\nfunction getDefaultConfig() {\n  var colors = fromTheme('colors');\n  var spacing = fromTheme('spacing');\n  var blur = fromTheme('blur');\n  var brightness = fromTheme('brightness');\n  var borderColor = fromTheme('borderColor');\n  var borderRadius = fromTheme('borderRadius');\n  var borderSpacing = fromTheme('borderSpacing');\n  var borderWidth = fromTheme('borderWidth');\n  var contrast = fromTheme('contrast');\n  var grayscale = fromTheme('grayscale');\n  var hueRotate = fromTheme('hueRotate');\n  var invert = fromTheme('invert');\n  var gap = fromTheme('gap');\n  var gradientColorStops = fromTheme('gradientColorStops');\n  var gradientColorStopPositions = fromTheme('gradientColorStopPositions');\n  var inset = fromTheme('inset');\n  var margin = fromTheme('margin');\n  var opacity = fromTheme('opacity');\n  var padding = fromTheme('padding');\n  var saturate = fromTheme('saturate');\n  var scale = fromTheme('scale');\n  var sepia = fromTheme('sepia');\n  var skew = fromTheme('skew');\n  var space = fromTheme('space');\n  var translate = fromTheme('translate');\n  var getOverscroll = function getOverscroll() {\n    return ['auto', 'contain', 'none'];\n  };\n  var getOverflow = function getOverflow() {\n    return ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  };\n  var getSpacingWithAutoAndArbitrary = function getSpacingWithAutoAndArbitrary() {\n    return ['auto', isArbitraryValue, spacing];\n  };\n  var getSpacingWithArbitrary = function getSpacingWithArbitrary() {\n    return [isArbitraryValue, spacing];\n  };\n  var getLengthWithEmpty = function getLengthWithEmpty() {\n    return ['', isLength];\n  };\n  var getNumberWithAutoAndArbitrary = function getNumberWithAutoAndArbitrary() {\n    return ['auto', isNumber, isArbitraryValue];\n  };\n  var getPositions = function getPositions() {\n    return ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  };\n  var getLineStyles = function getLineStyles() {\n    return ['solid', 'dashed', 'dotted', 'double', 'none'];\n  };\n  var getBlendModes = function getBlendModes() {\n    return ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity', 'plus-lighter'];\n  };\n  var getAlign = function getAlign() {\n    return ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\n  };\n  var getZeroAndEmpty = function getZeroAndEmpty() {\n    return ['', '0', isArbitraryValue];\n  };\n  var getBreaks = function getBreaks() {\n    return ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  };\n  var getNumber = function getNumber() {\n    return [isNumber, isArbitraryNumber];\n  };\n  var getNumberAndArbitrary = function getNumberAndArbitrary() {\n    return [isNumber, isArbitraryValue];\n  };\n  return {\n    cacheSize: 500,\n    theme: {\n      colors: [isAny],\n      spacing: [isLength],\n      blur: ['none', '', isTshirtSize, isArbitraryValue],\n      brightness: getNumber(),\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n      borderSpacing: getSpacingWithArbitrary(),\n      borderWidth: getLengthWithEmpty(),\n      contrast: getNumber(),\n      grayscale: getZeroAndEmpty(),\n      hueRotate: getNumberAndArbitrary(),\n      invert: getZeroAndEmpty(),\n      gap: getSpacingWithArbitrary(),\n      gradientColorStops: [colors],\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\n      inset: getSpacingWithAutoAndArbitrary(),\n      margin: getSpacingWithAutoAndArbitrary(),\n      opacity: getNumber(),\n      padding: getSpacingWithArbitrary(),\n      saturate: getNumber(),\n      scale: getNumber(),\n      sepia: getZeroAndEmpty(),\n      skew: getNumberAndArbitrary(),\n      space: getSpacingWithArbitrary(),\n      translate: getSpacingWithArbitrary()\n    },\n    classGroups: {\n      // Layout\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       */\n      container: ['container'],\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      \"float\": [{\n        \"float\": ['right', 'left', 'none']\n      }],\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none']\n      }],\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: [].concat(getPositions(), [isArbitraryValue])\n      }],\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: [inset]\n      }],\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: [inset]\n      }],\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: [inset]\n      }],\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: [inset]\n      }],\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: [inset]\n      }],\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: [inset]\n      }],\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: ['auto', isInteger]\n      }],\n      // Flexbox and Grid\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: getSpacingWithAutoAndArbitrary()\n      }],\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger]\n      }],\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: ['full', isInteger]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: [gap]\n      }],\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: ['normal'].concat(getAlign())\n      }],\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal'].concat(getAlign(), ['baseline'])\n      }],\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': [].concat(getAlign(), ['baseline'])\n      }],\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: [padding]\n      }],\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: [padding]\n      }],\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: [padding]\n      }],\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: [padding]\n      }],\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: [padding]\n      }],\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: [padding]\n      }],\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: [padding]\n      }],\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: [padding]\n      }],\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: [padding]\n      }],\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: [margin]\n      }],\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: [margin]\n      }],\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: [margin]\n      }],\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: [margin]\n      }],\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: [margin]\n      }],\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: [margin]\n      }],\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: [margin]\n      }],\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: [margin]\n      }],\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: [margin]\n      }],\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: ['auto', 'min', 'max', 'fit', isArbitraryValue, spacing]\n      }],\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': ['min', 'max', 'fit', isArbitraryValue, isLength]\n      }],\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': ['0', 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize, isArbitraryValue]\n      }],\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit']\n      }],\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': ['min', 'max', 'fit', isArbitraryValue, isLength]\n      }],\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit']\n      }],\n      // Typography\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\n      }],\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryValue]\n      }],\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\n      }],\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isArbitraryValue, isLength]\n      }],\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryValue]\n      }],\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n      /**\n       * Placeholder Opacity\n       * @see https://tailwindcss.com/docs/placeholder-opacity\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n      /**\n       * Text Opacity\n       * @see https://tailwindcss.com/docs/text-opacity\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [].concat(getLineStyles(), ['wavy'])\n      }],\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength]\n      }],\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isArbitraryValue, isLength]\n      }],\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: getSpacingWithArbitrary()\n      }],\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryValue]\n      }],\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      \"break\": [{\n        \"break\": ['normal', 'words', 'all', 'keep']\n      }],\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\n       * Background Opacity\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/background-opacity\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: [].concat(getPositions(), [isArbitraryPosition])\n      }],\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryUrl]\n      }],\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': [borderRadius]\n      }],\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': [borderRadius]\n      }],\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': [borderRadius]\n      }],\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': [borderRadius]\n      }],\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': [borderRadius]\n      }],\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': [borderWidth]\n      }],\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': [borderWidth]\n      }],\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n      /**\n       * Border Opacity\n       * @see https://tailwindcss.com/docs/border-opacity\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [].concat(getLineStyles(), ['hidden'])\n      }],\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\n       * Divide Opacity\n       * @see https://tailwindcss.com/docs/divide-opacity\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/divide-style\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: [''].concat(getLineStyles())\n      }],\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isArbitraryValue, isLength]\n      }],\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: [isLength]\n      }],\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w': [{\n        ring: getLengthWithEmpty()\n      }],\n      /**\n       * Ring Width Inset\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/ring-color\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n      /**\n       * Ring Opacity\n       * @see https://tailwindcss.com/docs/ring-opacity\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n      /**\n       * Ring Offset Width\n       * @see https://tailwindcss.com/docs/ring-offset-width\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength]\n      }],\n      /**\n       * Ring Offset Color\n       * @see https://tailwindcss.com/docs/ring-offset-color\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow-color\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': getBlendModes()\n      }],\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n      /**\n       * Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: [blur]\n      }],\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: [invert]\n      }],\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n      /**\n       * Backdrop Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': [borderSpacing]\n      }],\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': [borderSpacing]\n      }],\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': [borderSpacing]\n      }],\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // Transitions and Animation\n      /**\n       * Tranisition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: getNumberAndArbitrary()\n      }],\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: getNumberAndArbitrary()\n      }],\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: [scale]\n      }],\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: ['appearance-none'],\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'pinch-zoom', 'manipulation', {\n          pan: ['x', 'left', 'right', 'y', 'up', 'down']\n        }]\n      }],\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: [colors, 'none']\n      }],\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isLength, isArbitraryNumber]\n      }],\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: [colors, 'none']\n      }],\n      // Accessibility\n      /**\n       * Screen Readers\n       * @see https://tailwindcss.com/docs/screen-readers\n       */\n      sr: ['sr-only', 'not-sr-only']\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    }\n  };\n}\n\nexport { getDefaultConfig };\n//# sourceMappingURL=default-config.mjs.map\n","import { createTailwindMerge } from './create-tailwind-merge.mjs';\nimport { getDefaultConfig } from './default-config.mjs';\n\nvar twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\n\nexport { twMerge };\n//# sourceMappingURL=tw-merge.mjs.map\n","import { clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs))\n}","import * as React from \"react\"\nimport { cn } from \"@lib/utils\"\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter }","/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\"\nimport { cn } from \"../../lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Button = React.forwardRef(({ className, variant, size, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n  return (\n    <Comp\n      className={cn(buttonVariants({ variant, size, className }))}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }","import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\n  return (\n    <input\n      type={type}\n      className={cn(\n        \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-1 text-sm shadow-sm transition-colors\",\n        \"file:border-0 file:bg-transparent file:text-sm file:font-medium\",\n        \"placeholder:text-muted-foreground\",\n        \"focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring\",\n        \"disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nInput.displayName = \"Input\"\n\nexport { Input }","// Platform Detection Utility\n// Detects user's platform and determines feature availability\n\n/**\n * Detect the user's operating system\n * @returns {string} Operating system name\n */\nexport const detectOS = () => {\n  if (typeof window === 'undefined') return 'unknown';\n\n  const userAgent = window.navigator.userAgent.toLowerCase();\n\n  if (userAgent.includes('android')) return 'android';\n  if (userAgent.includes('iphone') || userAgent.includes('ipad') || userAgent.includes('ipod')) return 'ios';\n  if (userAgent.includes('mac')) return 'macos';\n  if (userAgent.includes('win')) return 'windows';\n  if (userAgent.includes('linux')) return 'linux';\n\n  return 'unknown';\n};\n\n/**\n * Check if the current platform is mobile\n * @returns {boolean} True if mobile platform\n */\nexport const isMobile = () => {\n  const os = detectOS();\n  return os === 'android' || os === 'ios';\n};\n\n/**\n * Check if songbook folder features should be available\n * @returns {boolean} True if folder opening is supported\n */\nexport const supportsFolderOpening = () => {\n  const os = detectOS();\n  return ['windows', 'macos', 'linux'].includes(os);\n};\n\n/**\n * Get a user-friendly platform name\n * @returns {string} Platform display name\n */\nexport const getPlatformDisplayName = () => {\n  const os = detectOS();\n  const displayNames = {\n    'android': 'Android',\n    'ios': 'iOS',\n    'macos': 'macOS',\n    'windows': 'Windows',\n    'linux': 'Linux',\n    'unknown': 'Unknown'\n  };\n  return displayNames[os] || 'Unknown';\n};\n\n/**\n * Check if we're running on mobile using additional checks\n * @returns {boolean} True if mobile device detected\n */\nexport const isMobileDevice = () => {\n  if (typeof window === 'undefined') return false;\n\n  // Check multiple indicators for mobile\n  const userAgent = window.navigator.userAgent.toLowerCase();\n  const isMobileUA = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent);\n  const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  const isSmallScreen = window.innerWidth <= 768;\n\n  return isMobileUA || (isTouchDevice && isSmallScreen);\n};\n\nexport default {\n  detectOS,\n  isMobile,\n  supportsFolderOpening,\n  getPlatformDisplayName,\n  isMobileDevice\n};","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\nimport { cn } from \"@lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogOverlay = React.forwardRef(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}","import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nconst Textarea = React.forwardRef(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\n\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea } ","import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nconst Label = React.forwardRef(({ className, ...props }, ref) => (\n  <label\n    ref={ref}\n    className={cn(\n      \"text-sm font-medium leading-none text-gray-300 peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n      className\n    )}\n    {...props}\n  />\n))\n\nLabel.displayName = \"Label\"\n\nexport { Label } ","import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\nconst TooltipRoot = TooltipPrimitive.Root\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className=\"z-50 overflow-hidden rounded-md bg-gray-900 px-3 py-1.5 text-sm text-gray-50 shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\"\n    {...props}\n  />\n))\nTooltipContent.displayName = \"TooltipContent\"\n\nconst Tooltip = TooltipRoot\n\nexport {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n  TooltipProvider,\n} ","import { useState, useEffect } from 'react';\nimport { trackItemOperation, trackContentUpdate } from '../utils/analytics';\nimport { supportsFolderOpening } from '../utils/platform';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from '@ui/dialog';\nimport { Button } from '@ui/button';\nimport { Input } from '@ui/input';\nimport { Textarea } from '@ui/textarea';\nimport { Label } from '@ui/label';\nimport { Loader2, Book } from 'lucide-react';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@ui/tooltip\";\n\nexport const ItemEditor = ({ open, onOpenChange, item = null, onItemChange }) => {\n  const [formData, setFormData] = useState({\n    'C': '',\n    'D': '',\n    'E': 5,\n    'F': '',\n    'G': '',\n    'H': '',\n  });\n  const [error, setError] = useState(null);\n  const [isDirty, setIsDirty] = useState(false);\n\n  // Clear error and load item data when modal opens\n  useEffect(() => {\n    if (open) {\n      if (item) {\n        // Editing existing item\n        // If we have a complete item (with all fields), use it directly\n        if (item['D'] !== undefined || item['H'] !== undefined) {\n          setFormData({\n            'C': item['C'] || '',\n            'D': item['D'] || '',\n            'E': item['E'] || 5,\n            'F': item['F'] || '',\n            'G': item['G'] || '',\n            'H': item['H'] || '',\n          });\n          setError(null);\n          setIsDirty(false);\n        } else {\n          // We have a lightweight item (only ID and Title), need to fetch full data\n          fetchFullItemData(item['A']);\n        }\n      } else {\n        // Creating new item - reset to defaults\n        setFormData({\n          'C': '',\n          'D': '',\n          'E': 5,\n          'F': '',\n          'G': '',\n          'H': '',\n        });\n        setError(null);\n        setIsDirty(false);\n      }\n    }\n  }, [open, item]);\n\n  const fetchFullItemData = async (itemId) => {\n    try {\n      const response = await fetch(`/api/items/${itemId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch item details');\n      }\n      const fullItem = await response.json();\n      \n      setFormData({\n        'C': fullItem['C'] || '',\n        'D': fullItem['D'] || '',\n        'E': fullItem['E'] || 5,\n        'F': fullItem['F'] || '',\n        'G': fullItem['G'] || '',\n        'H': fullItem['H'] || '',\n      });\n      setError(null);\n      setIsDirty(false);\n    } catch (err) {\n      setError(`Failed to load item: ${err.message}`);\n      console.error('Fetch item error:', err);\n    }\n  };\n\n  const handleFormChange = (field, value) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    setIsDirty(true);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const { G: _G, ...dataToSend } = formData;\n      \n      // Ensure no trailing slash and handle empty item ID case\n      const baseUrl = '/api/items';\n      const url = item?.['A'] ? `${baseUrl}/${item['A']}` : baseUrl;\n      \n      const response = await fetch(url, {\n        method: item ? 'PUT' : 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(dataToSend),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => null);\n        throw new Error(errorData?.error || 'Failed to save item');\n      }\n\n      const savedItem = await response.json();\n      \n      // Track item creation or update\n      const isCreating = !item?.['A'];\n      const itemName = formData['C'] || 'Unnamed Item';\n      \n      if (isCreating) {\n        trackItemOperation('created', 'item', itemName);\n      } else {\n        trackItemOperation('updated', 'item', itemName);\n        \n        // Track specific content updates if this is an edit\n        const originalNotes = item?.['D'] || '';\n        const originalTuning = item?.['H'] || '';\n        const originalSongbook = item?.['I'] || '';\n\n        if (formData['D'] && formData['D'] !== originalNotes) {\n          trackContentUpdate('notes', itemName);\n        }\n        if (formData['H'] && formData['H'] !== originalTuning) {\n          trackContentUpdate('tuning', itemName);\n        }\n        if (formData['I'] && formData['I'] !== originalSongbook) {\n          trackContentUpdate('folder_path', itemName);\n        }\n      }\n      \n      onItemChange?.(savedItem);\n      onOpenChange(false);\n    } catch (err) {\n      setError(err.message);\n      console.error('Save error:', err);\n    }\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-2xl bg-gray-800\">\n        <DialogHeader>\n          <DialogTitle>\n            {item ? `Edit item: ${item['C']}` : 'Create new item'}\n          </DialogTitle>\n          <DialogDescription>\n            Edit the details of your practice item\n          </DialogDescription>\n          {error && (\n            <div className=\"mt-2 text-sm text-red-500\" role=\"alert\">\n              {error}\n            </div>\n          )}\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"title\">Title</Label>\n            <Input\n              id=\"title\"\n              value={formData['C']}\n              onChange={(e) => handleFormChange('C', e.target.value)}\n              placeholder=\"Enter item title\"\n              required\n              className=\"bg-gray-900 text-white\"\n              autoComplete=\"off\"\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"duration\">Duration</Label>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"flex-1\">\n                <Input\n                  id=\"duration-minutes\"\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"999\"\n                  value={Math.floor(formData['E'])}\n                  onChange={(e) => {\n                    const mins = parseInt(e.target.value) || 0;\n                    const secs = (formData['E'] % 1) * 60;\n                    handleFormChange('E', mins + (secs / 60));\n                  }}\n                  onInput={(e) => {\n                    const mins = parseInt(e.target.value) || 0;\n                    const secs = (formData['E'] % 1) * 60;\n                    handleFormChange('E', mins + (secs / 60));\n                  }}\n                  className=\"bg-gray-900 text-white text-center\"\n                  autoComplete=\"off\"\n                  placeholder=\"0\"\n                />\n                <div className=\"text-xs text-gray-400 text-center mt-1\">minutes</div>\n              </div>\n              <span className=\"text-xl text-gray-400\">:</span>\n              <div className=\"flex-1\">\n                <div className=\"relative\">\n                  <Input\n                    id=\"duration-seconds\"\n                    type=\"text\"\n                    inputMode=\"numeric\"\n                    pattern=\"[0-9]*\"\n                    value={Math.round((formData['E'] % 1) * 60)}\n                    onChange={(e) => {\n                      const value = e.target.value.replace(/[^0-9]/g, '');\n                      const secs = Math.min(59, parseInt(value) || 0);\n                      const mins = Math.floor(formData['E']);\n                      handleFormChange('E', mins + (secs / 60));\n                    }}\n                    className=\"bg-gray-900 text-white text-center pr-6\"\n                    autoComplete=\"off\"\n                    placeholder=\"00\"\n                  />\n                  <div className=\"absolute right-0 top-0 flex flex-col h-full border-l border-gray-700\">\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const currentSecs = Math.round((formData['E'] % 1) * 60);\n                        const newSecs = Math.min(59, currentSecs + 15);\n                        const mins = Math.floor(formData['E']);\n                        handleFormChange('E', mins + (newSecs / 60));\n                      }}\n                      className=\"flex-1 px-1 text-gray-400 hover:text-white hover:bg-gray-700 text-xs leading-none\"\n                    >\n                      ▲\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const currentSecs = Math.round((formData['E'] % 1) * 60);\n                        const newSecs = Math.max(0, currentSecs - 15);\n                        const mins = Math.floor(formData['E']);\n                        handleFormChange('E', mins + (newSecs / 60));\n                      }}\n                      className=\"flex-1 px-1 text-gray-400 hover:text-white hover:bg-gray-700 text-xs leading-none border-t border-gray-700\"\n                    >\n                      ▼\n                    </button>\n                  </div>\n                </div>\n                <div className=\"text-xs text-gray-400 text-center mt-1\">seconds</div>\n              </div>\n            </div>\n            <div className=\"text-xs text-gray-500 mt-1\">\n              Total: {Math.floor(formData['E'])} min {Math.round((formData['E'] % 1) * 60)} sec\n            </div>\n          </div>\n\n          {/* Songbook folder field - only show on desktop platforms */}\n          {supportsFolderOpening() && (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"songbook\">Songbook folder</Label>\n              <Input\n                id=\"songbook\"\n                value={formData['F']}\n                onChange={(e) => handleFormChange('F', e.target.value)}\n                placeholder=\"D:\\Users\\Steven\\Documents\\Guitar\\Songbook\\SongName\"\n                className=\"bg-gray-900 font-mono\"\n              />\n            </div>\n          )}\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"tuning\">Tuning</Label>\n            <Input\n              id=\"tuning\"\n              value={formData['H']}\n              onChange={(e) => handleFormChange('H', e.target.value)}\n              placeholder=\"e.g. EADGBE\"\n              className=\"bg-gray-900 text-white\"\n              autoComplete=\"off\"\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"notes\">Notes</Label>\n            <Textarea\n              id=\"notes\"\n              value={formData['D']}\n              onChange={(e) => handleFormChange('D', e.target.value)}\n              placeholder=\"Enter any notes\"\n              className=\"h-24 bg-gray-900 text-white\"\n              autoComplete=\"off\"\n            />\n          </div>\n\n          <div className=\"flex justify-end space-x-4\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n              className=\"text-gray-300 hover:text-white\"\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              className=\"bg-blue-600 hover:bg-blue-700\"\n              disabled={!isDirty}\n            >\n              Save\n            </Button>\n          </div>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport const BulkSongbookUpdate = ({ onComplete }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [paths, setPaths] = useState('');\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [result, setResult] = useState(null);\n\n  // Don't render on mobile platforms\n  if (!supportsFolderOpening()) {\n    return null;\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsUpdating(true);\n    try {\n      const response = await fetch('/api/items/update-songbook-paths', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          paths: paths.split('\\n').filter(p => p.trim()),\n        }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setResult(data);\n        onComplete?.();\n      } else {\n        throw new Error(data.error || 'Failed to update paths');\n      }\n    } catch (err) {\n      console.error('Update error:', err);\n      setResult({ error: err.message });\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  return (\n    <>\n      <TooltipProvider>\n        <Tooltip>\n          <TooltipTrigger asChild>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => setIsOpen(true)}\n              className=\"text-gray-400 hover:text-gray-200\"\n            >\n              <Book className=\"h-4 w-4\" />\n            </Button>\n          </TooltipTrigger>\n          <TooltipContent>\n            <p>Bulk update songbook paths</p>\n          </TooltipContent>\n        </Tooltip>\n      </TooltipProvider>\n\n      <Dialog open={isOpen} onOpenChange={setIsOpen}>\n        <DialogContent className=\"max-w-2xl bg-gray-800\">\n          <DialogHeader>\n            <DialogTitle>Bulk update songbook paths</DialogTitle>\n            <DialogDescription>\n              Paste your folder paths, one per line\n            </DialogDescription>\n          </DialogHeader>\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"paths\">Folder paths</Label>\n              <Textarea\n                id=\"paths\"\n                value={paths}\n                onChange={(e) => setPaths(e.target.value)}\n                placeholder=\"D:\\Path\\To\\Songbook\\Folder\"\n                className=\"h-64 bg-gray-900 text-white font-mono\"\n                disabled={isUpdating}\n              />\n            </div>\n\n            {result && (\n              <div className={`text-sm ${result.error ? 'text-red-500' : 'text-green-500'}`}>\n                {result.error ? result.error : `Updated ${result.updated_count} items successfully!`}\n              </div>\n            )}\n\n            <div className=\"flex justify-end space-x-4\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => setIsOpen(false)}\n                className=\"text-gray-300 hover:text-white\"\n                disabled={isUpdating}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                className=\"bg-blue-600 hover:bg-blue-700\"\n                disabled={isUpdating || !paths.trim()}\n              >\n                {isUpdating ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Updating...\n                  </>\n                ) : (\n                  'Update paths'\n                )}\n              </Button>\n            </div>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ItemEditor; ","import { useState, useEffect } from 'react';\n\nexport const usePracticeItems = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [version, setVersion] = useState(0);\n\n  // Fetch items from backend\n  const fetchItems = async () => {\n    try {\n      const response = await fetch('/api/items');\n      if (!response.ok) {\n        throw new Error('Failed to fetch items');\n      }\n      const data = await response.json();\n      setItems(data);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n      console.error('Fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const refreshItems = async () => {\n    setVersion(v => v + 1); // This will trigger the useEffect\n  };\n\n  const deleteItem = async (itemId) => {\n    try {\n      const response = await fetch(`/api/items/${itemId}`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete item');\n      }\n      // Update local state immediately\n      setItems(current => current.filter(item => item['A'] !== itemId));  // Column A for ID\n      // Force a refresh to ensure sync\n      await refreshItems();\n    } catch (err) {\n      setError(err.message);\n      console.error('Delete error:', err);\n      throw err;\n    }\n  };\n\n  const handleDragEnd = async ({ active, over }) => {\n    if (active.id !== over?.id) {\n      setSortedItems((items) => {\n        const oldIndex = items.findIndex((item) => item['A'] === active.id);  // Column A for ID\n        const newIndex = items.findIndex((item) => item['A'] === over.id);    // Column A for ID\n        const reordered = arrayMove(items, oldIndex, newIndex);\n        \n        // Add order field to each item\n        const withOrder = reordered.map((item, idx) => ({\n          ...item,\n          'G': idx  // Column G for order\n        }));\n        \n        // Update backend\n        updateItems(withOrder).catch(error => {\n          console.error('Failed to update item order:', error);\n          // Revert to previous order on error\n          setSortedItems(items);\n        });\n        \n        return withOrder;\n      });\n    }\n  };\n\n  // Add new item\n  const addItem = async (newItem) => {\n    try {\n      const response = await fetch('/api/items', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newItem),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add item');\n      }\n      const addedItem = await response.json();\n      setItems([...items, addedItem]);\n      return addedItem;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  // Update item\n  const updateItem = async (itemId, updatedItem) => {\n    try {\n      const response = await fetch(`/api/items/${itemId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedItem),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update item');\n      }\n      const updated = await response.json();\n      setItems(items.map(item => \n        item['A'] === itemId ? updated : item  // Column A for ID\n      ));\n      return updated;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  const updateItems = async (updatedItems) => {\n    try {\n      const response = await fetch('/api/items/order', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedItems),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update items');\n      }\n      const data = await response.json();\n      setItems(data);\n      await refreshItems();\n      return data;\n    } catch (err) {\n      setError(err.message);\n      console.error('Update error:', err);\n      throw err;\n    }\n  };\n\n  // Fetch items on mount and when version changes\n  useEffect(() => {\n    fetchItems();\n  }, [version]);\n\n  return {\n    items,\n    loading,\n    error,\n    addItem,\n    updateItem,\n    deleteItem,\n    updateItems,\n    refreshItems\n  };\n};","import { useState, useEffect, useRef } from 'react';\nimport { Button } from '@ui/button';\nimport { Input } from '@ui/input';\n\nconst defaultChartConfig = {\n  strings: 6,\n  frets: 5,\n  fretSize: 1.2,          // Normal fret height for readability\n  fingerSize: 0.75,       // Larger finger size for better text visibility\n  sidePadding: 0.2,       // Standard padding\n  fontFamily: 'Arial',\n  // Key: set explicit dimensions that work well\n  width: 160,             // Compact width matching container\n  height: 220,            // Compact height matching container\n  // Dark theme colors for visibility\n  color: '#ffffff',           // White finger dots\n  backgroundColor: 'transparent',\n  strokeColor: '#ffffff',     // White grid lines\n  textColor: '#ffffff',       // White text\n  fretLabelColor: '#ffffff',  // White fret labels\n  // Finger text settings - using SVGuitar's correct property names\n  fingerTextColor: '#000000', // Black text on white dots for contrast\n  fingerTextSize: 28          // Larger text size for better visibility\n};\n\n// Utility function for API requests with exponential backoff\nconst fetchWithBackoff = async (url, options = {}, maxRetries = 3, onRetry = null) => {\n  for (let attempt = 0; attempt < maxRetries; attempt++) {\n    try {\n      const response = await fetch(url, options);\n      \n      // If rate limited, wait and retry\n      if (response.status === 429) {\n        const waitTime = Math.pow(2, attempt) * 1000; // 1s, 2s, 4s\n        const message = `Rate limited. Waiting ${waitTime/1000}s before retry ${attempt + 1}/${maxRetries}`;\n        \n        if (onRetry) onRetry(message);\n        await new Promise(resolve => setTimeout(resolve, waitTime));\n        continue;\n      }\n      \n      return response;\n    } catch (error) {\n      if (attempt === maxRetries - 1) throw error;\n      \n      const waitTime = Math.pow(2, attempt) * 1000;\n      const message = `Request failed. Waiting ${waitTime/1000}s before retry ${attempt + 1}/${maxRetries}`;\n      \n      if (onRetry) onRetry(message);\n      await new Promise(resolve => setTimeout(resolve, waitTime));\n    }\n  }\n  \n  throw new Error(`Failed after ${maxRetries} attempts`);\n};\n\nexport const ChordChartEditor = ({ itemId, onSave, onCancel, editingChordId = null, insertionContext = null, defaultTuning = 'EADGBE' }) => {\n  const [title, setTitle] = useState('');\n  const [startingFret, setStartingFret] = useState(1);\n  const [numFrets, setNumFrets] = useState(5);\n  const [numStrings, setNumStrings] = useState(6);\n  const [editMode, setEditMode] = useState('dots');\n  \n  // Keep ref in sync with state\n  useEffect(() => {\n    editModeRef.current = editMode;\n  }, [editMode]);\n  const [tuning, setTuning] = useState(defaultTuning);\n  const [capo, setCapo] = useState(0);\n  \n  // Chord data state\n  const [fingers, setFingers] = useState([]); // Start with empty chord\n  const [barres, setBarres] = useState([]);\n  \n  // Debug barres state changes\n  useEffect(() => {\n  }, [barres]);\n  const [openStrings, setOpenStrings] = useState(new Set()); // Track open strings (0)\n  const [mutedStrings, setMutedStrings] = useState(new Set()); // Track muted strings (x)\n  const [isLoadingChord, setIsLoadingChord] = useState(false); // Loading state for API requests\n  const [showAdvancedSettings, setShowAdvancedSettings] = useState(false); // Toggle for advanced settings\n  const [selectedFinger, setSelectedFinger] = useState(null); // Track selected finger for number input [string, fret]\n  const [addLineBreak, setAddLineBreak] = useState(false); // Whether to add line break after this chord\n\n  const editorChartRef = useRef(null);\n  const resultChartRef = useRef(null);\n  const editorContainerRef = useRef(null);\n  const editModeRef = useRef(editMode);\n  const lastChordDataRef = useRef(null);\n\n  // Autofill function to copy existing chord fingerings\n  const tryAutofill = async (chordName) => {\n    if (!chordName.trim() || !itemId) return;\n    \n    try {\n      setIsLoadingChord(true);\n      \n      // Fetch existing chord charts for this item\n      const response = await fetchWithBackoff(`/api/items/${itemId}/chord-charts`, {}, 3, 1000);\n      if (!response.ok) {\n        return;\n      }\n      \n      const existingChords = await response.json();\n      \n      // Find matching chord name (case-insensitive)\n      const matches = existingChords.filter(chart => \n        chart.title.toLowerCase() === chordName.toLowerCase()\n      );\n      \n      let chordToUse;\n      \n      if (matches.length === 0) {\n        \n        // Fallback: Search common chords database for specific chord\n        try {\n          \n          // Add a reasonable delay to avoid rapid API calls\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          const searchResponse = await fetchWithBackoff(`/api/chord-charts/common/search?name=${encodeURIComponent(chordName)}`, {}, 3, 1000);\n          \n          if (searchResponse.ok) {\n            const commonMatches = await searchResponse.json();\n            \n            // commonMatches is already filtered by the backend\n            \n            if (commonMatches.length > 0) {\n              // Use the first common chord match (they should be curated)\n              chordToUse = commonMatches[0];\n            } else {\n              // Don't return early - let the finally block clean up\n            }\n          } else {\n            // Don't fail completely - let the finally block clean up\n          }\n        } catch (commonError) {\n          console.error('Error fetching common chords:', commonError);\n          // Don't fail completely - let the finally block clean up\n        }\n      } else {\n        // Found existing chords for this item\n        if (matches.length === 1) {\n          chordToUse = matches[0];\n        } else {\n          // Multiple matches - use the first one (earliest in order/ID)\n          // Sort by order (or ID if order is the same) and take the first one\n          matches.sort((a, b) => {\n            const orderA = parseInt(a.order) || 0;\n            const orderB = parseInt(b.order) || 0;\n            if (orderA !== orderB) return orderA - orderB;\n            // If order is the same, use ID as tiebreaker\n            return (parseInt(a.id) || 0) - (parseInt(b.id) || 0);\n          });\n          chordToUse = matches[0]; // Take the first (earliest)\n        }\n      }\n      \n      // Populate editor with existing chord data\n      if (chordToUse) {\n        setStartingFret(chordToUse.startingFret || 1);\n        setNumFrets(chordToUse.numFrets || 5);\n        setNumStrings(chordToUse.numStrings || 6);\n        setTuning(chordToUse.tuning || defaultTuning);\n        setCapo(chordToUse.capo || 0);\n        \n        // Convert finger objects to [string, fret, fingerNumber] arrays if needed\n        const fingersData = chordToUse.fingers || [];\n        const normalizedFingers = fingersData.map(finger => {\n          // If it's already an array, ensure 3 elements\n          if (Array.isArray(finger)) {\n            const [s, f, num] = finger;\n            return [s, f, num]; // Keep all 3 elements (num might be undefined)\n          }\n          // If it's an object with string/fret properties, convert to array\n          if (finger && typeof finger === 'object' && 'string' in finger && 'fret' in finger) {\n            // Preserve finger number if it exists\n            const fingerNum = finger.fingerNumber || finger[2];\n            return [finger.string, finger.fret, fingerNum]; // Always 3 elements\n          }\n          // Fallback: assume it's already in the right format but ensure 3 elements\n          const [s, f, num] = Array.isArray(finger) ? finger : [finger[0], finger[1], finger[2]];\n          return [s, f, num];\n        });\n        \n        setFingers(normalizedFingers);\n        \n        // Handle barres from autofill - they should be stored correctly already\n        const autofillBarres = chordToUse.barres || [];\n        \n        setBarres(autofillBarres);\n        setOpenStrings(new Set(chordToUse.openStrings || []));\n        setMutedStrings(new Set(chordToUse.mutedStrings || []));\n        // IMPORTANT: Never copy line break state during autofill - it's chord-specific, not shape-specific\n        setAddLineBreak(false);\n      }\n      \n    } catch (error) {\n      console.error('Error during autofill:', error);\n    } finally {\n      setIsLoadingChord(false);\n    }\n  };\n\n  // Load existing chord data when editing\n  useEffect(() => {\n    if (editingChordId && itemId) {\n      const loadChordForEditing = async () => {\n        try {\n          setIsLoadingChord(true);\n          \n          const response = await fetchWithBackoff(`/api/items/${itemId}/chord-charts`);\n          if (response.ok) {\n            const chords = await response.json();\n            // Convert editingChordId to same type as chord.id for comparison\n            const chordToEdit = chords.find(chord => \n              parseInt(chord.id) === parseInt(editingChordId)\n            );\n            \n            if (chordToEdit) {\n              console.log('Loading chord for editing:', {\n                id: chordToEdit.id,\n                title: chordToEdit.title,\n                hasLineBreakAfter: chordToEdit.hasLineBreakAfter,\n                editingChordId\n              });\n\n              setTitle(chordToEdit.title || '');\n              setStartingFret(chordToEdit.startingFret || 1);\n              setNumFrets(chordToEdit.numFrets || 5);\n              setNumStrings(chordToEdit.numStrings || 6);\n              setTuning(chordToEdit.tuning || defaultTuning);\n              setCapo(chordToEdit.capo || 0);\n\n              // Load finger positions (preserve finger numbers)\n              const fingersData = chordToEdit.fingers || [];\n              const normalizedFingers = fingersData.map(finger => {\n                if (Array.isArray(finger)) {\n                  const [s, f, num] = finger;\n                  return [s, f, num]; // Ensure 3 elements (num might be undefined)\n                }\n                if (finger && typeof finger === 'object' && 'string' in finger && 'fret' in finger) {\n                  // Preserve finger number if it exists\n                  const fingerNum = finger.fingerNumber || finger[2];\n                  return [finger.string, finger.fret, fingerNum]; // Always 3 elements\n                }\n                // Fallback: ensure 3 elements\n                const [s, f, num] = Array.isArray(finger) ? finger : [finger[0], finger[1], finger[2]];\n                return [s, f, num];\n              });\n\n              setFingers(normalizedFingers);\n\n              // Handle barres - the stored barre fret numbers might need adjustment\n              // based on the loaded chord's startingFret\n              const loadedBarres = chordToEdit.barres || [];\n\n              // No need to adjust barre fret numbers when loading - they should be stored correctly\n              // The issue was in the display/click detection, not in storage\n              setBarres(loadedBarres);\n              setOpenStrings(new Set(chordToEdit.openStrings || []));\n              setMutedStrings(new Set(chordToEdit.mutedStrings || []));\n\n              // Load existing line break status with debug logging\n              const lineBreakValue = chordToEdit.hasLineBreakAfter || false;\n              console.log('Setting addLineBreak to:', lineBreakValue, 'from hasLineBreakAfter:', chordToEdit.hasLineBreakAfter);\n              setAddLineBreak(lineBreakValue);\n            } else {\n            }\n          } else {\n            console.error('Failed to fetch chord charts:', response.status);\n          }\n        } catch (error) {\n          console.error('Error loading chord for editing:', error);\n        } finally {\n          setIsLoadingChord(false);\n        }\n      };\n      \n      loadChordForEditing();\n    } else if (editingChordId) {\n    } else {\n      // Reset form when not editing (new chord)\n      setTitle('');\n      setStartingFret(1);\n      setNumFrets(5);\n      setNumStrings(6);\n      setTuning(defaultTuning);\n      setCapo(0);\n      setFingers([]);\n      setBarres([]);\n      setOpenStrings(new Set());\n      setMutedStrings(new Set());\n      setShowAdvancedSettings(false); // Reset to collapsed for new chords\n      setAddLineBreak(false); // Reset line break option\n    }\n  }, [editingChordId, itemId, defaultTuning]);\n\n  // Initialize SVGuitar\n  useEffect(() => {\n    // Load SVGuitar UMD script if not already loaded\n    if (!window.svguitar) {\n      const script = document.createElement('script');\n      script.src = '/static/js/svguitar.es5.js';  // Use local version\n      script.async = true;\n      script.onload = () => {\n        initializeCharts();\n      };\n      document.body.appendChild(script);\n    } else {\n      initializeCharts();\n    }\n    \n    // Cleanup on unmount\n    return () => {\n      if (currentHandlerRef.current && currentHandlerRef.current.svg) {\n        currentHandlerRef.current.svg.removeEventListener('click', currentHandlerRef.current.clickHandler);\n        currentHandlerRef.current.svg.removeEventListener('mousedown', currentHandlerRef.current.mousedownHandler);\n      }\n    };\n  }, []);\n\n  const initializeCharts = () => {\n    try {\n      editorChartRef.current = new window.svguitar.SVGuitarChord('#editor-chart');\n      resultChartRef.current = new window.svguitar.SVGuitarChord('#result-chart');\n      updateCharts();\n      setupEditorInteraction();\n    } catch (error) {\n      console.error('Error initializing charts:', error);\n    }\n  };\n\n  // Store the current event handler reference\n  const currentHandlerRef = useRef(null);\n  \n  const setupEditorInteraction = () => {\n    if (!editorContainerRef.current) {\n      return;\n    }\n\n    const svg = editorContainerRef.current.querySelector('svg');\n    if (!svg) {\n      return;\n    }\n\n    // Remove the old handlers if they exist\n    if (currentHandlerRef.current && currentHandlerRef.current.svg) {\n      currentHandlerRef.current.svg.removeEventListener('click', currentHandlerRef.current.clickHandler);\n      currentHandlerRef.current.svg.removeEventListener('mousedown', currentHandlerRef.current.mousedownHandler);\n    }\n    \n    // Prevent text selection on rapid clicks/double-clicks\n    const mousedownHandler = (event) => {\n      // Prevent text selection on multiple rapid clicks (double-click, etc.)\n      if (event.detail > 1) {\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n      }\n      \n      // Always prevent default mousedown behavior on SVG to avoid text selection\n      event.preventDefault();\n    };\n    \n    // Handle the actual click interaction\n    const clickHandler = (event) => {\n      event.stopPropagation(); // Prevent event bubbling\n      event.preventDefault();  // Prevent any remaining default behavior\n      \n      handleEditorClick(event);\n    };\n    \n    // Apply CSS user-select none to SVG for comprehensive text selection prevention\n    svg.style.userSelect = 'none';\n    svg.style.webkitUserSelect = 'none';\n    svg.style.mozUserSelect = 'none';\n    svg.style.msUserSelect = 'none';\n    \n    // Add both handlers\n    svg.addEventListener('mousedown', mousedownHandler);\n    svg.addEventListener('click', clickHandler);\n    \n    // Store references for cleanup\n    currentHandlerRef.current = { \n      svg, \n      clickHandler,\n      mousedownHandler\n    };\n  };\n\n  const handleEditorClick = (event) => {\n    if (!event || !event.currentTarget) {\n      console.error('handleEditorClick called with invalid event');\n      return;\n    }\n    \n    const currentEditMode = editModeRef.current;\n    if (currentEditMode !== 'dots' && currentEditMode !== 'fingers' && currentEditMode !== 'barres') return;\n\n    const svg = event.currentTarget;\n    const rect = svg.getBoundingClientRect();\n    \n    // Calculate coordinates relative to the SVG\n    const rawX = event.clientX - rect.left;\n    const rawY = event.clientY - rect.top;\n    \n    // Account for SVG scaling - the SVG viewBox vs actual display size\n    const svgViewBox = svg.viewBox.baseVal;\n    \n    // Check if SVG is ready - if not, retry after a short delay\n    if (!svgViewBox || svgViewBox.width === 0 || svgViewBox.height === 0 || \n        rect.width === 0 || rect.height === 0) {\n      \n      // Don't retry - just skip this click\n      return;\n    }\n    \n    const scaleX = svgViewBox.width / rect.width;\n    const scaleY = svgViewBox.height / rect.height;\n    \n    // Additional safety check for valid scale values\n    if (!isFinite(scaleX) || !isFinite(scaleY)) {\n      console.error('Invalid scale values:', { scaleX, scaleY });\n      return;\n    }\n    \n    const x = rawX * scaleX;\n    const y = rawY * scaleY;\n\n    // SVGuitar layout analysis:\n    // - There's padding around the actual fretboard\n    // - Strings are vertical lines, frets are horizontal\n    // - Frets are the spaces BETWEEN the fret wires, not the wires themselves\n    \n    // Use SVG viewBox dimensions for calculations, not display dimensions\n    const chartWidth = svgViewBox.width;\n    const chartHeight = svgViewBox.height;\n    \n    // Adjusted margins based on SVGuitar's actual layout\n    const marginX = chartWidth * 0.15;\n    \n    // Consistent margin calculation - SVGuitar uses relatively consistent top/bottom margins\n    // The position indicator doesn't significantly change the chord chart area\n    const marginY = chartHeight * 0.08;\n    \n    const fretboardWidth = chartWidth - (marginX * 2);\n    const fretboardHeight = chartHeight - (marginY * 2);\n    \n    // Check if click is outside the chart area entirely\n    if (x < marginX || x > chartWidth - marginX) {\n      return;\n    }\n    \n    // Calculate string (vertical position across width) - same for both nut and fretboard\n    const relativeX = x - marginX;\n    const stringRatio = relativeX / fretboardWidth;\n    const stringIndex = Math.floor(stringRatio * numStrings);\n    \n    if (stringIndex < 0 || stringIndex >= numStrings) {\n      return;\n    }\n    \n    // Convert to SVGuitar's string numbering (1-based, high E = 1)\n    const svguitarString = numStrings - stringIndex; // Flip the order\n    \n    // Check if click is in the nut area (above the fretboard)\n    // Nut area is above the fretboard proper \n    if (y < marginY) {\n      toggleNutMarker(svguitarString);\n      return;\n    }\n    \n    // Check if click is within fretboard area\n    // Use same adjusted marginY for bottom boundary\n    if (y > chartHeight - marginY) {\n      return;\n    }\n    \n    // Calculate fret (horizontal position down height)\n    // SVGuitar uses 1-based fret numbering relative to the chart position\n    // Map click position to the correct fret number within the visible fret range\n    const relativeY = y - marginY;\n    const fretRatio = relativeY / fretboardHeight;\n    // Remove the +1 that was causing offset issues - frets should be 1-indexed naturally\n    const fretIndex = Math.ceil(fretRatio * numFrets);\n    \n    // Debug logging to verify click positioning\n    console.log('Click debug:', { \n      rawX, rawY, x, y, svguitarString, fretIndex, \n      marginX, marginY, fretRatio, relativeY, fretboardHeight \n    });\n    \n    // SVGuitar expects fret numbers relative to the startingFret position  \n    // Ensure fretIndex is within valid bounds\n    if (fretIndex < 1 || fretIndex > numFrets) {\n      return; // Click outside valid fret range\n    }\n    \n    // Handle the click based on current edit mode\n    if (currentEditMode === 'dots') {\n      toggleFinger(svguitarString, fretIndex);\n    } else if (currentEditMode === 'fingers') {\n      selectFingerForNumbering(svguitarString, fretIndex);\n    } else if (currentEditMode === 'barres') {\n      toggleBarre(svguitarString, fretIndex);\n    }\n  };\n\n  const toggleFinger = (string, fret) => {\n    \n    // Remove any nut markers when adding a finger position\n    setOpenStrings(prev => {\n      const next = new Set(prev);\n      next.delete(string);\n      return next;\n    });\n    setMutedStrings(prev => {\n      const next = new Set(prev);\n      next.delete(string);\n      return next;\n    });\n    \n    setFingers(prev => {\n      const existingIndex = prev.findIndex((finger) => {\n        const [s, f] = finger;\n        const matches = s === string && f === fret;\n        return matches;\n      });\n      \n      if (existingIndex >= 0) {\n        // Remove existing finger\n        const newFingers = prev.filter((_, index) => index !== existingIndex);\n        return newFingers;\n      } else {\n        // Add new finger with 3-element structure for finger numbering\n        const newFingers = [...prev, [string, fret, undefined]];\n        return newFingers;\n      }\n    });\n  };\n\n  const toggleNutMarker = (stringNum) => {\n    const isOpen = openStrings.has(stringNum);\n    const isMuted = mutedStrings.has(stringNum);\n    \n    // Remove any fretted notes on this string when adding nut markers\n    setFingers(prev => prev.filter(([s]) => s !== stringNum));\n    \n    if (!isOpen && !isMuted) {\n      // State: none → open\n      setOpenStrings(prev => new Set([...prev, stringNum]));\n    } else if (isOpen) {\n      // State: open → muted\n      setOpenStrings(prev => {\n        const next = new Set(prev);\n        next.delete(stringNum);\n        return next;\n      });\n      setMutedStrings(prev => new Set([...prev, stringNum]));\n    } else if (isMuted) {\n      // State: muted → none\n      setMutedStrings(prev => {\n        const next = new Set(prev);\n        next.delete(stringNum);\n        return next;\n      });\n    }\n  };\n\n  const toggleBarre = (_string, fret) => {\n    \n    setBarres(prev => {\n      const existingIndex = prev.findIndex(barre => {\n        return barre.fret === fret;\n      });\n      \n      if (existingIndex >= 0) {\n        // Remove existing barre\n        const newBarres = prev.filter((_, index) => index !== existingIndex);\n        return newBarres;\n      } else {\n        // Add new barre\n        const newBarre = {\n          fromString: 6,\n          toString: 1,\n          fret: fret,\n          text: '1'\n        };\n        const newBarres = [...prev, newBarre];\n        return newBarres;\n      }\n    });\n  };\n\n  const selectFingerForNumbering = (string, fret) => {\n    // First ensure there's a finger at this position\n    const existingFingerIndex = fingers.findIndex(finger => {\n      const [s, f] = finger;\n      return s === string && f === fret;\n    });\n    \n    if (existingFingerIndex === -1) {\n      // No finger here, add one first but don't trigger re-render immediately\n      \n      // Remove any nut markers when adding a finger position\n      setOpenStrings(prev => {\n        const next = new Set(prev);\n        next.delete(string);\n        return next;\n      });\n      setMutedStrings(prev => {\n        const next = new Set(prev);\n        next.delete(string);\n        return next;\n      });\n      \n      // Add the finger and set it as selected in one batch update\n      setFingers(prev => {\n        const newFingers = [...prev, [string, fret, undefined]];\n        return newFingers;\n      });\n      \n      // Set this position as selected for number input\n      setSelectedFinger([string, fret]);\n    } else {\n      // Set this position as selected for number input\n      setSelectedFinger([string, fret]);\n    }\n  };\n\n  const setFingerNumber = (string, fret, number) => {\n    \n    setFingers(prev => {\n      return prev.map(finger => {\n        const [s, f, currentNumber] = finger;\n        \n        if (s === string && f === fret) {\n          return [s, f, number];\n        }\n        // Ensure all fingers have 3-element structure\n        return finger.length === 3 ? finger : [s, f, currentNumber];\n      });\n    });\n  };\n\n  const updateCharts = () => {\n    if (!editorChartRef.current || !resultChartRef.current) {\n      return;\n    }\n    \n    // If the chart elements don't exist in DOM, recreate them\n    const editorElement = document.querySelector('#editor-chart');\n    const resultElement = document.querySelector('#result-chart');\n    if (!editorElement || !resultElement) {\n      return;\n    }\n\n    try {\n      const config = {\n        ...defaultChartConfig,\n        strings: numStrings,\n        frets: numFrets,\n        position: startingFret,\n        tuning: []  // Empty array to hide SVGuitar's built-in tuning labels\n      };\n\n      // Combine regular fingers with open and muted strings\n      // Process fingers to ensure proper finger number format for SVGuitar\n      const processedFingers = fingers.map(finger => {\n        const [string, fret, fingerNumber] = finger;\n        // Only include finger number if it's defined and not empty\n        if (fingerNumber && fingerNumber !== 'undefined') {\n          return [string, fret, fingerNumber];\n        }\n        return [string, fret]; // No finger number\n      });\n      \n      const allFingers = [\n        ...processedFingers,\n        // Add open strings as [string, 0]\n        ...Array.from(openStrings).map(string => [string, 0]),\n        // Add muted strings as [string, 'x']\n        ...Array.from(mutedStrings).map(string => [string, 'x'])\n      ];\n\n      const chordData = {\n        fingers: allFingers,\n        barres\n      };\n\n\n      // Check if chord data or title has actually changed\n      const chartStateString = JSON.stringify({ chordData, title });\n      const hasChanged = chartStateString !== lastChordDataRef.current;\n      \n      if (hasChanged) {\n        lastChordDataRef.current = chartStateString;\n        \n        // Update existing charts without recreating them\n        editorChartRef.current\n          .configure(config)\n          .chord(chordData)\n          .draw();\n\n        resultChartRef.current\n          .configure({\n            ...config,\n            title\n          })\n          .chord(chordData)\n          .draw();\n\n      } else {\n      }\n      \n      // Add explicit debug output to check if finger text is being applied\n      setTimeout(() => {\n        const editorSvg = document.querySelector('#editor-chart svg');\n        const resultSvg = document.querySelector('#result-chart svg');\n        \n        // Check for finger text elements in the SVG\n        if (editorSvg) {\n          // Finger text elements available via: editorSvg.querySelectorAll('text[fill=\"#000000\"]')\n        }\n        \n        if (resultSvg) {\n          // Finger text elements available via: resultSvg.querySelectorAll('text[fill=\"#000000\"]')\n        }\n        \n        // Style the SVGs\n        if (editorSvg) {\n          editorSvg.style.width = '100%';\n          editorSvg.style.height = '100%';\n          editorSvg.style.maxWidth = '160px';  // Match container width w-40\n          editorSvg.style.maxHeight = '224px'; // Match container height h-56\n        }\n\n        if (resultSvg) {\n          resultSvg.style.width = '100%';\n          resultSvg.style.height = '100%';\n          resultSvg.style.maxWidth = '160px';  // Match container width w-40\n          resultSvg.style.maxHeight = '224px'; // Match container height h-56\n        }\n        \n        setupEditorInteraction();\n      }, 100);\n    } catch (error) {\n      console.error('Error updating charts:', error);\n    }\n  };\n\n  useEffect(() => {\n    updateCharts();\n  }, [title, startingFret, numFrets, numStrings, fingers, barres, tuning, openStrings, mutedStrings]);\n\n  // Keyboard event listener for finger numbers\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (editMode !== 'fingers' || !selectedFinger) return;\n      \n      const key = event.key;\n      if (['1', '2', '3', '4', '5'].includes(key)) {\n        const [string, fret] = selectedFinger;\n        setFingerNumber(string, fret, key);\n        setSelectedFinger(null); // Clear selection after setting number\n        event.preventDefault();\n      } else if (key === 'Escape') {\n        setSelectedFinger(null); // Clear selection on escape\n        event.preventDefault();\n      }\n    };\n\n    if (editMode === 'fingers') {\n      document.addEventListener('keydown', handleKeyPress);\n      return () => document.removeEventListener('keydown', handleKeyPress);\n    }\n  }, [editMode, selectedFinger]);\n\n  return (\n    <div className=\"bg-gray-800 rounded-lg p-4\">\n      <div className=\"space-y-4\">\n        {/* Chord Name field */}\n        <div>\n          <div className=\"text-sm text-blue-400 mb-1\">Chord name</div>\n          <div className=\"relative\">\n            <Input\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              onBlur={() => tryAutofill(title)}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                  tryAutofill(title);\n                }\n              }}\n              placeholder=\"Enter chord name (e.g. Am, C7)\"\n              className=\"bg-gray-900\"\n              disabled={isLoadingChord}\n            />\n            {isLoadingChord && (\n              <div className=\"absolute right-2 top-2 text-yellow-400 text-xs\" role=\"status\" aria-live=\"polite\">\n                <span className=\"sr-only\">Loading chord data</span>\n                <span aria-hidden=\"true\">Loading...</span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Show more settings toggle */}\n        <div \n          className=\"text-sm text-blue-400 hover:underline cursor-pointer\"\n          onClick={() => setShowAdvancedSettings(!showAdvancedSettings)}\n        >\n          {showAdvancedSettings ? 'Hide advanced settings...' : 'Show more settings...'}\n        </div>\n\n        {/* Advanced settings - collapsible */}\n        {showAdvancedSettings && (\n          <div className=\"space-y-4\">\n            {/* Basic advanced settings */}\n            <div className=\"grid grid-cols-3 gap-4\">\n              <div>\n                <div className=\"text-sm text-green-400 mb-1\">Tuning</div>\n                <Input\n                  value={tuning}\n                  onChange={(e) => setTuning(e.target.value)}\n                  placeholder=\"EADGBE\"\n                  className=\"bg-gray-900\"\n                />\n              </div>\n              <div>\n                <div className=\"text-sm text-yellow-400 mb-1\">Capo</div>\n                <Input\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"12\"\n                  value={capo}\n                  onChange={(e) => setCapo(parseInt(e.target.value) || 0)}\n                  className=\"bg-gray-900\"\n                />\n              </div>\n              <div>\n                <div className=\"text-sm text-red-400 mb-1\">Starting fret</div>\n                <Input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"15\"\n                  value={startingFret}\n                  onChange={(e) => setStartingFret(parseInt(e.target.value) || 1)}\n                  className=\"bg-gray-900\"\n                />\n              </div>\n            </div>\n\n            {/* Second row of advanced settings */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <div className=\"text-sm text-blue-400 mb-1\">Number of frets</div>\n                <Input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"10\"\n                  value={numFrets}\n                  onChange={(e) => setNumFrets(parseInt(e.target.value) || 5)}\n                  className=\"bg-gray-900\"\n                />\n              </div>\n              <div>\n                <div className=\"text-sm text-red-400 mb-1\">Number of strings</div>\n                <Input\n                  type=\"number\"\n                  min=\"4\"\n                  max=\"12\"\n                  value={numStrings}\n                  onChange={(e) => setNumStrings(parseInt(e.target.value) || 6)}\n                  className=\"bg-gray-900\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n\n        {/* Editor and Result sections */}\n        <div className=\"flex gap-8 justify-center\">\n          <div>\n            <div className=\"text-lg font-serif mb-2\">Editor</div>\n            <div className=\"border border-gray-700 rounded-lg px-1 pt-1 pb-0\">\n              <div className=\"relative w-40 mx-auto flex items-center justify-center overflow-hidden select-none\" style={{height: '230px'}}>\n                <div id=\"editor-chart\" ref={editorContainerRef} className=\"cursor-pointer select-none\" />\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <div className=\"text-lg font-serif mb-2\">Result</div>\n            <div className=\"border border-gray-700 rounded-lg px-1 pt-1 pb-0\">\n              <div className=\"relative w-40 mx-auto flex items-center justify-center overflow-hidden select-none\" style={{height: '230px'}}>\n                <div id=\"result-chart\" className=\"select-none\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        {/* Edit mode buttons */}\n        <div className=\"flex gap-2\">\n          <Button\n            variant={editMode === 'dots' ? 'default' : 'outline'}\n            onClick={() => setEditMode('dots')}\n            className={`flex-1 ${\n              editMode === 'dots' \n                ? 'bg-blue-700 hover:bg-blue-800 text-white' \n                : 'bg-black hover:bg-gray-800 text-gray-300 border border-gray-600'\n            }`}\n          >\n            Edit dots\n          </Button>\n          <Button\n            variant={editMode === 'fingers' ? 'default' : 'outline'}\n            onClick={() => {\n              setEditMode('fingers');\n            }}\n            className={`flex-1 ${\n              editMode === 'fingers' \n                ? '!bg-blue-800 hover:!bg-blue-900 !text-white !border !border-blue-600' \n                : '!bg-black hover:!bg-gray-800 !text-gray-300 !border !border-gray-600'\n            }`}\n          >\n            Edit fingers\n          </Button>\n          <Button\n            variant={editMode === 'barres' ? 'default' : 'outline'}\n            onClick={() => setEditMode('barres')}\n            className={`flex-1 ${\n              editMode === 'barres' \n                ? '!bg-green-700 hover:!bg-green-800 !text-white !border !border-green-600' \n                : '!bg-black hover:!bg-gray-800 !text-gray-300 !border !border-gray-600'\n            }`}\n          >\n            Edit barres\n          </Button>\n        </div>\n\n        {/* Mode-specific instructions */}\n        {editMode === 'barres' && (\n          <div className=\"bg-green-900 bg-opacity-50 border border-green-600 rounded-lg p-3 text-sm text-green-200\">\n            <div className=\"font-semibold mb-1\">Barre mode instructions:</div>\n            <div>Click on any fret to add/remove a full barre across all strings at that fret. Perfect for chords like F, B, F#m, etc.</div>\n          </div>\n        )}\n        \n        {editMode === 'fingers' && (\n          <div className=\"bg-blue-900 bg-opacity-50 border border-blue-600 rounded-lg p-3 text-sm text-blue-200\">\n            <div className=\"font-semibold mb-1\">Finger numbers mode instructions:</div>\n            <div>Click on a finger position, then press 1-5 keys to assign finger numbers (5 = thumb). Press Escape to cancel selection.</div>\n            {selectedFinger && (\n              <div className=\"mt-2 text-yellow-300\">\n                Selected position: String {selectedFinger[0]}, Fret {selectedFinger[1]} - Press 1, 2, 3, 4, or 5\n              </div>\n            )}\n          </div>\n        )}\n        \n        {/* Line break option */}\n        <div className=\"flex items-center space-x-2 bg-gray-700 rounded-lg p-3\">\n          <input\n            type=\"checkbox\"\n            id=\"addLineBreak\"\n            checked={addLineBreak}\n            onChange={(e) => setAddLineBreak(e.target.checked)}\n            className=\"w-4 h-4 text-blue-600 bg-gray-900 border-gray-600 rounded focus:ring-blue-500 focus:ring-2\"\n          />\n          <label htmlFor=\"addLineBreak\" className=\"text-sm text-gray-300 cursor-pointer\">\n            Line break after ↩️\n          </label>\n        </div>\n\n        {/* Action buttons */}\n        <div className=\"flex gap-2\">\n          <Button \n            onClick={() => {\n              \n              const saveData = {\n                title,\n                startingFret,\n                numFrets,\n                numStrings,\n                tuning,\n                capo,\n                fingers,\n                barres,\n                openStrings: Array.from(openStrings),\n                mutedStrings: Array.from(mutedStrings),\n                // Both new and existing chords use startOnNewLine to affect the previous chord\n                startOnNewLine: addLineBreak,\n                editingChordId,  // Pass this so the save handler knows whether to create or update\n                // Include insertion context for proper positioning and section metadata\n                insertionContext\n              };\n\n              console.log('Saving chord with line break data:', {\n                title,\n                addLineBreak,\n                startOnNewLine: addLineBreak,\n                editingChordId\n              });\n\n              onSave(saveData);\n            }} \n            className={`flex-1 ${title.trim() ? 'bg-blue-600 hover:bg-blue-700 text-white' : 'bg-gray-600 text-gray-400 cursor-not-allowed'}`}\n            disabled={!title.trim()}\n          >\n            {editingChordId ? 'Update chord chart' : 'Add chord chart'}\n          </Button>\n          \n          {onCancel && (\n            <Button \n              onClick={onCancel}\n              variant=\"outline\"\n              className=\"flex-1 border-gray-600 text-gray-300 hover:bg-gray-700\"\n            >\n              Cancel\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}; ","import React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from './ui/dialog';\nimport { Button } from './ui/button';\nimport { AlertTriangle, Clock, Loader2 } from 'lucide-react';\n\nconst ApiErrorModal = ({ isOpen, onClose, error }) => {\n  const [countdown, setCountdown] = useState(0);\n  const [canRetry, setCanRetry] = useState(false);\n\n  // Parse error to determine wait time and message\n  const parseError = (error) => {\n    const errorMsg = error?.message || error || '';\n    \n    if (errorMsg.includes('529') || errorMsg.includes('overloaded')) {\n      return {\n        type: 'overload',\n        title: 'API Temporarily Overloaded',\n        message: 'The AI servers are experiencing high traffic right now.',\n        waitTime: 30, // 30 seconds for overload\n        icon: <Loader2 className=\"h-6 w-6 text-yellow-500 animate-spin\" />\n      };\n    }\n    \n    if (errorMsg.includes('429') || errorMsg.includes('rate limit')) {\n      return {\n        type: 'rate_limit',\n        title: 'Rate Limit Reached',\n        message: 'You\\'ve hit the API rate limit. Please wait before trying again.',\n        waitTime: 60, // 60 seconds for rate limit\n        icon: <Clock className=\"h-6 w-6 text-orange-500\" />\n      };\n    }\n    \n    if (errorMsg.includes('500') || errorMsg.includes('502') || errorMsg.includes('503')) {\n      return {\n        type: 'server_error',\n        title: 'Server Error',\n        message: 'The server is experiencing issues. Let\\'s try again in a moment.',\n        waitTime: 45, // 45 seconds for server errors\n        icon: <AlertTriangle className=\"h-6 w-6 text-red-500\" />\n      };\n    }\n    \n    if (errorMsg.includes('timeout')) {\n      return {\n        type: 'timeout',\n        title: 'Request Timeout',\n        message: 'The analysis took too long. This might work better with smaller files.',\n        waitTime: 15, // 15 seconds for timeout\n        icon: <Clock className=\"h-6 w-6 text-blue-500\" />\n      };\n    }\n    \n    // Generic error\n    return {\n      type: 'generic',\n      title: 'Something Went Wrong',\n      message: errorMsg || 'An unexpected error occurred.',\n      waitTime: 10, // 10 seconds for generic errors\n      icon: <AlertTriangle className=\"h-6 w-6 text-gray-500\" />\n    };\n  };\n\n  const errorInfo = parseError(error);\n\n  // Initialize countdown when modal opens\n  useEffect(() => {\n    if (isOpen && error) {\n      setCountdown(errorInfo.waitTime);\n      setCanRetry(false);\n      \n      const timer = setInterval(() => {\n        setCountdown((prev) => {\n          if (prev <= 1) {\n            setCanRetry(true);\n            clearInterval(timer);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      \n      return () => clearInterval(timer);\n    }\n  }, [isOpen, error, errorInfo.waitTime]);\n\n  const formatTime = (seconds) => {\n    if (seconds < 60) return `${seconds}s`;\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}m ${secs}s`;\n  };\n\n  const handleRetry = () => {\n    setCanRetry(false);\n    setCountdown(0);\n    onClose();\n  };\n\n  if (!isOpen || !error) return null;\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => open || handleRetry()}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            {errorInfo.icon}\n            {errorInfo.title}\n          </DialogTitle>\n          <DialogDescription className=\"text-left space-y-3\">\n            <p>{errorInfo.message}</p>\n            \n            {countdown > 0 ? (\n              <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-lg\">\n                <div className=\"flex items-center gap-2 text-sm\">\n                  <Clock className=\"h-4 w-4 text-gray-500\" />\n                  <span>Please wait {formatTime(countdown)} before trying again</span>\n                </div>\n                <div className=\"w-full bg-gray-300 dark:bg-gray-600 rounded-full h-2 mt-2\">\n                  <div \n                    className=\"bg-blue-500 h-2 rounded-full transition-all duration-1000\"\n                    style={{ \n                      width: `${((errorInfo.waitTime - countdown) / errorInfo.waitTime) * 100}%` \n                    }}\n                  />\n                </div>\n              </div>\n            ) : (\n              <div className=\"bg-green-50 dark:bg-green-900/20 p-3 rounded-lg\">\n                <p className=\"text-sm text-green-700 dark:text-green-300\">\n                  Ready to try again!\n                </p>\n              </div>\n            )}\n          </DialogDescription>\n        </DialogHeader>\n        \n        <div className=\"flex justify-end gap-2 mt-4\">\n          <Button\n            onClick={handleRetry}\n            disabled={!canRetry}\n            className=\"min-w-20\"\n          >\n            {canRetry ? 'OK' : `Wait ${formatTime(countdown)}`}\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default ApiErrorModal;","import React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from './ui/dialog';\nimport { Button } from './ui/button';\nimport { CheckCircle2, FileText, Music, Zap } from 'lucide-react';\n\nconst AutocreateSuccessModal = ({ isOpen, onClose, autocreateData }) => {\n  if (!isOpen || !autocreateData) return null;\n\n  const {\n    itemName,\n    chordCount,\n    contentType,\n    uploadedFileNames,\n    isVisionAnalysis = false\n  } = autocreateData;\n\n  // Determine if this was a complex visual analysis (more exciting)\n  const isComplexVisionAnalysis = isVisionAnalysis || contentType === 'chord_charts' || contentType === 'auto-detected';\n\n  const getIcon = () => {\n    if (isComplexVisionAnalysis) {\n      return <Zap className=\"h-6 w-6 text-yellow-500\" />;\n    }\n    return <CheckCircle2 className=\"h-6 w-6 text-green-500\" />;\n  };\n\n  const getTitle = () => {\n    if (isComplexVisionAnalysis) {\n      return \"🎸 Vision Analysis Complete!\";\n    }\n    return \"Chord Charts Created!\";\n  };\n\n  const getDescription = () => {\n    return (\n      <div className=\"space-y-1\">\n        <p className=\"font-medium\">Success! Or close to it!</p>\n        <p>We did the best we could. You'll likely need to make a few corrections.</p>\n        <p>Click the pencil icon on a chord chart to fix it.</p>\n        <p>Be sure to click the <code className=\"px-1 py-0.5 bg-gray-700 text-gray-300 rounded text-sm\">\"Update chord chart\"</code> button after edits</p>\n      </div>\n    );\n  };\n\n  const getDetails = () => {\n    const details = [];\n\n    if (contentType) {\n      const typeLabels = {\n        'chord_charts': 'Chord charts',\n        'chord_names': 'Lyrics with chord names',\n        'tablature': 'Guitar tablature',\n        'mixed': 'Mixed content types',\n        'auto-detected': isComplexVisionAnalysis ? 'Chord charts' : 'Mixed content'\n      };\n      details.push(typeLabels[contentType] || contentType);\n    }\n\n    if (uploadedFileNames) {\n      const fileList = uploadedFileNames.split(', ').slice(0, 3); // Show max 3 files\n      const remainingCount = uploadedFileNames.split(', ').length - fileList.length;\n      let fileText = fileList.join(', ');\n      if (remainingCount > 0) {\n        fileText += ` and ${remainingCount} more`;\n      }\n      details.push(fileText);\n    }\n\n    return details;\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            {getIcon()}\n            {getTitle()}\n          </DialogTitle>\n          <DialogDescription className=\"text-left space-y-1\">\n            {getDescription()}\n\n            <div className=\"bg-gray-800 px-2 py-1 rounded-lg\">\n              <div className=\"flex items-center gap-2 text-sm font-medium text-gray-300 mb-1\">\n                <FileText className=\"h-4 w-4\" />\n                <span>Processing Details</span>\n              </div>\n              <ul className=\"text-sm text-gray-400\">\n                {getDetails().map((detail, index) => (\n                  <li key={index} className=\"flex items-center gap-1\">\n                    <span className=\"w-1 h-1 bg-gray-400 rounded-full\"></span>\n                    {detail}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"flex justify-end gap-2 -mt-2\">\n          <Button onClick={onClose} variant=\"outline\" className=\"min-w-20\">\n            Show me\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default AutocreateSuccessModal;","// Connection status tracking\nlet isServerDown = false;\nlet lastConnectionAttempt = 0;\nlet connectionCheckInterval = null;\nconst CONNECTION_CHECK_DELAY = 30000; // 30 seconds between reconnection attempts\n\n// Frontend logging utility that sends logs to backend\nexport const serverLog = async (message, level = 'DEBUG', context = {}) => {\n  // Skip sending to server if we know it's down and haven't waited long enough\n  if (isServerDown && Date.now() - lastConnectionAttempt < CONNECTION_CHECK_DELAY) {\n    return;\n  }\n\n  try {\n    const response = await fetch('/api/debug/log', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        message,\n        level,\n        context\n      })\n    });\n\n    if (response.ok && isServerDown) {\n      // Server is back up!\n      isServerDown = false;\n      hideConnectionModal();\n      if (connectionCheckInterval) {\n        clearInterval(connectionCheckInterval);\n        connectionCheckInterval = null;\n      }\n    }\n  } catch (error) {\n    // Use original console methods to avoid recursive loop\n    if (!isServerDown) {\n      isServerDown = true;\n      lastConnectionAttempt = Date.now();\n      showConnectionModal();\n      scheduleReconnectionAttempts();\n    }\n    // Use original console methods to prevent recursion\n    originalConsoleError('Failed to send log to server:', error);\n    originalConsoleLog(`[${level}] ${message}`, context);\n  }\n};\n\n// Override console methods to also send to server\nconst originalConsoleLog = console.log;\nconst originalConsoleError = console.error;\nconst originalConsoleWarn = console.warn;\n\n// Connection status modal functions\nfunction showConnectionModal() {\n  // Remove any existing modal\n  hideConnectionModal();\n\n  const modal = document.createElement('div');\n  modal.id = 'connection-status-modal';\n  modal.style.cssText = `\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    background: #ef4444;\n    color: white;\n    padding: 16px 20px;\n    border-radius: 8px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n    z-index: 10000;\n    max-width: 400px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    font-size: 14px;\n    line-height: 1.4;\n  `;\n\n  modal.innerHTML = `\n    <div style=\"font-weight: 600; margin-bottom: 8px;\">Broken string</div>\n    <div>...metaphorically speaking, anyway.<br><br>Something's wrong with the connection to the server. Could be your connection, could be a server problem, can't tell from here.<br><br>We'll try again in 30 seconds. Or you can try refreshing the page in a minute or two.<br><br>If the problem continues practice your favorite riff for awhile, or go touch grass, then come back later.</div>\n  `;\n\n  document.body.appendChild(modal);\n}\n\nfunction hideConnectionModal() {\n  const existingModal = document.getElementById('connection-status-modal');\n  if (existingModal) {\n    existingModal.remove();\n  }\n}\n\nfunction scheduleReconnectionAttempts() {\n  if (connectionCheckInterval) return; // Already scheduled\n\n  connectionCheckInterval = setInterval(async () => {\n    if (!isServerDown) {\n      clearInterval(connectionCheckInterval);\n      connectionCheckInterval = null;\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/debug/log', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: 'reconnection-test', level: 'DEBUG', context: {} })\n      });\n\n      if (response.ok) {\n        isServerDown = false;\n        hideConnectionModal();\n        clearInterval(connectionCheckInterval);\n        connectionCheckInterval = null;\n      }\n    } catch (error) {\n      // Still down, continue checking\n      lastConnectionAttempt = Date.now();\n    }\n  }, CONNECTION_CHECK_DELAY);\n}\n\nconsole.log = function(...args) {\n  originalConsoleLog.apply(console, args);\n  // Send to server (but don't wait for it, and don't use console.error if it fails)\n  serverLog(args.join(' '), 'INFO', {}).catch(() => {});\n};\n\nconsole.error = function(...args) {\n  originalConsoleError.apply(console, args);\n  // Send to server (but don't wait for it, and don't use console.error if it fails)\n  serverLog(args.join(' '), 'ERROR', {}).catch(() => {});\n};\n\nconsole.warn = function(...args) {\n  originalConsoleWarn.apply(console, args);\n  // Send to server (but don't wait for it, and don't use console.error if it fails)\n  serverLog(args.join(' '), 'WARNING', {}).catch(() => {});\n};\n\nexport const serverDebug = (message, context) => serverLog(message, 'DEBUG', context);\nexport const serverInfo = (message, context) => serverLog(message, 'INFO', context);\nexport const serverError = (message, context) => serverLog(message, 'ERROR', context);","\"use client\";\n\n// packages/react/alert-dialog/src/AlertDialog.tsx\nimport * as React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { createDialogScope } from \"@radix-ui/react-dialog\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { Slottable } from \"@radix-ui/react-slot\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ROOT_NAME = \"AlertDialog\";\nvar [createAlertDialogContext, createAlertDialogScope] = createContextScope(ROOT_NAME, [\n  createDialogScope\n]);\nvar useDialogScope = createDialogScope();\nvar AlertDialog = (props) => {\n  const { __scopeAlertDialog, ...alertDialogProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return /* @__PURE__ */ jsx(DialogPrimitive.Root, { ...dialogScope, ...alertDialogProps, modal: true });\n};\nAlertDialog.displayName = ROOT_NAME;\nvar TRIGGER_NAME = \"AlertDialogTrigger\";\nvar AlertDialogTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAlertDialog, ...triggerProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return /* @__PURE__ */ jsx(DialogPrimitive.Trigger, { ...dialogScope, ...triggerProps, ref: forwardedRef });\n  }\n);\nAlertDialogTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"AlertDialogPortal\";\nvar AlertDialogPortal = (props) => {\n  const { __scopeAlertDialog, ...portalProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return /* @__PURE__ */ jsx(DialogPrimitive.Portal, { ...dialogScope, ...portalProps });\n};\nAlertDialogPortal.displayName = PORTAL_NAME;\nvar OVERLAY_NAME = \"AlertDialogOverlay\";\nvar AlertDialogOverlay = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAlertDialog, ...overlayProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return /* @__PURE__ */ jsx(DialogPrimitive.Overlay, { ...dialogScope, ...overlayProps, ref: forwardedRef });\n  }\n);\nAlertDialogOverlay.displayName = OVERLAY_NAME;\nvar CONTENT_NAME = \"AlertDialogContent\";\nvar [AlertDialogContentProvider, useAlertDialogContentContext] = createAlertDialogContext(CONTENT_NAME);\nvar AlertDialogContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAlertDialog, children, ...contentProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    const contentRef = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const cancelRef = React.useRef(null);\n    return /* @__PURE__ */ jsx(\n      DialogPrimitive.WarningProvider,\n      {\n        contentName: CONTENT_NAME,\n        titleName: TITLE_NAME,\n        docsSlug: \"alert-dialog\",\n        children: /* @__PURE__ */ jsx(AlertDialogContentProvider, { scope: __scopeAlertDialog, cancelRef, children: /* @__PURE__ */ jsxs(\n          DialogPrimitive.Content,\n          {\n            role: \"alertdialog\",\n            ...dialogScope,\n            ...contentProps,\n            ref: composedRefs,\n            onOpenAutoFocus: composeEventHandlers(contentProps.onOpenAutoFocus, (event) => {\n              event.preventDefault();\n              cancelRef.current?.focus({ preventScroll: true });\n            }),\n            onPointerDownOutside: (event) => event.preventDefault(),\n            onInteractOutside: (event) => event.preventDefault(),\n            children: [\n              /* @__PURE__ */ jsx(Slottable, { children }),\n              /* @__PURE__ */ jsx(DescriptionWarning, { contentRef })\n            ]\n          }\n        ) })\n      }\n    );\n  }\n);\nAlertDialogContent.displayName = CONTENT_NAME;\nvar TITLE_NAME = \"AlertDialogTitle\";\nvar AlertDialogTitle = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAlertDialog, ...titleProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return /* @__PURE__ */ jsx(DialogPrimitive.Title, { ...dialogScope, ...titleProps, ref: forwardedRef });\n  }\n);\nAlertDialogTitle.displayName = TITLE_NAME;\nvar DESCRIPTION_NAME = \"AlertDialogDescription\";\nvar AlertDialogDescription = React.forwardRef((props, forwardedRef) => {\n  const { __scopeAlertDialog, ...descriptionProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return /* @__PURE__ */ jsx(DialogPrimitive.Description, { ...dialogScope, ...descriptionProps, ref: forwardedRef });\n});\nAlertDialogDescription.displayName = DESCRIPTION_NAME;\nvar ACTION_NAME = \"AlertDialogAction\";\nvar AlertDialogAction = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAlertDialog, ...actionProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return /* @__PURE__ */ jsx(DialogPrimitive.Close, { ...dialogScope, ...actionProps, ref: forwardedRef });\n  }\n);\nAlertDialogAction.displayName = ACTION_NAME;\nvar CANCEL_NAME = \"AlertDialogCancel\";\nvar AlertDialogCancel = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAlertDialog, ...cancelProps } = props;\n    const { cancelRef } = useAlertDialogContentContext(CANCEL_NAME, __scopeAlertDialog);\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    const ref = useComposedRefs(forwardedRef, cancelRef);\n    return /* @__PURE__ */ jsx(DialogPrimitive.Close, { ...dialogScope, ...cancelProps, ref });\n  }\n);\nAlertDialogCancel.displayName = CANCEL_NAME;\nvar DescriptionWarning = ({ contentRef }) => {\n  const MESSAGE = `\\`${CONTENT_NAME}\\` requires a description for the component to be accessible for screen reader users.\n\nYou can add a description to the \\`${CONTENT_NAME}\\` by passing a \\`${DESCRIPTION_NAME}\\` component as a child, which also benefits sighted users by adding visible context to the dialog.\n\nAlternatively, you can use your own component as a description by assigning it an \\`id\\` and passing the same value to the \\`aria-describedby\\` prop in \\`${CONTENT_NAME}\\`. If the description is confusing or duplicative for sighted users, you can use the \\`@radix-ui/react-visually-hidden\\` primitive as a wrapper around your description component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;\n  React.useEffect(() => {\n    const hasDescription = document.getElementById(\n      contentRef.current?.getAttribute(\"aria-describedby\")\n    );\n    if (!hasDescription) console.warn(MESSAGE);\n  }, [MESSAGE, contentRef]);\n  return null;\n};\nvar Root2 = AlertDialog;\nvar Trigger2 = AlertDialogTrigger;\nvar Portal2 = AlertDialogPortal;\nvar Overlay2 = AlertDialogOverlay;\nvar Content2 = AlertDialogContent;\nvar Action = AlertDialogAction;\nvar Cancel = AlertDialogCancel;\nvar Title2 = AlertDialogTitle;\nvar Description2 = AlertDialogDescription;\nexport {\n  Action,\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogOverlay,\n  AlertDialogPortal,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n  Cancel,\n  Content2 as Content,\n  Description2 as Description,\n  Overlay2 as Overlay,\n  Portal2 as Portal,\n  Root2 as Root,\n  Title2 as Title,\n  Trigger2 as Trigger,\n  createAlertDialogScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\nimport { cn } from \"@lib/utils\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\"flex flex-col space-y-2 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\", className)}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName = AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(\"inline-flex h-10 items-center justify-center rounded-md bg-primary px-4 py-2 text-sm font-semibold text-primary-foreground ring-offset-background transition-colors hover:bg-primary/90 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\", className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\"mt-2 inline-flex h-10 items-center justify-center rounded-md border border-input bg-background px-4 py-2 text-sm font-semibold ring-offset-background transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 sm:mt-0\", className)}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}","import React, { useEffect, useCallback, useState, useRef, useMemo, memo } from 'react';\nimport { trackChordChartEvent } from '../utils/analytics';\nimport { usePracticeItems } from '../hooks/usePracticeItems';\n\n// Simple debounce function\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Helper functions for copy modal fuzzy matching (copied from PracticePage)\nconst normalizeText = (str) => {\n  return str\n    // Normalize apostrophes and quotes\n    .replace(/[''`\"]/g, \"'\")\n    // Normalize dashes and hyphens\n    .replace(/[–—−]/g, \"-\")\n    // Remove extra whitespace\n    .replace(/\\s+/g, ' ')\n    .trim()\n    .toLowerCase();\n};\n\nconst extractBaseSongName = (title) => {\n  // Remove all parentheses and their contents: (acoustic), (electric), (relearning), etc.\n  return title.replace(/\\s*\\([^)]*\\)\\s*/g, '').trim();\n};\n\nconst findSimilarSongs = (sourceTitle, allItems, sourceItemId) => {\n  const baseName = extractBaseSongName(sourceTitle);\n  const normalizedBaseName = normalizeText(baseName);\n  console.log('DEBUG: findSimilarSongs - sourceTitle:', sourceTitle, '-> baseName:', baseName, '-> normalized:', normalizedBaseName);\n\n  return allItems.filter(item => {\n    // Skip the source item itself\n    if (item['B'] === sourceItemId) return false;\n\n    const itemTitle = item['C'] || '';\n    const itemBaseName = extractBaseSongName(itemTitle);\n    const normalizedItemBaseName = normalizeText(itemBaseName);\n\n    // More precise similarity matching - require significant overlap\n    const matches = normalizedBaseName === normalizedItemBaseName ||\n                   (normalizedBaseName.length > 3 && normalizedItemBaseName.includes(normalizedBaseName)) ||\n                   (normalizedItemBaseName.length > 3 && normalizedBaseName.includes(normalizedItemBaseName));\n\n    return matches;\n  });\n};\n\nimport { Button } from '@ui/button';\nimport { Check, Music, Upload, AlertTriangle, X, Wand, Sparkles, Loader2, Printer } from 'lucide-react';\nimport { ChordChartEditor } from './ChordChartEditor';\nimport ApiErrorModal from './ApiErrorModal';\nimport AutocreateSuccessModal from './AutocreateSuccessModal';\nimport { serverDebug } from '../utils/logging';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\n\n// Import at top to activate console overrides\nimport '../utils/logging';\n\n// MemoizedChordChart component to prevent unnecessary re-renders\nconst MemoizedChordChart = memo(({ chart, onEdit, onDelete, onInsertAfter }) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const menuRef = useRef(null);\n  const chartRef = useRef(null);\n\n  // Close menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setShowMenu(false);\n      }\n    };\n\n    if (showMenu) {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => document.removeEventListener('mousedown', handleClickOutside);\n    }\n  }, [showMenu]);\n\n  // SVGuitar rendering effect (copied from PracticePage)\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    const renderChart = () => {\n      if (!window.svguitar || !chartRef.current) return;\n\n      try {\n        // Handle nested chordData structure if present\n        const actualChartData = chart.chordData || chart;\n\n        // Clear any existing content\n        chartRef.current.innerHTML = '';\n\n        // Create SVGuitar instance\n        const chartInstance = new window.svguitar.SVGuitarChord(chartRef.current);\n\n        // Configure the chart with same dimensions as editor for consistency\n        const config = {\n          strings: actualChartData.numStrings || 6,\n          frets: actualChartData.numFrets || 5,\n          position: actualChartData.startingFret || 1,\n          tuning: [], // Hide tuning labels in the small display\n          width: 160,             // Compact width matching container\n          height: 220,            // Compact height matching container\n          fretSize: 1.2,          // Match editor settings\n          fingerSize: 0.75,       // Larger finger size for text visibility (match editor)\n          sidePadding: 0.2,       // Match editor settings\n          fontFamily: 'Arial',\n          // Dark theme colors\n          color: '#ffffff',           // White finger dots\n          backgroundColor: 'transparent',\n          strokeColor: '#ffffff',     // White grid lines\n          textColor: '#ffffff',       // White text\n          fretLabelColor: '#ffffff',  // White fret labels\n          // Finger text settings (match editor)\n          fingerTextColor: '#000000', // Black text on white dots for contrast\n          fingerTextSize: 28         // Larger text size for visibility (match editor)\n        };\n\n        // Combine regular fingers with open and muted strings (same as in editor)\n        // Process fingers to ensure proper finger number format for SVGuitar\n        const processedFingers = (actualChartData.fingers || []).map(finger => {\n          const [string, fret, fingerNumber] = finger;\n          // Only include finger number if it's defined and not empty\n          if (fingerNumber && fingerNumber !== 'undefined') {\n            return [string, fret, fingerNumber];\n          }\n          return [string, fret]; // No finger number\n        });\n\n        const allFingers = [\n          ...processedFingers,\n          // Add open strings as [string, 0]\n          ...(actualChartData.openStrings || []).map(string => [string, 0]),\n          // Add muted strings as [string, 'x']\n          ...(actualChartData.mutedStrings || []).map(string => [string, 'x'])\n        ];\n\n        // Prepare chord data\n        const chordData = {\n          fingers: allFingers,\n          barres: actualChartData.barres || []\n        };\n\n        // Render the chart\n        chartInstance.configure(config).chord(chordData).draw();\n\n        // Style the SVG to fit the container\n        setTimeout(() => {\n          const svg = chartRef.current?.querySelector('svg');\n          if (svg) {\n            svg.style.width = '100%';\n            svg.style.height = '100%';\n            svg.style.maxWidth = '160px';  // Match container width w-40\n            svg.style.maxHeight = '224px'; // Match container height h-56\n            svg.style.position = 'relative';\n            svg.style.zIndex = '1';\n          }\n        }, 50);\n      } catch (error) {\n        console.error('Error rendering memoized chord chart:', error);\n      }\n    };\n\n    renderChart();\n  }, [chart]); // Only re-render when chart data changes\n\n  const handleEditClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setShowMenu(false);\n    onEdit(chart.id, {\n      title: chart.title,\n      chord_data: chart.chord_data,\n      sectionId: chart.sectionId,\n      sectionLabel: chart.sectionLabel,\n      sectionRepeatCount: chart.sectionRepeatCount\n    });\n  };\n\n  const handleDeleteClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setShowMenu(false);\n    onDelete(chart.id);\n  };\n\n  const handleInsertAfterClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setShowMenu(false);\n    onInsertAfter(chart.id, {\n      sectionId: chart.sectionId,\n      sectionLabel: chart.sectionLabel,\n      sectionRepeatCount: chart.sectionRepeatCount\n    });\n  };\n\n  const handleLineBreakClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setShowMenu(false);\n\n    // Toggle line break after this chord\n    const updatedChartData = {\n      ...chart.chord_data,\n      hasLineBreakAfter: !chart.hasLineBreakAfter\n    };\n\n    onEdit(chart.id, {\n      title: chart.title,\n      chord_data: updatedChartData,\n      sectionId: chart.sectionId,\n      sectionLabel: chart.sectionLabel,\n      sectionRepeatCount: chart.sectionRepeatCount\n    });\n  };\n\n  const handleMenuClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setShowMenu(!showMenu);\n  };\n\n  return (\n    <div className=\"relative mx-auto\" style={{ maxWidth: '180px' }}>\n      {/* Chord chart display */}\n      <div\n        className=\"bg-gray-800 p-1 rounded-lg cursor-pointer relative group\"\n        onClick={handleMenuClick}\n        style={{\n          minWidth: '0',\n          maxWidth: '100%',\n          width: '100%',\n          position: 'relative'\n        }}\n      >\n        {/* Three-dot menu button */}\n        <button\n          className=\"absolute top-1 right-1 bg-gray-700 text-gray-300 rounded-full w-6 h-6 flex items-center justify-center text-xs opacity-0 group-hover:opacity-100 transition-opacity z-10\"\n          onClick={handleMenuClick}\n        >\n          ⋮\n        </button>\n\n        {/* Chord diagram container using SVGuitar (copied sizing from PracticePage) */}\n        <div className=\"relative w-40 mx-auto flex items-center justify-center overflow-hidden\" style={{height: '230px'}}>\n          <div\n            ref={chartRef}\n            className=\"w-full h-full\"\n          >\n            {/* SVGuitar chart will be rendered here */}\n          </div>\n        </div>\n\n        {/* Chord title */}\n        <div className=\"text-center text-white text-sm font-semibold mt-2\">\n          {chart.title}\n        </div>\n\n        {/* Line break indicator */}\n        {chart.hasLineBreakAfter && (\n          <div className=\"absolute -bottom-1 -right-1 bg-blue-500 text-white rounded-full w-4 h-4 flex items-center justify-center text-xs\">\n            ↵\n          </div>\n        )}\n      </div>\n\n      {/* Menu dropdown */}\n      {showMenu && (\n        <div\n          ref={menuRef}\n          className=\"absolute top-8 right-0 bg-gray-700 border border-gray-600 rounded-lg shadow-lg z-20 min-w-48\"\n        >\n          <button\n            onClick={handleEditClick}\n            className=\"w-full text-left px-4 py-2 text-gray-200 hover:bg-gray-600 rounded-t-lg flex items-center\"\n          >\n            ✏️ Edit chord\n          </button>\n          <button\n            onClick={handleInsertAfterClick}\n            className=\"w-full text-left px-4 py-2 text-gray-200 hover:bg-gray-600 flex items-center\"\n          >\n            ➕ Insert chord after\n          </button>\n          <button\n            onClick={handleLineBreakClick}\n            className=\"w-full text-left px-4 py-2 text-gray-200 hover:bg-gray-600 flex items-center\"\n          >\n            {chart.hasLineBreakAfter ? '↩️ Remove line break' : '↵ Add line break after'}\n          </button>\n          <button\n            onClick={handleDeleteClick}\n            className=\"w-full text-left px-4 py-2 text-red-400 hover:bg-gray-600 rounded-b-lg flex items-center\"\n          >\n            🗑️ Delete chord\n          </button>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default function ChordChartsModal({ isOpen, onClose, itemId, itemTitle }) {\n  // Get all items for copy modal\n  const { items: allItems } = usePracticeItems();\n\n  // State management - copy all the state from PracticePage that chord charts depend on\n  const [chordCharts, setChordCharts] = useState({});\n  const [chordSections, setChordSections] = useState({});\n  const [showChordEditor, setShowChordEditor] = useState({});\n  const [editingChordId, setEditingChordId] = useState(null);\n  const [insertionContext, setInsertionContext] = useState(null);\n  const [scrollBackContext, setScrollBackContext] = useState({});\n  const [deletingSection, setDeletingSection] = useState(new Set());\n\n  // Copy modal state (copied from PracticePage)\n  const [showCopyModal, setShowCopyModal] = useState(false);\n  const [copySourceItemId, setCopySourceItemId] = useState(null);\n  const [copySearchTerm, setCopySearchTerm] = useState('');\n  const [selectedTargetItems, setSelectedTargetItems] = useState(new Set());\n  const [itemsWithExistingCharts, setItemsWithExistingCharts] = useState(new Set());\n  const [showOverwriteConfirmation, setShowOverwriteConfirmation] = useState(false);\n  const [copyProgress, setCopyProgress] = useState(null);\n\n  // Autocreate states\n  const [showAutocreateZone, setShowAutocreateZone] = useState({});\n  const [autocreateProgress, setAutocreateProgress] = useState({});\n  const [uploadedFiles, setUploadedFiles] = useState({});\n  const [youtubeUrls, setYoutubeUrls] = useState({});\n  const [manualChordInput, setManualChordInput] = useState({});\n  const [manualInputErrors, setManualInputErrors] = useState({});\n  const [isDragActive, setIsDragActive] = useState({});\n\n  // Abort controller for cancelling requests (copied from PracticePage)\n  const [autocreateAbortController, setAutocreateAbortController] = useState({});\n  // Rotating processing messages for entertainment (copied from PracticePage)\n  const processingMessages = [\n    \"✨ Claude is making magic happen\",\n    \"✨ Claude is *still* making magic happen\",\n    \"Yeah, we all love instant gratification, but it'll still be quicker than you could do it from scratch\",\n    \"Are you familiar with the phrase 'A watched pot never boils'? It's kinda like that\",\n    \"Chill, I'm working on it.\",\n    \"You could be stretching or something while you wait, couldn't you?\",\n    \"The pyramids weren't built in a day... \",\n    \"but hey, at least I'm not going to ask you for an email address to send the chord charts to.\",\n    \"Perfect chord charts take time to craft. These will take less time and they won't be perfect.\",\n    \"Yeah, I could show you a progress bar, but we both know it would just lie to you\"\n  ];\n  const [processingMessageIndex, setProcessingMessageIndex] = useState(0);\n  const [_messageQueue, setMessageQueue] = useState([]);\n\n  // Modal and copy states\n  const [showApiErrorModal, setShowApiErrorModal] = useState(false);\n  const [apiError, setApiError] = useState(null);\n  const [showAutocreateSuccessModal, setShowAutocreateSuccessModal] = useState(false);\n  const [autocreateSuccessData, setAutocreateSuccessData] = useState(null);\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n  const [cancellingItemId, setCancellingItemId] = useState(null);\n\n  // Delete confirmation modal state (copied from PracticePage)\n  const [showDeleteChordsModal, setShowDeleteChordsModal] = useState(false);\n  const [deleteModalItemId, setDeleteModalItemId] = useState(null);\n\n  // Mock getItemDetails function since we don't have useItemDetails hook in modal\n  const getItemDetails = useCallback((itemIdToGet) => {\n    if (itemIdToGet === itemId) {\n      return {\n        C: itemTitle, // Column C is Title\n        B: itemId,    // Column B is ItemID\n        E: 5          // Default duration\n      };\n    }\n    return null;\n  }, [itemId, itemTitle]);\n\n  // Effect to load SVGuitar library for MemoizedChordChart components\n  useEffect(() => {\n    // Load SVGuitar UMD script if not already loaded\n    if (!window.svguitar) {\n      const script = document.createElement('script');\n      script.src = 'https://omnibrain.github.io/svguitar/js/svguitar.umd.js';\n      script.async = true;\n      document.body.appendChild(script);\n    }\n  }, []);\n\n  // Load chord charts for this item when modal opens\n  useEffect(() => {\n    if (isOpen && itemId) {\n      loadChordChartsForItem(itemId);\n    }\n  }, [isOpen, itemId]);\n\n  // Rotate processing messages every 10 seconds\n  useEffect(() => {\n    const processingItems = Object.values(autocreateProgress).filter(progress => progress === 'processing');\n\n    if (processingItems.length === 0) {\n      // Reset message state when no processing\n      setProcessingMessageIndex(0);\n      setMessageQueue([]);\n      return;\n    }\n\n    // Always start with the first message\n    setProcessingMessageIndex(0);\n    // Create initial shuffled queue excluding the first message\n    const remainingMessages = Array.from({length: processingMessages.length - 1}, (_, i) => i + 1);\n    const shuffled = remainingMessages.sort(() => Math.random() - 0.5);\n    setMessageQueue(shuffled);\n\n    const interval = setInterval(() => {\n      setMessageQueue(prevQueue => {\n        if (prevQueue.length === 0) {\n          // Queue is empty, create new shuffled queue of all messages\n          const allMessages = Array.from({length: processingMessages.length}, (_, i) => i);\n          const newShuffled = allMessages.sort(() => Math.random() - 0.5);\n          const nextIndex = newShuffled[0];\n          const newQueue = newShuffled.slice(1);\n\n          setProcessingMessageIndex(nextIndex);\n          return newQueue;\n        } else {\n          // Take next message from queue\n          const nextIndex = prevQueue[0];\n          const newQueue = prevQueue.slice(1);\n\n          setProcessingMessageIndex(nextIndex);\n          return newQueue;\n        }\n      });\n    }, 10000); // 10 seconds\n\n    return () => clearInterval(interval);\n  }, [autocreateProgress, processingMessages]);\n\n  // Copy modal: Detect items with existing charts when selection changes (copied from PracticePage)\n  useEffect(() => {\n    if (!showCopyModal || selectedTargetItems.size === 0) return;\n\n    const newItemsWithCharts = new Set();\n    selectedTargetItems.forEach(primaryKey => {\n      const targetItem = allItems?.find(item => item['A'] === primaryKey);\n      const itemReferenceId = targetItem?.['B'];\n      if (itemReferenceId && chordCharts[itemReferenceId]?.length > 0) {\n        newItemsWithCharts.add(primaryKey);\n      }\n    });\n\n    setItemsWithExistingCharts(newItemsWithCharts);\n  }, [showCopyModal, selectedTargetItems, chordCharts, allItems]);\n\n  // Copy all the chord chart functions from PracticePage...\n  const loadChordChartsForItem = async (itemId) => {\n    // Always fetch fresh data to ensure UI is up-to-date after autocreate\n    try {\n      const response = await fetch(`/api/items/${itemId}/chord-charts`);\n      if (response.ok) {\n        const charts = await response.json();\n        setChordCharts(prev => ({\n          ...prev,\n          [itemId]: charts\n        }));\n\n        // Build sections from charts\n        const sections = buildSectionsFromCharts(charts);\n        setChordSections(prev => ({\n          ...prev,\n          [itemId]: sections\n        }));\n      }\n    } catch (error) {\n      console.error('Error loading chord charts:', error);\n    }\n  };\n\n  const buildSectionsFromCharts = (charts) => {\n    const sectionsMap = new Map();\n\n    charts.forEach(chart => {\n      const sectionId = chart.sectionId || 'default-section';\n      const sectionLabel = chart.sectionLabel || 'Section';\n      const sectionRepeatCount = chart.sectionRepeatCount || '';\n\n      if (!sectionsMap.has(sectionId)) {\n        sectionsMap.set(sectionId, {\n          id: sectionId,\n          label: sectionLabel,\n          repeatCount: sectionRepeatCount,\n          chords: []\n        });\n      }\n\n      sectionsMap.get(sectionId).chords.push(chart);\n    });\n\n    return Array.from(sectionsMap.values());\n  };\n\n  const getChordSections = (itemId) => {\n    const charts = chordCharts[itemId] || [];\n    return buildSectionsFromCharts(charts);\n  };\n\n  // Copy modal: Memoized similar items calculation (copied from PracticePage)\n  const similarItemIds = useMemo(() => {\n    if (!copySourceItemId || !allItems) return new Set();\n\n    const sourceItem = allItems.find(item => item['B'] === copySourceItemId);\n    const sourceTitle = sourceItem?.['C'] || '';\n    const allFilteredItems = allItems.filter(item => item['B'] !== copySourceItemId);\n\n    return new Set(\n      findSimilarSongs(sourceTitle, allFilteredItems, copySourceItemId).map(item => item['A'])\n    );\n  }, [copySourceItemId, allItems]);\n\n  // Copy modal: Memoized filtered and sorted items (copied from PracticePage)\n  const sortedAndFilteredItems = useMemo(() => {\n    if (!allItems) return [];\n\n    return allItems\n      .filter(item => {\n        // Filter out the source item\n        if (item['B'] === copySourceItemId) return false;\n\n        // Filter by search term\n        if (copySearchTerm.trim()) {\n          const title = item['C'] || '';\n          const normalizedTitle = normalizeText(title);\n          const normalizedSearch = normalizeText(copySearchTerm);\n\n          if (!normalizedSearch) return true;\n          return normalizedTitle.includes(normalizedSearch);\n        }\n\n        return true;\n      })\n      .sort((a, b) => {\n        // If there's an active search term, only sort alphabetically\n        if (copySearchTerm.trim()) {\n          const aTitle = a['C'] || '';\n          const bTitle = b['C'] || '';\n          return aTitle.localeCompare(bTitle);\n        }\n\n        // Check if items are similar to source\n        const aIsSimilar = similarItemIds.has(a['A']);\n        const bIsSimilar = similarItemIds.has(b['A']);\n\n        // Sort similar songs to the top\n        if (aIsSimilar && !bIsSimilar) return -1;\n        if (!aIsSimilar && bIsSimilar) return 1;\n\n        // Within each group, sort alphabetically\n        const aTitle = a['C'] || '';\n        const bTitle = b['C'] || '';\n        return aTitle.localeCompare(bTitle);\n      });\n  }, [allItems, copySourceItemId, copySearchTerm, similarItemIds]);\n\n  // Debounced update function for section metadata\n  const debouncedUpdateSection = useMemo(\n    () => debounce(async (itemId, sectionId, updates) => {\n      try {\n        console.log('Debounced section update:', { itemId, sectionId, updates });\n\n        // Get all charts in this section\n        const itemCharts = chordCharts[itemId] || [];\n        const sectionCharts = itemCharts.filter(chart =>\n          (chart.sectionId || 'default-section') === sectionId\n        );\n\n        if (sectionCharts.length === 0) {\n          console.warn('No charts found for section:', sectionId);\n          return;\n        }\n\n        console.log('Updating section charts:', sectionCharts.length);\n\n        // Update each chart in the section\n        const updatePromises = sectionCharts.map(async (chart) => {\n          const updatedChartData = {\n            ...chart.chord_data,\n            sectionId: sectionId,\n            sectionLabel: updates.label !== undefined ? updates.label : (chart.sectionLabel || 'Section'),\n            sectionRepeatCount: updates.repeatCount !== undefined ? updates.repeatCount : (chart.sectionRepeatCount || '')\n          };\n\n          const response = await fetch(`/api/chord-charts/${chart.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              title: chart.title,\n              chord_data: updatedChartData\n            }),\n          });\n\n          if (!response.ok) {\n            throw new Error(`Failed to update chart ${chart.id}: ${response.statusText}`);\n          }\n\n          return response.json();\n        });\n\n        await Promise.all(updatePromises);\n        console.log('All section charts updated successfully');\n\n      } catch (error) {\n        console.error('Error updating section:', error);\n      }\n    }, 500),\n    [chordCharts]\n  );\n\n  const updateSectionLocal = (itemId, sectionId, updates) => {\n    console.log('Local section update:', { itemId, sectionId, updates });\n\n    // Update local state immediately for responsive UI\n    setChordSections(prev => {\n      const sections = prev[itemId] || [];\n      const updatedSections = sections.map(section => {\n        if (section.id === sectionId) {\n          return {\n            ...section,\n            ...updates\n          };\n        }\n        return section;\n      });\n\n      return {\n        ...prev,\n        [itemId]: updatedSections\n      };\n    });\n\n    // Trigger debounced backend update\n    debouncedUpdateSection(itemId, sectionId, updates);\n  };\n\n  const deleteSection = async (itemId, sectionId) => {\n    if (deletingSection.has(sectionId)) return;\n\n    setDeletingSection(prev => new Set(prev).add(sectionId));\n\n    try {\n      // Get all charts in this section\n      const itemCharts = chordCharts[itemId] || [];\n      const sectionCharts = itemCharts.filter(chart =>\n        (chart.sectionId || 'default-section') === sectionId\n      );\n\n      // Delete all charts in the section\n      const deletePromises = sectionCharts.map(chart =>\n        fetch(`/api/items/${itemId}/chord-charts/${chart.id}`, {\n          method: 'DELETE'\n        })\n      );\n\n      await Promise.all(deletePromises);\n\n      // Update local state\n      const remainingCharts = itemCharts.filter(chart =>\n        (chart.sectionId || 'default-section') !== sectionId\n      );\n\n      setChordCharts(prev => ({\n        ...prev,\n        [itemId]: remainingCharts\n      }));\n\n      setChordSections(prev => ({\n        ...prev,\n        [itemId]: buildSectionsFromCharts(remainingCharts)\n      }));\n\n    } catch (error) {\n      console.error('Error deleting section:', error);\n    } finally {\n      setDeletingSection(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(sectionId);\n        return newSet;\n      });\n    }\n  };\n\n  const addNewSection = (itemId) => {\n    const newSectionId = `section-${Date.now()}`;\n    const newSection = {\n      id: newSectionId,\n      label: 'New Section',\n      repeatCount: '',\n      chords: []\n    };\n\n    setChordSections(prev => ({\n      ...prev,\n      [itemId]: [...(prev[itemId] || []), newSection]\n    }));\n\n    // Open chord editor for this section\n    setScrollBackContext({\n      itemId: itemId,\n      scrollPosition: window.scrollY\n    });\n    setShowChordEditor(prev => ({ ...prev, [itemId]: true }));\n    setInsertionContext({\n      sectionId: newSectionId,\n      sectionLabel: 'New Section',\n      sectionRepeatCount: ''\n    });\n  };\n\n  const handleEditChordChart = (itemId, chordId, _chartData) => {\n    setEditingChordId(chordId);\n    setInsertionContext(null);\n    setScrollBackContext({\n      itemId: itemId,\n      chordId: chordId,\n      scrollPosition: window.scrollY\n    });\n    setShowChordEditor(prev => ({ ...prev, [itemId]: true }));\n\n    // Auto-scroll to the chord editor after it opens (keep chord name field visible at top)\n    setTimeout(() => {\n      const editorElement = document.querySelector(`[data-editor-for-item=\"${itemId}\"]`);\n      if (editorElement) {\n        editorElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center',\n          inline: 'nearest'\n        });\n      }\n    }, 100); // Small delay to ensure the editor has rendered\n  };\n\n  const handleDeleteChordChart = async (itemId, chordId) => {\n    try {\n      const response = await fetch(`/api/items/${itemId}/chord-charts/${chordId}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        // Remove from local state\n        setChordCharts(prev => ({\n          ...prev,\n          [itemId]: (prev[itemId] || []).filter(chart => chart.id !== chordId)\n        }));\n\n        // Rebuild sections\n        const updatedCharts = (chordCharts[itemId] || []).filter(chart => chart.id !== chordId);\n        setChordSections(prev => ({\n          ...prev,\n          [itemId]: buildSectionsFromCharts(updatedCharts)\n        }));\n\n        trackChordChartEvent('chord_chart_deleted', { itemId });\n      }\n    } catch (error) {\n      console.error('Error deleting chord chart:', error);\n    }\n  };\n\n  const handleInsertChordAfter = (itemId, chordId, contextData) => {\n    setEditingChordId(null);\n    setInsertionContext({\n      afterChordId: chordId,\n      sectionId: contextData.sectionId,\n      sectionLabel: contextData.sectionLabel,\n      sectionRepeatCount: contextData.sectionRepeatCount\n    });\n    setScrollBackContext({\n      itemId: itemId,\n      scrollPosition: window.scrollY\n    });\n    setShowChordEditor(prev => ({ ...prev, [itemId]: true }));\n  };\n\n  const handleSaveChordChart = async (itemId, chartData) => {\n    try {\n      serverDebug('handleSaveChordChart called', { editingChordId, chartData });\n      const isUpdate = !!editingChordId; // Check state variable to determine if we're editing\n      serverDebug('isUpdate check result', { isUpdate, editingChordId });\n\n      // Build chart data - spread all properties (backend will build chord_data object from flattened format)\n      let chartDataWithSection = { ...chartData };\n\n      if (isUpdate) {\n        // For updates, preserve the original chord's section information (copied from PracticePage)\n        const originalChord = (chordCharts[itemId] || []).find(chord => chord.id === editingChordId);\n\n        // Add section metadata to preserve original section\n        chartDataWithSection.sectionId = originalChord?.sectionId;\n        chartDataWithSection.sectionLabel = originalChord?.sectionLabel;\n        chartDataWithSection.sectionRepeatCount = originalChord?.sectionRepeatCount;\n\n        serverDebug('Updating chord, preserving section', {\n          originalSection: {\n            id: originalChord?.sectionId,\n            label: originalChord?.sectionLabel,\n            repeatCount: originalChord?.sectionRepeatCount\n          }\n        });\n\n      } else {\n        // For new chords, determine target section\n        const itemSections = chordSections[itemId] || [];\n        let targetSection;\n\n        if (insertionContext) {\n          // Use the insertion context section\n          targetSection = {\n            id: insertionContext.sectionId,\n            label: insertionContext.sectionLabel,\n            repeatCount: insertionContext.sectionRepeatCount\n          };\n        } else if (itemSections.length === 0) {\n          // No sections exist, create default\n          targetSection = {\n            id: 'section-1',\n            label: 'Verse',\n            repeatCount: ''\n          };\n        } else {\n          // Use the last section (original behavior for \"Add New Chord\")\n          targetSection = itemSections[itemSections.length - 1];\n        }\n\n        // Add section metadata to chart data\n        chartDataWithSection.sectionId = targetSection.id;\n        chartDataWithSection.sectionLabel = targetSection.label;\n        chartDataWithSection.sectionRepeatCount = targetSection.repeatCount;\n      }\n\n      // Handle line break after this chord - always set the value explicitly\n      chartDataWithSection.hasLineBreakAfter = chartData.startOnNewLine || false;\n      serverDebug('Setting line break after chord', {\n        title: chartDataWithSection.title,\n        hasLineBreakAfter: chartDataWithSection.hasLineBreakAfter\n      });\n\n      serverDebug('Chord data with section metadata', { chartDataWithSection });\n\n      const url = isUpdate\n        ? `/api/chord-charts/${editingChordId}`\n        : `/api/items/${itemId}/chord-charts`;\n      const method = isUpdate ? 'PUT' : 'POST';\n\n      serverDebug(`${isUpdate ? 'Updating' : 'Creating'} chord chart`, { method, url });\n\n      const response = await fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(chartDataWithSection)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to save chord chart: ${response.statusText}`);\n      }\n\n      if (isUpdate) {\n        const updatedChart = await response.json();\n\n        // Update local state\n        setChordCharts(prev => ({\n          ...prev,\n          [itemId]: (prev[itemId] || []).map(chart =>\n            chart.id === editingChordId ? updatedChart : chart\n          )\n        }));\n\n        // Rebuild sections\n        const updatedCharts = (chordCharts[itemId] || []).map(chart =>\n          chart.id === editingChordId ? updatedChart : chart\n        );\n        setChordSections(prev => ({\n          ...prev,\n          [itemId]: buildSectionsFromCharts(updatedCharts)\n        }));\n\n        trackChordChartEvent('chord_chart_updated', { itemId });\n      } else {\n        const newChart = await response.json();\n\n        // Add to local state\n        setChordCharts(prev => ({\n          ...prev,\n          [itemId]: [...(prev[itemId] || []), newChart]\n        }));\n\n        // Rebuild sections\n        const updatedCharts = [...(chordCharts[itemId] || []), newChart];\n        setChordSections(prev => ({\n          ...prev,\n          [itemId]: buildSectionsFromCharts(updatedCharts)\n        }));\n\n        trackChordChartEvent('chord_chart_created', { itemId });\n      }\n\n      // Close editor\n      setShowChordEditor(prev => ({ ...prev, [itemId]: false }));\n      setEditingChordId(null);\n      setInsertionContext(null);\n\n    } catch (error) {\n      console.error('Error saving chord chart:', error);\n    }\n  };\n\n  const scrollBackToChord = () => {\n    if (scrollBackContext.itemId && scrollBackContext.chordId) {\n      setTimeout(() => {\n        // Try to find the specific chord chart element first\n        const chordElement = document.querySelector(`[data-chord-id=\"${scrollBackContext.chordId}\"]`);\n        if (chordElement) {\n          chordElement.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest'\n          });\n        } else if (scrollBackContext.scrollPosition !== undefined) {\n          // Fallback to original scroll position\n          window.scrollTo({\n            top: scrollBackContext.scrollPosition,\n            behavior: 'smooth'\n          });\n        }\n        setScrollBackContext({});\n      }, 100);\n    }\n  };\n\n  const handlePrintChords = (itemId) => {\n    const charts = chordCharts[itemId] || [];\n    if (charts.length === 0) return;\n\n    // Create print window\n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <html>\n        <head>\n          <title>Chord Charts - ${itemTitle || itemId}</title>\n          <style>\n            body { font-family: Arial, sans-serif; margin: 20px; }\n            h1 { text-align: center; margin-bottom: 30px; }\n            .section { margin-bottom: 40px; }\n            .section-header { font-size: 18px; font-weight: bold; margin-bottom: 15px; }\n            .chord-grid { display: grid; grid-template-columns: repeat(5, 1fr); gap: 20px; margin-bottom: 20px; }\n            .chord-item { text-align: center; }\n            .chord-svg { margin-bottom: 5px; }\n            .chord-title { font-weight: bold; }\n            @media print { body { margin: 0; } }\n          </style>\n        </head>\n        <body>\n          <h2>Chord Charts - ${itemTitle || itemId}</h2>\n          ${getChordSections(itemId).map(section => `\n            <div class=\"section\">\n              <div class=\"section-header\">${section.label} ${section.repeatCount}</div>\n              <div class=\"chord-grid\">\n                ${section.chords.map(chart => `\n                  <div class=\"chord-item\">\n                    <div class=\"chord-svg\">${chart.svg_content || ''}</div>\n                    <div class=\"chord-title\">${chart.title}</div>\n                  </div>\n                `).join('')}\n              </div>\n            </div>\n          `).join('')}\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.print();\n  };\n\n  // Autocreate functions\n  const validateManualChordInput = (input, itemId) => {\n    if (!input || input.trim().length === 0) {\n      setManualInputErrors(prev => ({ ...prev, [itemId]: null }));\n      return true;\n    }\n\n    const trimmedInput = input.trim();\n\n    // Pattern: Allow chord names (letters, numbers, #, b, ♭, ♯, /), commas, spaces, and section names on their own lines\n    // Valid examples: \"C, G, Am, F\", \"verse\\nC, G, Am\\nchorus\\nF, C, G\", \"Em7, A#, Bb\", \"Intro D A G D\", \"C/G\"\n    const validPattern = /^[A-Za-z0-9#b♭♯/\\s,\\n\\r-]+$/;\n\n    if (!validPattern.test(trimmedInput)) {\n      setManualInputErrors(prev => ({\n        ...prev,\n        [itemId]: 'Only chord names (A-G), numbers, #, b, ♭, ♯, /, commas, spaces, and section names are allowed'\n      }));\n      return false;\n    }\n\n    // Check for potentially problematic patterns\n    const lines = trimmedInput.split(/[\\n\\r]+/);\n    const hasValidContent = lines.some(line => {\n      const cleanLine = line.trim();\n      if (cleanLine.length === 0) return false;\n\n      // Check if this is a section name (single word, letters only)\n      if (/^[A-Za-z]+$/.test(cleanLine)) return true;\n\n      // Check if this line contains only chords (space-separated or comma-separated)\n      const words = cleanLine.split(/[,\\s]+/).filter(word => word.trim().length > 0);\n      const allWordsAreChords = words.every(word => /^[A-Ga-g][A-Za-z0-9#b♭♯/]*$/.test(word));\n\n      return allWordsAreChords;\n    });\n\n    if (!hasValidContent) {\n      setManualInputErrors(prev => ({\n        ...prev,\n        [itemId]: 'Please enter chord names separated by commas, spaces, or section names (e.g., \"C, G, Am, F\" or \"D A G D\" or \"Intro\")'\n      }));\n      return false;\n    }\n\n    setManualInputErrors(prev => ({ ...prev, [itemId]: null }));\n    return true;\n  };\n\n  const handleSingleFileDrop = (itemId, files) => {\n    if (!files || files.length === 0) return;\n\n    // Validate file count\n    if (files.length > 5) {\n      alert('Maximum 5 files allowed. Please select fewer files.');\n      return;\n    }\n\n    setUploadedFiles(prev => ({ ...prev, [itemId]: Array.from(files) }));\n  };\n\n  const handleProcessFiles = async (itemId) => {\n    const files = uploadedFiles[itemId] || [];\n    const youtubeUrl = youtubeUrls[itemId]?.trim();\n    const manualChords = manualChordInput[itemId]?.trim();\n\n    console.log(`[AUTOCREATE] handleProcessFiles called for item ${itemId}, files:`, files.length, 'youtubeUrl:', youtubeUrl, 'manualChords:', manualChords);\n\n    // Handle YouTube URL if provided\n    if (youtubeUrl) {\n      await handleYouTubeUrl(itemId, youtubeUrl);\n      return;\n    }\n\n    // Handle manual chord input if provided\n    if (manualChords) {\n      if (validateManualChordInput(manualChords, itemId)) {\n        await handleManualChordInput(itemId, manualChords);\n        return;\n      } else {\n        return; // Stop processing if validation fails\n      }\n    }\n\n    // Handle files if provided\n    if (files.length === 0) {\n      alert('Please add at least one file, YouTube URL, or manual chord input before processing.');\n      return;\n    }\n\n    await handleFileDrop(itemId, files);\n  };\n\n  const handleManualChordInput = async (itemId, chordInput) => {\n    console.log(`[AUTOCREATE] Processing manual chord input for item ${itemId}:`, chordInput);\n\n    setAutocreateProgress(prev => ({\n      ...prev,\n      [itemId]: 'processing'\n    }));\n\n    try {\n      // Create abort controller for this request (copied from PracticePage)\n      const abortController = new AbortController();\n      setAutocreateAbortController(prev => ({ ...prev, [itemId]: abortController }));\n\n      // Create a text file from the manual input and send it to the autocreate endpoint\n      const textBlob = new Blob([chordInput], { type: 'text/plain' });\n      const textFile = new File([textBlob], 'manual-input.txt', { type: 'text/plain' });\n\n      const formData = new FormData();\n      formData.append('file0', textFile);\n      formData.append('itemId', itemId);\n      formData.append('userChoice', 'chord_names'); // Indicate this is chord names input\n\n      console.log(`[AUTOCREATE] Sending manual input to autocreate endpoint`);\n\n      const response = await fetch('/api/autocreate-chord-charts', {\n        method: 'POST',\n        body: formData,\n        signal: abortController.signal\n      });\n\n      if (!response.ok) {\n        const errorData = await response.text();\n        throw new Error(`Failed to process manual input: ${response.status} ${response.statusText} - ${errorData}`);\n      }\n\n      const result = await response.json();\n      console.log(`[AUTOCREATE] Manual input processed successfully:`, result);\n\n      // Force refresh UI state - same as other autocreate methods\n      const chartResponse = await fetch(`/api/items/${itemId}/chord-charts`);\n      const charts = await chartResponse.json();\n\n      setChordCharts(prev => ({\n        ...prev,\n        [itemId]: charts\n      }));\n\n      setChordSections(prev => ({\n        ...prev,\n        [itemId]: buildSectionsFromCharts(charts)\n      }));\n\n      // Clear the manual input\n      setManualChordInput(prev => ({\n        ...prev,\n        [itemId]: ''\n      }));\n\n      setAutocreateProgress(prev => ({ ...prev, [itemId]: 'complete' }));\n\n      // Show success modal\n      const itemDetails = getItemDetails(itemId);\n      setAutocreateSuccessData({\n        itemName: itemDetails?.C || `Item ${itemId}`,\n        chordCount: charts.length,\n        contentType: 'chord_names',\n        uploadedFileNames: 'Manual entry',\n        isVisionAnalysis: false\n      });\n      setShowAutocreateSuccessModal(true);\n\n      // Clean up abort controller (copied from PracticePage)\n      setAutocreateAbortController(prev => {\n        const newState = { ...prev };\n        delete newState[itemId];\n        return newState;\n      });\n\n      setTimeout(() => {\n        setAutocreateProgress(prev => ({ ...prev, [itemId]: null }));\n        setShowAutocreateZone(prev => ({ ...prev, [itemId]: false }));\n      }, 2000);\n\n    } catch (error) {\n      console.error('Error processing manual chord input:', error);\n      setAutocreateProgress(prev => ({ ...prev, [itemId]: 'error' }));\n\n      // Clean up abort controller on error (copied from PracticePage)\n      setAutocreateAbortController(prev => {\n        const newState = { ...prev };\n        delete newState[itemId];\n        return newState;\n      });\n\n      setTimeout(() => {\n        setAutocreateProgress(prev => ({ ...prev, [itemId]: null }));\n      }, 3000);\n    }\n  };\n\n  const handleYouTubeUrl = async (itemId, youtubeUrl) => {\n    console.log(`[YOUTUBE] Processing YouTube URL for item ${itemId}:`, youtubeUrl);\n\n    // Sanitize and validate YouTube URL format\n    const sanitizedUrl = youtubeUrl.trim().replace(/[<>\"']/g, '');\n    const youtubeRegex = /^https?:\\/\\/(www\\.)?(youtube\\.com\\/watch\\?v=[\\w-]+|youtu\\.be\\/[\\w-]+)(\\?.*|&.*)?$/;\n\n    if (!youtubeRegex.test(sanitizedUrl)) {\n      console.log(`[YOUTUBE] URL validation failed for: ${sanitizedUrl}`);\n      setApiError({ message: 'Please enter a valid YouTube URL (e.g., https://youtube.com/watch?v=...)' });\n      setShowApiErrorModal(true);\n      return;\n    }\n\n    console.log(`[YOUTUBE] URL validation passed, setting progress state`);\n    setAutocreateProgress(prev => ({\n      ...prev,\n      [itemId]: 'checking_transcript'\n    }));\n\n    try {\n      // First, check if transcript is available and fetch it\n      console.log('[YOUTUBE] Fetching transcript from YouTube API');\n      const transcriptResponse = await fetch('/api/youtube/check-transcript', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ url: sanitizedUrl })\n      });\n\n      if (!transcriptResponse.ok) {\n        throw new Error('Failed to fetch YouTube transcript');\n      }\n\n      const transcriptData = await transcriptResponse.json();\n\n      if (!transcriptData.hasTranscript || !transcriptData.transcript) {\n        setApiError({\n          message: 'This YouTube video does not have a transcript available. Please try a different video or use file upload instead.'\n        });\n        setShowApiErrorModal(true);\n        return;\n      }\n\n      console.log(`[YOUTUBE] Transcript fetched successfully, length: ${transcriptData.transcript.length} characters`);\n\n      // Update progress to processing\n      setAutocreateProgress(prev => ({\n        ...prev,\n        [itemId]: 'processing'\n      }));\n\n      // Create a file with the actual transcript text\n      const transcriptBlob = new Blob([transcriptData.transcript], { type: 'text/plain' });\n      const transcriptFile = new File([transcriptBlob], 'youtube_transcript.txt', { type: 'text/plain' });\n\n      const formData = new FormData();\n      formData.append('file0', transcriptFile);\n      formData.append('itemId', itemId);\n      formData.append('userChoice', 'chord_names');\n\n      console.log(`[AUTOCREATE] Sending transcript to autocreate endpoint`);\n\n      const response = await fetch('/api/autocreate-chord-charts', {\n        method: 'POST',\n        body: formData\n      });\n\n      if (!response.ok) {\n        const errorData = await response.text();\n        throw new Error(`Failed to process YouTube transcript: ${response.status} ${response.statusText} - ${errorData}`);\n      }\n\n      const result = await response.json();\n      console.log(`[AUTOCREATE] YouTube transcript processed successfully:`, result);\n\n      // Force refresh UI state\n      const chartResponse = await fetch(`/api/items/${itemId}/chord-charts`);\n      const charts = await chartResponse.json();\n\n      setChordCharts(prev => ({\n        ...prev,\n        [itemId]: charts\n      }));\n\n      setChordSections(prev => ({\n        ...prev,\n        [itemId]: buildSectionsFromCharts(charts)\n      }));\n\n      // Clear the YouTube input\n      setYoutubeUrls(prev => ({\n        ...prev,\n        [itemId]: ''\n      }));\n\n      // Show success modal\n      const itemDetails = getItemDetails(itemId);\n      setAutocreateSuccessData({\n        itemName: itemDetails?.C || `Item ${itemId}`,\n        chordCount: charts.length,\n        contentType: 'chord_names',\n        uploadedFileNames: 'YouTube transcript',\n        isVisionAnalysis: false\n      });\n      setShowAutocreateSuccessModal(true);\n\n    } catch (error) {\n      console.error('Error processing YouTube URL:', error);\n      setApiError({ message: 'Failed to process YouTube URL. Please try again.' });\n      setShowApiErrorModal(true);\n    } finally {\n      setAutocreateProgress(prev => {\n        const newState = { ...prev };\n        delete newState[itemId];\n        return newState;\n      });\n    }\n\n  };\n\n  const handleFileDrop = async (itemId, files) => {\n    try {\n      setAutocreateProgress(prev => ({ ...prev, [itemId]: 'uploading' }));\n\n      // Create abort controller for this request (copied from PracticePage)\n      const abortController = new AbortController();\n      setAutocreateAbortController(prev => ({ ...prev, [itemId]: abortController }));\n\n      const formData = new FormData();\n      files.forEach((file, index) => {\n        formData.append(`file${index}`, file);\n      });\n\n      formData.append('itemId', itemId);\n\n      // Show uploading for minimum 2 seconds, then switch to processing (copied from PracticePage)\n      const minDisplayTime = 2000;\n      setTimeout(() => {\n        setAutocreateProgress(prev => ({ ...prev, [itemId]: 'processing' }));\n      }, minDisplayTime);\n\n      const response = await fetch('/api/autocreate-chord-charts', {\n        method: 'POST',\n        body: formData,\n        signal: abortController.signal\n      });\n\n      if (response.ok) {\n        setAutocreateProgress(prev => ({ ...prev, [itemId]: 'complete' }));\n\n        // Refresh chord charts\n        const chartsResponse = await fetch(`/api/items/${itemId}/chord-charts`);\n        const charts = await chartsResponse.json();\n\n        setChordCharts(prev => ({\n          ...prev,\n          [itemId]: charts\n        }));\n\n        setChordSections(prev => ({\n          ...prev,\n          [itemId]: buildSectionsFromCharts(charts)\n        }));\n\n        // Clear inputs\n        setUploadedFiles(prev => ({ ...prev, [itemId]: [] }));\n\n        trackChordChartEvent('autocreate_completed', { itemId, fileCount: files.length });\n\n        // Show success modal\n        const itemDetails = getItemDetails(itemId);\n        const fileNames = files.map(f => f.name).join(', ');\n        setAutocreateSuccessData({\n          itemName: itemDetails?.C || `Item ${itemId}`,\n          chordCount: charts.length,\n          contentType: 'auto-detected',\n          uploadedFileNames: fileNames,\n          isVisionAnalysis: false\n        });\n        setShowAutocreateSuccessModal(true);\n\n        // Clean up abort controller (copied from PracticePage)\n        setAutocreateAbortController(prev => {\n          const newState = { ...prev };\n          delete newState[itemId];\n          return newState;\n        });\n\n        setTimeout(() => {\n          setAutocreateProgress(prev => ({ ...prev, [itemId]: null }));\n          setShowAutocreateZone(prev => ({ ...prev, [itemId]: false }));\n        }, 2000);\n\n      } else {\n        setAutocreateProgress(prev => ({ ...prev, [itemId]: 'error' }));\n\n        // Clean up abort controller on error (copied from PracticePage)\n        setAutocreateAbortController(prev => {\n          const newState = { ...prev };\n          delete newState[itemId];\n          return newState;\n        });\n\n        setTimeout(() => {\n          setAutocreateProgress(prev => ({ ...prev, [itemId]: null }));\n        }, 3000);\n      }\n\n    } catch (error) {\n      console.error('Error processing files:', error);\n      setAutocreateProgress(prev => ({ ...prev, [itemId]: 'error' }));\n\n      // Clean up abort controller on error (copied from PracticePage)\n      setAutocreateAbortController(prev => {\n        const newState = { ...prev };\n        delete newState[itemId];\n        return newState;\n      });\n\n      setTimeout(() => {\n        setAutocreateProgress(prev => ({ ...prev, [itemId]: null }));\n      }, 3000);\n    }\n  };\n\n  // Autocreate functions (copied from PracticePage)\n  const handleAutocreateClick = (itemId) => {\n    const existingCharts = chordCharts[itemId] || [];\n    if (existingCharts.length > 0) {\n      // Show modal asking to delete existing charts\n      setDeleteModalItemId(itemId);\n      setShowDeleteChordsModal(true);\n    } else {\n      // No existing charts, proceed with autocreate zone\n      setShowAutocreateZone(prev => ({ ...prev, [itemId]: true }));\n    }\n  };\n\n  const handleDeleteExistingCharts = async () => {\n    if (!deleteModalItemId) return;\n\n    try {\n      // Delete all chord charts for this item\n      const existingCharts = chordCharts[deleteModalItemId] || [];\n      for (const chart of existingCharts) {\n        const response = await fetch(`/api/items/${deleteModalItemId}/chord-charts/${chart.id}`, {\n          method: 'DELETE'\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to delete chord chart ${chart.id}`);\n        }\n      }\n\n      // Force refresh chord charts (clear state first since all charts are deleted)\n      setChordCharts(prev => ({\n        ...prev,\n        [deleteModalItemId]: []\n      }));\n      setChordSections(prev => ({\n        ...prev,\n        [deleteModalItemId]: []\n      }));\n\n      // Show autocreate zone after deletion\n      setShowAutocreateZone(prev => ({ ...prev, [deleteModalItemId]: true }));\n\n      // Close modal\n      setShowDeleteChordsModal(false);\n      setDeleteModalItemId(null);\n    } catch (error) {\n      console.error('Error deleting existing chord charts:', error);\n    }\n  };\n\n  const handleShowCancelConfirmation = (itemId) => {\n    setCancellingItemId(itemId);\n    setShowCancelDialog(true);\n  };\n\n  // Cancel autocreate functionality (copied from PracticePage)\n  const handleCancelAutocreate = (itemId) => {\n    // Cancel the request if it's in progress\n    if (autocreateAbortController[itemId]) {\n      autocreateAbortController[itemId].abort();\n    }\n\n    // Reset all state for this item\n    setAutocreateProgress(prev => {\n      const newState = { ...prev };\n      delete newState[itemId];\n      return newState;\n    });\n    setAutocreateAbortController(prev => {\n      const newState = { ...prev };\n      delete newState[itemId];\n      return newState;\n    });\n    setUploadedFiles(prev => {\n      const newState = { ...prev };\n      delete newState[itemId];\n      return newState;\n    });\n    setYoutubeUrls(prev => ({\n      ...prev,\n      [itemId]: ''\n    }));\n    setManualChordInput(prev => ({\n      ...prev,\n      [itemId]: ''\n    }));\n    setShowAutocreateZone(prev => ({ ...prev, [itemId]: false }));\n  };\n\n  const handleOpenCopyFromModal = (itemId) => {\n    // TODO: Implement copy FROM modal (not included in this update)\n    console.log('Open copy from modal for item:', itemId);\n  };\n\n  // Copy modal: Open copy TO modal (copied from PracticePage)\n  const handleOpenCopyModal = async (itemId) => {\n    console.log('Opening copy modal for item:', itemId);\n    setCopySourceItemId(itemId);\n\n    // Get source item details for fuzzy matching\n    const sourceItem = allItems?.find(item => item['B'] === itemId);\n    const sourceTitle = sourceItem?.['C'] || '';\n\n    // Find similar songs first\n    const similarSongs = findSimilarSongs(sourceTitle, allItems, itemId);\n    console.log('Source:', sourceTitle);\n    console.log('Found similar songs:', similarSongs.map(s => s['C']));\n\n    // Load chord charts for source + similar songs\n    const itemsToLoad = [itemId, ...similarSongs.map(s => s['B'])];\n    console.log('Loading chord charts for relevant items:', itemsToLoad.length, 'items');\n\n    for (const id of itemsToLoad) {\n      try {\n        const response = await fetch(`/api/items/${id}/chord-charts`);\n        if (response.ok) {\n          const charts = await response.json();\n          setChordCharts(prev => ({ ...prev, [id]: charts }));\n          console.log(`Loaded ${charts.length} charts for item ${id}`);\n        }\n      } catch (error) {\n        console.error(`Error loading chord charts for item ${id}:`, error);\n      }\n    }\n\n    setShowCopyModal(true);\n    setCopySearchTerm('');\n    setSelectedTargetItems(new Set());\n    setCopyProgress(null);\n  };\n\n  // Copy modal: Close modal (copied from PracticePage)\n  const handleCloseCopyModal = () => {\n    setShowCopyModal(false);\n    setCopySourceItemId(null);\n    setCopySearchTerm('');\n    setSelectedTargetItems(new Set());\n    setItemsWithExistingCharts(new Set());\n    setShowOverwriteConfirmation(false);\n    setCopyProgress(null);\n  };\n\n  // Copy modal: Toggle target item selection (copied from PracticePage)\n  const handleToggleTargetItem = (itemPrimaryKey) => {\n    setSelectedTargetItems(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(itemPrimaryKey)) {\n        newSet.delete(itemPrimaryKey);\n      } else {\n        newSet.add(itemPrimaryKey);\n        // Lazy load chord charts for overwrite detection\n        const targetItem = allItems?.find(item => item['A'] === itemPrimaryKey);\n        const itemReferenceId = targetItem?.['B'];\n        if (itemReferenceId) {\n          loadChordChartsForItem(itemReferenceId);\n        }\n      }\n      return newSet;\n    });\n  };\n\n  // Copy modal: Confirm copy operation (copied from PracticePage)\n  const handleConfirmCopy = async () => {\n    console.log('handleConfirmCopy called', { copySourceItemId, selectedTargetItems: Array.from(selectedTargetItems) });\n    if (!copySourceItemId || selectedTargetItems.size === 0) {\n      console.log('Early return: missing source or targets');\n      return;\n    }\n\n    // If there are overwrites and we haven't confirmed yet, show confirmation\n    if (itemsWithExistingCharts.size > 0 && !showOverwriteConfirmation) {\n      console.log('Showing overwrite confirmation, items with existing charts:', itemsWithExistingCharts.size);\n      setShowOverwriteConfirmation(true);\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/chord-charts/copy', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          source_item_id: copySourceItemId,\n          target_item_ids: Array.from(selectedTargetItems).map(primaryKey => {\n            const targetItem = allItems?.find(item => item['A'] === primaryKey);\n            return targetItem?.['B'];\n          }).filter(Boolean)\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to copy chord charts: ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      console.log('Chord charts copied successfully:', result);\n\n      // Set copy progress to complete\n      setCopyProgress('complete');\n\n      // Force refresh chord charts for all affected items\n      const targetItemIds = Array.from(selectedTargetItems).map(primaryKey => {\n        const targetItem = allItems?.find(item => item['A'] === primaryKey);\n        return targetItem?.['B'];\n      }).filter(Boolean);\n      const affectedItems = [copySourceItemId, ...targetItemIds];\n      console.log('[DEBUG COPY] About to refresh chord charts for affected items:', affectedItems);\n\n      for (const itemIdToRefresh of affectedItems) {\n        try {\n          const refreshResponse = await fetch(`/api/items/${itemIdToRefresh}/chord-charts`);\n          if (refreshResponse.ok) {\n            const charts = await refreshResponse.json();\n\n            console.log('[DEBUG COPY] Updating chordCharts state for item', itemIdToRefresh, 'with', charts.length, 'charts');\n            setChordCharts(prev => ({\n              ...prev,\n              [itemIdToRefresh]: charts\n            }));\n\n            // Build sections from loaded chord charts\n            setChordSections(prev => ({\n              ...prev,\n              [itemIdToRefresh]: buildSectionsFromCharts(charts)\n            }));\n          }\n        } catch (error) {\n          console.error(`Error refreshing chord charts for item ${itemIdToRefresh}:`, error);\n        }\n      }\n    } catch (error) {\n      console.error('Error copying chord charts:', error);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  const itemReferenceId = itemId;\n\n  return (\n    <>\n    <Dialog open={isOpen && !showCopyModal} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-[95vw] sm:max-w-2xl md:max-w-3xl lg:max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <Music className=\"h-5 w-5\" />\n            Chord Charts - {itemTitle || itemId}\n          </DialogTitle>\n          <DialogDescription className=\"sr-only\">\n            View and manage chord charts for this practice item\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-4\">\n          {/* This is the exact copy of the chord charts section from PracticePage.jsx lines 3357-3928 */}\n          {(() => {\n            const sectionsFromState = chordSections[itemReferenceId];\n            const sectionsFromCharts = sectionsFromState ? null : getChordSections(itemReferenceId);\n            const finalSections = sectionsFromState || sectionsFromCharts || [];\n\n            // Map sections to JSX elements with itemReferenceId in scope\n            const sections = finalSections.map((section, sectionIndex) => {\n              return (\n            <div key={section.id} className=\"mb-6\">\n              {/* Section header with label and repeat count */}\n              <div className=\"flex justify-between items-center mb-3\">\n                {/* Section label (top-left) */}\n                <input\n                  type=\"text\"\n                  value={section.label}\n                  onChange={(e) => {\n                    console.log('Updating section label:', section.id, e.target.value);\n                    updateSectionLocal(itemReferenceId, section.id, { label: e.target.value });\n                  }}\n                  className=\"bg-gray-900 text-white px-2 py-1 rounded text-sm font-semibold border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Section name\"\n                />\n\n                {/* Repeat count, line break, and section delete */}\n                <div className=\"flex items-center gap-2\">\n                  <input\n                    type=\"text\"\n                    value={section.repeatCount}\n                    onChange={(e) => updateSectionLocal(itemReferenceId, section.id, { repeatCount: e.target.value })}\n                    className=\"bg-gray-900 text-white px-2 py-1 rounded text-sm w-6 text-center border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"x2\"\n                    maxLength=\"3\"\n                  />\n                  <button\n                    onClick={() => deleteSection(itemReferenceId, section.id)}\n                    disabled={deletingSection.size > 0}\n                    className={`w-5 h-5 rounded-full flex items-center justify-center text-xs font-bold transition-colors ${\n                      deletingSection.size > 0\n                        ? 'bg-gray-500 cursor-not-allowed'\n                        : 'bg-red-600 hover:bg-red-700 cursor-pointer'\n                    } text-white`}\n                    title={deletingSection.size > 0 ? \"Deleting...\" : \"Delete section\"}\n                  >\n                    {deletingSection.size > 0 ? (\n                      <Loader2 className=\"h-3 w-3 animate-spin\" />\n                    ) : (\n                      '×'\n                    )}\n                  </button>\n                </div>\n              </div>\n\n              {/* Tuning and capo info - only show on first section */}\n              {sectionIndex === 0 && (() => {\n                // Get tuning and capo from first chord in section (they should all be the same)\n                const firstChord = section.chords[0];\n                if (!firstChord) return null;\n\n                const tuning = firstChord.tuning || 'EADGBE';\n                const capo = firstChord.capo || 0;\n\n                return (\n                  <div className=\"text-center text-white font-bold text-sm mb-3\">\n                    {capo > 0 ? `${tuning} | Capo on ${capo}` : tuning}\n                  </div>\n                );\n              })()}\n\n              {/* Chord grid for this section */}\n              {section.chords.length > 0 && (\n                <div className=\"space-y-2\">\n                  {(() => {\n                    // Group chords by line breaks\n                    const chordRows = [];\n                    let currentRow = [];\n\n                    section.chords.forEach((chart, index) => {\n                      currentRow.push(chart);\n\n                      // Start new row if:\n                      // 1. This chord has a line break after it\n                      // 2. We've reached 5 chords\n                      // 3. This is the last chord\n                      if (chart.hasLineBreakAfter || currentRow.length >= 5 || index === section.chords.length - 1) {\n                        chordRows.push([...currentRow]);\n                        currentRow = [];\n                      }\n                    });\n\n                    return chordRows.map((row, rowIndex) => (\n                      <div\n                        key={rowIndex}\n                        className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-2\"\n                      >\n                        {row.map(chart => (\n                          <MemoizedChordChart\n                            key={chart.id}\n                            chart={chart}\n                            onEdit={(chordId, chartData) => handleEditChordChart(itemReferenceId, chordId, chartData)}\n                            onDelete={(chordId) => handleDeleteChordChart(itemReferenceId, chordId)}\n                            onInsertAfter={(chordId, chartData) => handleInsertChordAfter(itemReferenceId, chordId, chartData)}\n                          />\n                        ))}\n                      </div>\n                    ));\n                  })()}\n                </div>\n              )}\n            </div>\n            );\n            });\n\n            // Return the complete chord chart content including buttons and editor\n            return (\n              <>\n                {sections}\n\n                {/* Print button - floating above Add New Chord - only show if chord charts exist */}\n                {(() => {\n                  const existingCharts = chordCharts[itemReferenceId] || [];\n                  if (existingCharts.length > 0) {\n                    return (\n                      <div className=\"flex justify-end mb-2\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handlePrintChords(itemReferenceId);\n                          }}\n                          className=\"p-2 border-gray-600 text-gray-400 hover:text-gray-200 hover:bg-gray-600\"\n                          title=\"Print chord charts\"\n                        >\n                          <Printer className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    );\n                  }\n                  return null;\n                })()}\n\n                {/* Autocreate from files - collapsible section */}\n                {(() => {\n                  const existingCharts = chordCharts[itemReferenceId] || [];\n                  const progress = autocreateProgress[itemReferenceId];\n                  const zoneExpanded = showAutocreateZone[itemReferenceId];\n\n                  if (existingCharts.length === 0) {\n                    // No existing charts - show expandable autocreate\n                    return (\n                      <div className=\"mb-4\">\n                        {zoneExpanded ? (\n                          <Button\n                            onClick={() => setShowAutocreateZone(prev => ({\n                              ...prev,\n                              [itemReferenceId]: false\n                            }))}\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            className=\"text-gray-400 hover:text-gray-300 mb-2\"\n                            title=\"Collapse autocreate section\"\n                          >\n                            ←\n                          </Button>\n                        ) : (\n                          <div className=\"flex justify-center\">\n                            <Button\n                              onClick={() => setShowAutocreateZone(prev => ({\n                                ...prev,\n                                [itemReferenceId]: true\n                              }))}\n                              className=\"max-w-md bg-gray-700 text-gray-300 hover:bg-gray-600 mb-2 flex items-center justify-center\"\n                            >\n                              <Upload className=\"h-4 w-4 mr-2\" />\n                              Autocreate Chord Charts\n                            </Button>\n                          </div>\n                        )}\n\n                        {zoneExpanded && (\n                          <div className=\"border border-gray-600/30 rounded-lg p-4 bg-gray-800/10\">\n                            <div className=\"text-sm text-gray-400 mb-6\">\n                              <p>• Upload lyrics with chord names to create charts</p>\n                              <p>• Upload chord diagrams to import existing charts</p>\n                            </div>\n\n                            {!progress && (\n                              <>\n                                {/* Three-column layout for larger screens, stacked on mobile */}\n                                <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6 items-start\">\n\n                                  {/* Column 1: File Upload */}\n                                  <div className=\"flex flex-col\">\n                                    <div className=\"text-center mb-2\">\n                                      <p className=\"text-gray-400 text-sm font-medium\">Upload files</p>\n                                    </div>\n                                    <div\n                                      className={`flex-1 p-4 border-2 border-dashed rounded-lg transition-colors cursor-pointer ${\n                                        isDragActive[itemReferenceId]\n                                          ? 'border-gray-500 bg-gray-800/20'\n                                          : 'border-gray-600 hover:border-gray-500 bg-gray-800/10'\n                                      }`}\n                                      onDragOver={(e) => {\n                                        e.preventDefault();\n                                        setIsDragActive(prev => {\n                                          if (prev[itemReferenceId] !== true) {\n                                            return { ...prev, [itemReferenceId]: true };\n                                          }\n                                          return prev;\n                                        });\n                                      }}\n                                      onDragLeave={(e) => {\n                                        e.preventDefault();\n                                        setIsDragActive(prev => {\n                                          if (prev[itemReferenceId] !== false) {\n                                            return { ...prev, [itemReferenceId]: false };\n                                          }\n                                          return prev;\n                                        });\n                                      }}\n                                      onDrop={(e) => {\n                                        e.preventDefault();\n                                        setIsDragActive(prev => ({ ...prev, [itemReferenceId]: false }));\n                                        handleSingleFileDrop(itemReferenceId, e.dataTransfer.files);\n                                      }}\n                                      onClick={() => {\n                                        const input = document.createElement('input');\n                                        input.type = 'file';\n                                        input.multiple = true;\n                                        input.accept = '.pdf,.png,.jpg,.jpeg';\n                                        input.onchange = (e) => handleSingleFileDrop(itemReferenceId, e.target.files);\n                                        input.click();\n                                      }}\n                                    >\n                                      <div className=\"text-center\">\n                                        <Upload className={`h-12 w-12 mx-auto mb-2 ${\n                                          uploadedFiles[itemReferenceId] && uploadedFiles[itemReferenceId].length > 0 ? 'text-gray-300' : 'text-gray-400'\n                                        }`} />\n                                        <p className={`text-sm font-medium mb-2 ${\n                                          uploadedFiles[itemReferenceId] && uploadedFiles[itemReferenceId].length > 0 ? 'text-gray-200' : 'text-gray-300'\n                                        }`}>Drop files or click</p>\n                                        <p className=\"text-gray-400 text-xs mb-2\">\n                                          PDFs, images • 5mb max\n                                        </p>\n                                        {uploadedFiles[itemReferenceId] && uploadedFiles[itemReferenceId].length > 0 ? (\n                                          <div>\n                                            <p className=\"text-gray-300 text-xs font-medium mb-1\">\n                                              {uploadedFiles[itemReferenceId].length} file(s)\n                                            </p>\n                                          </div>\n                                        ) : (\n                                          <p className=\"text-gray-400 text-xs\">\n                                            Lyrics or chord charts\n                                          </p>\n                                        )}\n                                      </div>\n                                    </div>\n                                  </div>\n\n                                  {/* Column 2: YouTube URL */}\n                                  <div className=\"flex flex-col\">\n                                    <div className=\"text-center mb-2\">\n                                      <p className=\"text-gray-400 text-sm font-medium\">YouTube guitar lesson</p>\n                                    </div>\n                                    <div className=\"flex-1 flex flex-col justify-center\">\n                                      <input\n                                        type=\"url\"\n                                        placeholder=\"YouTube guitar lesson URL (transcript required)\"\n                                        value={youtubeUrls[itemReferenceId] || ''}\n                                        onChange={(e) => {\n                                          const sanitizedValue = e.target.value.replace(/[<>\"']/g, '');\n                                          setYoutubeUrls(prev => ({\n                                            ...prev,\n                                            [itemReferenceId]: sanitizedValue\n                                          }));\n                                        }}\n                                        maxLength={500}\n                                        className=\"w-full p-3 bg-gray-700 text-white rounded border-2 border-gray-600 focus:border-gray-500 text-sm\"\n                                      />\n                                    </div>\n                                  </div>\n\n                                  {/* Column 3: Manual Chord Input */}\n                                  <div className=\"flex flex-col\">\n                                    <div className=\"text-center mb-2\">\n                                      <p className=\"text-gray-400 text-sm font-medium\">Manual entry</p>\n                                    </div>\n                                    <div className=\"flex-1 flex flex-col justify-center relative\">\n                                      <textarea\n                                        placeholder=\"Enter song section names and chord names, like this:&#10;Intro&#10;Am7 Em/A E7sus&#10;Verse&#10;C G/B Am (space or comma-separated)\"\n                                        value={manualChordInput[itemReferenceId] || ''}\n                                        onChange={(e) => {\n                                          const value = e.target.value;\n                                          if (value.length <= 500) {\n                                            setManualChordInput(prev => ({\n                                              ...prev,\n                                              [itemReferenceId]: value\n                                            }));\n                                            // Validate on change\n                                            validateManualChordInput(value, itemReferenceId);\n                                          }\n                                        }}\n                                        maxLength={500}\n                                        className={`w-full p-3 text-white rounded border-2 focus:border-gray-500 text-sm resize-none min-h-[160px] ${\n                                          manualInputErrors[itemReferenceId] ? 'bg-red-900/20 border-red-500' : 'bg-gray-700 border-gray-600'\n                                        }`}\n                                      />\n                                      {/* Character counter */}\n                                      <div className=\"absolute bottom-1 right-2 text-xs text-gray-400\">\n                                        {(manualChordInput[itemReferenceId] || '').length}/500\n                                      </div>\n                                      {/* Error message */}\n                                      {manualInputErrors[itemReferenceId] && (\n                                        <div className=\"mt-1 text-xs text-red-400\">\n                                          {manualInputErrors[itemReferenceId]}\n                                        </div>\n                                      )}\n                                    </div>\n                                  </div>\n\n                                </div>\n\n                            {/* Process Button */}\n                            <div className=\"flex justify-center\">\n                              <Button\n                                onClick={() => handleProcessFiles(itemReferenceId)}\n                                disabled={progress || (\n                                  // Must have exactly one input method\n                                  (uploadedFiles[itemReferenceId] || []).length === 0 && !youtubeUrls[itemReferenceId]?.trim() && !manualChordInput[itemReferenceId]?.trim() ||\n                                  ((uploadedFiles[itemReferenceId] || []).length > 0 ? 1 : 0) + (youtubeUrls[itemReferenceId]?.trim() ? 1 : 0) + (manualChordInput[itemReferenceId]?.trim() ? 1 : 0) > 1\n                                )}\n                                className=\"px-6\"\n                              >\n                                <Wand className=\"h-4 w-4 mr-2\" />\n                                Create Chord Charts\n                              </Button>\n                            </div>\n                              </>\n                            )}\n\n                            {/* Progress/Status Display */}\n                            <div\n                              className=\"w-full p-6 border-2 border-dashed rounded-lg mt-4 bg-gray-800/10 border-gray-600/50\"\n                            >\n                              <div className=\"text-center\">\n                                {progress === 'checking_transcripts' && (\n                                  <div className=\"space-y-3\">\n                                    <div className=\"flex items-center justify-center space-x-2\">\n                                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-yellow-500\"></div>\n                                      <span className=\"text-yellow-400\">Checking for transcripts...</span>\n                                    </div>\n                                    <br />\n                                    <Button\n                                      variant=\"outline\"\n                                      size=\"sm\"\n                                      onClick={() => handleShowCancelConfirmation(itemReferenceId)}\n                                      className=\"text-gray-400 hover:text-gray-200 border-gray-600\"\n                                    >\n                                      <X className=\"h-3 w-3 mr-1\" />\n                                      Cancel\n                                    </Button>\n                                  </div>\n                                )}\n                                {progress === 'reading_transcript' && (\n                                  <div className=\"space-y-3\">\n                                    <div className=\"flex items-center justify-center space-x-2\">\n                                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-gray-500\"></div>\n                                      <span className=\"text-gray-400\">Reading transcript...</span>\n                                    </div>\n                                    <br />\n                                    <Button\n                                      variant=\"outline\"\n                                      size=\"sm\"\n                                      onClick={() => handleShowCancelConfirmation(itemReferenceId)}\n                                      className=\"text-gray-400 hover:text-gray-200 border-gray-600\"\n                                    >\n                                      <X className=\"h-3 w-3 mr-1\" />\n                                      Cancel\n                                    </Button>\n                                  </div>\n                                )}\n                                {progress === 'uploading' && (\n                                  <div className=\"space-y-3\">\n                                    <div className=\"flex items-center justify-center space-x-2\">\n                                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-gray-500\"></div>\n                                      <span className=\"text-gray-400\">Uploading files...</span>\n                                    </div>\n                                    <br />\n                                    <Button\n                                      variant=\"outline\"\n                                      size=\"sm\"\n                                      onClick={() => handleShowCancelConfirmation(itemReferenceId)}\n                                      className=\"text-gray-400 hover:text-gray-200 border-gray-600\"\n                                    >\n                                      <X className=\"h-3 w-3 mr-1\" />\n                                      Cancel\n                                    </Button>\n                                  </div>\n                                )}\n                                {progress === 'processing_transcript' && (\n                                  <div className=\"space-y-3\">\n                                    <div className=\"flex items-center justify-center space-x-2\">\n                                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-purple-500\"></div>\n                                      <span className=\"text-white\">Processing transcript...</span>\n                                    </div>\n                                    <br />\n                                    <Button\n                                      variant=\"outline\"\n                                      size=\"sm\"\n                                      onClick={() => handleShowCancelConfirmation(itemReferenceId)}\n                                      className=\"text-gray-400 hover:text-gray-200 border-gray-600\"\n                                    >\n                                      <X className=\"h-3 w-3 mr-1\" />\n                                      Cancel\n                                    </Button>\n                                  </div>\n                                )}\n                                {progress === 'processing' && (\n                                  <div className=\"space-y-3\">\n                                    <div className=\"flex items-center justify-center space-x-2\">\n                                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-purple-500\"></div>\n                                      <div className=\"flex items-center\">\n                                        <span className=\"text-white\">{processingMessages[processingMessageIndex]}</span>\n                                        <div className=\"ml-2 animate-spin\">⚙️</div>\n                                      </div>\n                                    </div>\n                                    <br />\n                                    <Button\n                                      variant=\"outline\"\n                                      size=\"sm\"\n                                      onClick={() => handleShowCancelConfirmation(itemReferenceId)}\n                                      className=\"text-gray-400 hover:text-gray-200 border-gray-600\"\n                                    >\n                                      <X className=\"h-3 w-3 mr-1\" />\n                                      Cancel\n                                    </Button>\n                                  </div>\n                                )}\n                                {progress === 'complete' && (\n                                  <div className=\"flex items-center justify-center space-x-2\">\n                                    <Check className=\"h-4 w-4 text-green-500\" />\n                                    <span className=\"text-green-400\">Chord charts created!</span>\n                                  </div>\n                                )}\n                                {progress === 'error' && (\n                                  <div className=\"flex items-center justify-center space-x-2\">\n                                    <AlertTriangle className=\"h-4 w-4 text-red-500\" />\n                                    <span className=\"text-red-400\">Error processing files. Please try again.</span>\n                                  </div>\n                                )}\n                                {!progress && (\n                                  <>\n                                    {chordCharts[itemReferenceId] && chordCharts[itemReferenceId].length > 0 ? (\n                                      <>\n                                        <AlertTriangle className=\"h-8 w-8 text-orange-400 mx-auto mb-2\" />\n                                        <p className=\"text-orange-300 font-medium mb-1\">Chord charts already exist</p>\n                                        <p className=\"text-gray-400 text-sm\">\n                                          Please delete all chord charts from this song before using autocreate\n                                        </p>\n                                      </>\n                                    ) : (\n                                      <>\n                                        {(() => {\n                                          const hasFiles = (uploadedFiles[itemReferenceId] || []).length > 0;\n\n                                          if (hasFiles) {\n                                            return (\n                                              <>\n                                                <Sparkles className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\n                                                <p className=\"text-gray-300 font-medium mb-1\">Ready to create chord charts</p>\n                                                <p className=\"text-gray-400 text-sm\">\n                                                  Click 'Create chord charts'\n                                                </p>\n                                              </>\n                                            );\n                                          } else {\n                                            return (\n                                              <>\n                                                <Sparkles className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\n                                                <p className=\"text-gray-300 font-medium mb-1\">Add a file above, then click 'Create Chord Charts'</p>\n                                                <p className=\"text-gray-400 text-xs\">(The results will probably contain errors, use the ✏️edit icon to make any corrections needed.)</p>\n                                              </>\n                                            );\n                                          }\n                                        })()}\n                                      </>\n                                    )}\n                                  </>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    );\n                  } else {\n                    // Has existing charts - show replace option\n                    return (\n                      <div className=\"mb-4 flex justify-center\">\n                        <Button\n                          variant=\"outline\"\n                          onClick={() => handleAutocreateClick(itemReferenceId)}\n                          className=\"max-w-md text-orange-300 hover:bg-orange-800 hover:border-orange-600\"\n                        >\n                          <Upload className=\"h-4 w-4 mr-2\" />\n                          Replace with autocreated charts\n                        </Button>\n                      </div>\n                    );\n                  }\n                })()}\n\n                <div className=\"mb-4 flex justify-center\">\n                  <Button\n                    variant=\"default\"\n                    onClick={() => {\n                      setScrollBackContext({\n                        itemId: itemReferenceId,\n                        scrollPosition: window.scrollY\n                      });\n                      setShowChordEditor(prev => ({ ...prev, [itemReferenceId]: true }));\n                      setTimeout(() => {\n                        const editorElement = document.querySelector(`[data-editor-for-item=\"${itemReferenceId}\"]`);\n                        if (editorElement) {\n                          editorElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\n                        }\n                      }, 100);\n                    }}\n                    className=\"min-w-48\"\n                  >\n                    + Add new chord\n                  </Button>\n                </div>\n\n                <div className=\"mb-4 flex justify-center\">\n                  <Button\n                    variant=\"default\"\n                    onClick={() => addNewSection(itemReferenceId)}\n                    className=\"min-w-48\"\n                  >\n                    + Add new section\n                  </Button>\n                </div>\n\n                {/* Copy buttons - responsive: side-by-side on desktop, stacked on mobile */}\n                <div className=\"flex flex-col sm:flex-row gap-2 mb-4 max-w-2xl mx-auto\">\n                  <Button\n                    variant=\"default\"\n                    onClick={() => handleOpenCopyFromModal(itemReferenceId)}\n                    className=\"flex-1\"\n                  >\n                    Copy chord charts from other song\n                  </Button>\n                  <Button\n                    variant=\"default\"\n                    onClick={() => handleOpenCopyModal(itemReferenceId)}\n                    disabled={!chordCharts[itemReferenceId] || chordCharts[itemReferenceId].length === 0}\n                    className=\"flex-1 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    Copy chord charts to other song\n                  </Button>\n                </div>\n\n                {/* Chord editor */}\n                {showChordEditor[itemReferenceId] && (\n                  <div data-editor-for-item={itemReferenceId}>\n                    <ChordChartEditor\n                    itemId={itemReferenceId}\n                    defaultTuning={getItemDetails(itemReferenceId)?.H || 'EADGBE'}\n                    editingChordId={editingChordId}\n                    insertionContext={insertionContext}\n                    onSave={(chartData) => handleSaveChordChart(itemReferenceId, chartData)}\n                    onCancel={() => {\n                      setShowChordEditor(prev => ({ ...prev, [itemReferenceId]: false }));\n                      setEditingChordId(null);\n                      setInsertionContext(null);\n\n                      // Scroll back to the original chord chart location\n                      scrollBackToChord();\n                    }}\n                  />\n                  </div>\n                )}\n              </>\n            );\n          })()}\n        </div>\n\n        {/* Modals */}\n        {showApiErrorModal && (\n          <ApiErrorModal\n            isOpen={showApiErrorModal}\n            onClose={() => setShowApiErrorModal(false)}\n            error={apiError}\n          />\n        )}\n\n        {showAutocreateSuccessModal && (\n          <AutocreateSuccessModal\n            isOpen={showAutocreateSuccessModal}\n            onClose={() => setShowAutocreateSuccessModal(false)}\n          />\n        )}\n\n        {showCancelDialog && (\n          <AlertDialog open={showCancelDialog} onOpenChange={setShowCancelDialog}>\n            <AlertDialogContent>\n              <AlertDialogHeader>\n                <AlertDialogTitle>Cancel processing?</AlertDialogTitle>\n                <AlertDialogDescription>\n                  This will stop the current autocreate operation. Any progress will be lost.\n                </AlertDialogDescription>\n              </AlertDialogHeader>\n              <AlertDialogFooter>\n                <AlertDialogCancel>Continue processing</AlertDialogCancel>\n                <AlertDialogAction\n                  onClick={() => {\n                    if (cancellingItemId) {\n                      handleCancelAutocreate(cancellingItemId);\n                    }\n                    setShowCancelDialog(false);\n                    setCancellingItemId(null);\n                  }}\n                >\n                  Cancel processing\n                </AlertDialogAction>\n              </AlertDialogFooter>\n            </AlertDialogContent>\n          </AlertDialog>\n        )}\n\n        {/* Delete Existing Chord Charts Modal (copied from PracticePage) */}\n        {showDeleteChordsModal && (\n          <AlertDialog open={showDeleteChordsModal} onOpenChange={setShowDeleteChordsModal}>\n            <AlertDialogContent>\n              <AlertDialogHeader>\n                <AlertDialogTitle className=\"flex items-center space-x-2\">\n                  <AlertTriangle className=\"h-5 w-5 text-orange-500\" />\n                  <span>Replace Existing Chord Charts</span>\n                </AlertDialogTitle>\n                <AlertDialogDescription>\n                  This song already has chord charts. To use autocreate, all existing chord charts must be deleted first.\n                  This action cannot be undone.\n                </AlertDialogDescription>\n              </AlertDialogHeader>\n              <AlertDialogFooter>\n                <AlertDialogCancel onClick={() => {\n                  setShowDeleteChordsModal(false);\n                  setDeleteModalItemId(null);\n                }}>\n                  Cancel\n                </AlertDialogCancel>\n                <AlertDialogAction\n                  onClick={handleDeleteExistingCharts}\n                  className=\"bg-orange-500 hover:bg-orange-600 text-white border-orange-500 shadow-lg font-medium\"\n                >\n                  Delete all & autocreate\n                </AlertDialogAction>\n              </AlertDialogFooter>\n            </AlertDialogContent>\n          </AlertDialog>\n        )}\n\n        {/* API Error Modal */}\n        <ApiErrorModal\n          isOpen={showApiErrorModal}\n          onClose={() => {\n            setShowApiErrorModal(false);\n            setApiError(null);\n          }}\n          error={apiError}\n        />\n\n        {/* Autocreate Success Modal */}\n        <AutocreateSuccessModal\n          isOpen={showAutocreateSuccessModal}\n          onClose={() => {\n            setShowAutocreateSuccessModal(false);\n            setAutocreateSuccessData(null);\n          }}\n          autocreateData={autocreateSuccessData}\n        />\n      </DialogContent>\n    </Dialog>\n\n    {/* Copy Chord Charts Modal (copied from PracticePage) */}\n    {showCopyModal && (\n      <div\n        className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[100]\"\n        onClick={handleCloseCopyModal}\n      >\n        <div\n          className={`bg-gray-700 rounded-lg p-6 ${showOverwriteConfirmation || copyProgress === 'complete' ? 'max-w-xs' : 'w-full max-w-md'} max-h-[80vh] flex flex-col`}\n          onClick={(e) => e.stopPropagation()}\n          onWheel={(e) => e.stopPropagation()}\n        >\n          {copyProgress === 'complete' ? (\n            <>\n              <h2 className=\"text-xl font-bold text-white mb-4\">\n                Success!\n              </h2>\n              <div className=\"flex items-center justify-center space-x-2 mb-4\">\n                <Check className=\"h-6 w-6 text-green-500\" />\n                <span className=\"text-green-400 text-lg\">Chord charts copied successfully!</span>\n              </div>\n              <div className=\"flex justify-end\">\n                <Button\n                  onClick={handleCloseCopyModal}\n                  className=\"min-w-24 bg-green-600 hover:bg-green-700\"\n                >\n                  Done\n                </Button>\n              </div>\n            </>\n          ) : !showOverwriteConfirmation ? (\n            <>\n              <h2 className=\"text-xl font-bold text-white mb-4\">\n                Copy Chord Charts\n              </h2>\n\n              <p className=\"text-gray-300 mb-2\">\n                Copy chord charts from \"{allItems?.find(item => item['B'] === copySourceItemId)?.['C'] || 'Unknown Song'}\" to:\n              </p>\n\n              {/* Search field */}\n              <input\n                type=\"text\"\n                placeholder=\"Search songs...\"\n                value={copySearchTerm}\n                onChange={(e) => setCopySearchTerm(e.target.value)}\n                className=\"w-full p-2 mb-4 bg-gray-700 text-white rounded border border-gray-600 focus:border-purple-500\"\n              />\n\n              {/* Scrollable song list */}\n              <div className=\"flex-1 overflow-y-auto mb-4 min-h-0 modal-scroll\">\n                {sortedAndFilteredItems.map(item => (\n                  <div key={item['A']} className=\"flex items-center mb-2\">\n                    <input\n                      type=\"checkbox\"\n                      id={`copy-item-${item['A']}`}\n                      checked={selectedTargetItems.has(item['A'])}\n                      onChange={() => handleToggleTargetItem(item['A'])}\n                      className=\"mr-3\"\n                    />\n                    <label\n                      htmlFor={`copy-item-${item['A']}`}\n                      className=\"text-white cursor-pointer flex-1 flex items-center\"\n                    >\n                      <span>{item['C'] || 'Untitled'}</span>\n                      {itemsWithExistingCharts.has(item['A']) && (\n                        <span className=\"text-yellow-400 ml-2 text-sm\"> ⚠️will overwrite</span>\n                      )}\n                    </label>\n                  </div>\n                ))}\n              </div>\n\n              {/* Modal buttons */}\n              <div className=\"flex gap-2 justify-end\">\n                <Button\n                  variant=\"outline\"\n                  onClick={handleCloseCopyModal}\n                  className=\"min-w-24\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleConfirmCopy}\n                  disabled={selectedTargetItems.size === 0}\n                  style={selectedTargetItems.size === 0 ? {\n                    backgroundColor: '#4b5563',\n                    color: '#d1d5db',\n                    opacity: '1'\n                  } : itemsWithExistingCharts.size > 0 ? {\n                    backgroundColor: '#dc2626',\n                    color: '#ffffff',\n                    opacity: '1'\n                  } : {\n                    backgroundColor: '#5b1f1f',\n                    color: '#ffffff',\n                    opacity: '1'\n                  }}\n                  className=\"bg-purple-600 hover:bg-purple-700 disabled:cursor-not-allowed\"\n                >\n                  {itemsWithExistingCharts.size > 0\n                    ? `Copy and Overwrite ${selectedTargetItems.size} song${selectedTargetItems.size !== 1 ? 's' : ''}`\n                    : `Copy to ${selectedTargetItems.size} song${selectedTargetItems.size !== 1 ? 's' : ''}`\n                  }\n                </Button>\n              </div>\n            </>\n          ) : (\n            <>\n              <h2 className=\"text-xl font-bold text-white mb-4\">\n                ⚠️ Confirm Overwrite\n              </h2>\n              <p className=\"text-gray-300 mb-4\">\n                This will overwrite existing chord charts on {itemsWithExistingCharts.size} song{itemsWithExistingCharts.size !== 1 ? 's' : ''}. Continue?\n              </p>\n              <div className=\"flex gap-2 justify-end\">\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setShowOverwriteConfirmation(false)}\n                  className=\"min-w-24\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleConfirmCopy}\n                  className=\"min-w-24 bg-red-600 hover:bg-red-700\"\n                >\n                  Overwrite\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    )}\n    </>\n  );\n}","import React from 'react';\n\n/**\n * ChordIcon - A simplified C chord diagram icon\n * Displays a minimal guitar chord chart with fretboard grid and finger positions\n */\nexport const ChordIcon = ({ className = \"h-5 w-5\", title = \"Chord chart\" }) => {\n  return (\n    <svg\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      role=\"img\"\n      aria-label={title}\n    >\n      {/* Fret lines (horizontal) */}\n      <line x1=\"4\" y1=\"6\" x2=\"20\" y2=\"6\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n      <line x1=\"4\" y1=\"10\" x2=\"20\" y2=\"10\" stroke=\"currentColor\" strokeWidth=\"0.8\" />\n      <line x1=\"4\" y1=\"14\" x2=\"20\" y2=\"14\" stroke=\"currentColor\" strokeWidth=\"0.8\" />\n      <line x1=\"4\" y1=\"18\" x2=\"20\" y2=\"18\" stroke=\"currentColor\" strokeWidth=\"0.8\" />\n\n      {/* String lines (vertical) - 6 strings */}\n      <line x1=\"7\" y1=\"6\" x2=\"7\" y2=\"18\" stroke=\"currentColor\" strokeWidth=\"0.5\" />\n      <line x1=\"10\" y1=\"6\" x2=\"10\" y2=\"18\" stroke=\"currentColor\" strokeWidth=\"0.5\" />\n      <line x1=\"13\" y1=\"6\" x2=\"13\" y2=\"18\" stroke=\"currentColor\" strokeWidth=\"0.5\" />\n      <line x1=\"16\" y1=\"6\" x2=\"16\" y2=\"18\" stroke=\"currentColor\" strokeWidth=\"0.5\" />\n      <line x1=\"19\" y1=\"6\" x2=\"19\" y2=\"18\" stroke=\"currentColor\" strokeWidth=\"0.5\" />\n      <line x1=\"4\" y1=\"6\" x2=\"4\" y2=\"18\" stroke=\"currentColor\" strokeWidth=\"0.5\" />\n\n      {/* X mark on 6th string (low E - not played) */}\n      <line x1=\"3\" y1=\"3\" x2=\"5\" y2=\"5\" stroke=\"currentColor\" strokeWidth=\"1\" />\n      <line x1=\"5\" y1=\"3\" x2=\"3\" y2=\"5\" stroke=\"currentColor\" strokeWidth=\"1\" />\n\n      {/* C chord finger positions (dots) */}\n      {/* A string (5th) - 3rd fret */}\n      <circle cx=\"7\" cy=\"14\" r=\"1.5\" fill=\"currentColor\" />\n\n      {/* D string (4th) - 2nd fret */}\n      <circle cx=\"10\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\n\n      {/* B string (2nd) - 1st fret */}\n      <circle cx=\"16\" cy=\"6\" r=\"1.5\" fill=\"currentColor\" />\n    </svg>\n  );\n};\n","import React, { useState } from 'react';\nimport { Plus, Pencil, Trash2, GripVertical } from 'lucide-react';\nimport { trackItemOperation } from '../utils/analytics';\nimport { Card, CardHeader, CardTitle, CardContent } from '@ui/card';\nimport { Button } from '@ui/button';\nimport { Input } from '@ui/input';\nimport { ItemEditor, BulkSongbookUpdate } from './ItemEditor';\nimport ChordChartsModal from './ChordChartsModal';\nimport { ChordIcon } from './icons/ChordIcon';\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  useSortable,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@ui/alert-dialog\";\n\n// Split out item component for better state isolation\nconst SortableItem = React.memo(({ item, onEdit, onDelete, onOpenChordCharts }) => {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: item['B'] });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    zIndex: isDragging ? 1 : 0,\n  };\n\n  const handleDelete = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    await onDelete(item['B']);\n  };\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      className={`flex flex-col sm:flex-row sm:items-center sm:justify-between p-3 sm:p-5 rounded-lg gap-3 ${\n        isDragging ? 'bg-gray-700' : 'bg-gray-800'\n      }`}\n    >\n      <div className=\"flex items-center min-w-0 flex-1\">\n        <div {...attributes} {...listeners} className=\"flex-shrink-0\">\n          <GripVertical className=\"h-6 w-6 text-gray-500 mr-2 sm:mr-4 cursor-move\" />\n        </div>\n        <span className=\"text-base sm:text-xl\">{item['C']}</span>\n      </div>\n      <div className=\"flex space-x-3 justify-end sm:justify-start flex-shrink-0\">\n        <Button\n          variant=\"ghost\"\n          size=\"lg\"\n          onClick={() => onEdit(item)}\n          className=\"hover:bg-gray-700\"\n        >\n          <Pencil className=\"h-5 w-5\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Edit item</span>\n        </Button>\n        <Button\n          variant=\"ghost\"\n          size=\"lg\"\n          onClick={() => onOpenChordCharts(item['B'], item['C'])}\n          className=\"text-blue-400 hover:text-blue-300 hover:bg-gray-700\"\n        >\n          <ChordIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Chord charts</span>\n        </Button>\n        <Button\n          variant=\"ghost\"\n          size=\"lg\"\n          onClick={handleDelete}\n          className=\"text-red-500 hover:text-red-400 hover:bg-gray-700\"\n        >\n          <Trash2 className=\"h-5 w-5\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Delete item</span>\n        </Button>\n      </div>\n    </div>\n  );\n});\n\nexport const PracticeItemsList = ({ items = [], onItemsChange }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isEditOpen, setIsEditOpen] = useState(false);\n  const [editingItem, setEditingItem] = useState(null);\n  const [itemToDelete, setItemToDelete] = useState(null);\n\n  // Chord charts modal state\n  const [chordChartsModalOpen, setChordChartsModalOpen] = useState(false);\n  const [selectedItemId, setSelectedItemId] = useState(null);\n  const [selectedItemTitle, setSelectedItemTitle] = useState('');\n\n  const handleDelete = async (itemId) => {\n    if (isDragging) return; // Prevent delete during drag\n    setItemToDelete(itemId);\n  };\n\n  const confirmDelete = async () => {\n    if (!itemToDelete) return;\n    setIsDeleting(true);\n    try {\n      const response = await fetch(`/api/items/${itemToDelete}`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete item');\n      }\n      \n      // Track item deletion\n      const itemToDeleteData = items.find(item => item['B'] === itemToDelete);\n      if (itemToDeleteData) {\n        const itemName = itemToDeleteData['C'] || `Item ${itemToDelete}`; // Column C is Title\n        trackItemOperation('deleted', 'item', itemName);\n      }\n      \n      onItemsChange();\n    } catch (err) {\n      console.error('Delete failed:', err);\n    } finally {\n      setIsDeleting(false);\n      setItemToDelete(null);\n    }\n  };\n\n  const handleEditClick = (item) => {\n    setEditingItem(item);\n    setIsEditOpen(true);\n  };\n\n  const handleOpenChordCharts = (itemId, itemTitle) => {\n    setSelectedItemId(itemId);\n    setSelectedItemTitle(itemTitle);\n    setChordChartsModalOpen(true);\n  };\n\n  const handleSave = async () => {\n    onItemsChange();\n    setEditingItem(null);\n    setIsEditOpen(false);\n  };\n\n  const handleDragStart = () => {\n    setIsDragging(true);\n  };\n\n  const handleDragEnd = async ({ active, over }) => {\n    setIsDragging(false);\n    if (isDeleting || !active || !over || active.id === over.id) return;\n  \n    const oldIndex = items.findIndex(item => item['B'] === active.id);\n    const newIndex = items.findIndex(item => item['B'] === over.id);\n    \n    try {\n      // Create new array with moved item\n      const reordered = arrayMove(items, oldIndex, newIndex);\n      \n      // Update all orders to match new positions (using Column B as identifier)\n      const withNewOrder = reordered.map((item, index) => ({\n        'A': item['B'],  // Use Column B (ItemID) as the identifier for backend\n        'G': index       // Column G is the order\n      }));\n      \n      // Send complete new state\n      const response = await fetch('/api/items/order', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(withNewOrder),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to update items');\n      }\n      \n      // Force refresh\n      onItemsChange();\n    } catch (error) {\n      console.error('Reorder failed:', error);\n    }\n  };\n\n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: {\n        delay: 100,\n        tolerance: 5,\n      },\n    }),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  const filteredItems = items.filter((item) => {\n    if (!searchQuery) return true;\n    const title = item?.['C'] || '';\n    // Normalize apostrophes in both search term and title for consistent matching\n    const normalizeApostrophes = (str) => str.replace(/[''`]/g, \"'\");\n    const normalizedTitle = normalizeApostrophes(title.toLowerCase());\n    const normalizedSearch = normalizeApostrophes(searchQuery.toLowerCase());\n    return normalizedTitle.includes(normalizedSearch);\n  });\n\n  return (\n    <>\n      <Card className=\"w-full max-w-4xl mx-auto bg-gray-900 text-gray-100\">\n        <CardHeader className=\"flex flex-row items-center justify-between\">\n          <CardTitle className=\"text-2xl\">Practice items</CardTitle>\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              className=\"bg-blue-600 hover:bg-blue-700 text-lg px-4 py-6\"\n              onClick={() => {\n                setEditingItem(null);\n                setIsEditOpen(true);\n              }}\n            >\n              <Plus className=\"mr-2 h-5 w-5\" aria-hidden=\"true\" />\n              Add item\n            </Button>\n            <BulkSongbookUpdate onComplete={onItemsChange} />\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"mb-6\">\n            <label htmlFor=\"search-items-input\" className=\"sr-only\">\n              Search practice items\n            </label>\n            <Input\n              id=\"search-items-input\"\n              type=\"text\"\n              placeholder=\"Search items...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"w-full text-lg py-6 px-4\"\n              autoComplete=\"off\"\n            />\n          </div>\n          <DndContext\n            sensors={sensors}\n            collisionDetection={closestCenter}\n            onDragStart={handleDragStart}\n            onDragEnd={handleDragEnd}\n          >\n            <SortableContext\n              items={filteredItems.map(item => item['B'])}\n              strategy={verticalListSortingStrategy}\n            >\n              <div className=\"space-y-4\">\n                {filteredItems.map((item) => (\n                  <SortableItem\n                    key={item['B']}\n                    item={item}\n                    onEdit={handleEditClick}\n                    onDelete={handleDelete}\n                    onOpenChordCharts={handleOpenChordCharts}\n                  />\n                ))}\n              </div>\n            </SortableContext>\n          </DndContext>\n        </CardContent>\n      </Card>\n\n      {isEditOpen && (\n        <ItemEditor\n          open={isEditOpen}\n          onOpenChange={(open) => {\n            if (!open) {\n              setEditingItem(null);\n              setIsEditOpen(false);\n            }\n          }}\n          item={editingItem}\n          onItemChange={handleSave}\n        />\n      )}\n\n      <AlertDialog open={!!itemToDelete} onOpenChange={() => setItemToDelete(null)}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n            <AlertDialogDescription>\n              This action cannot be undone. This will permanently delete the practice item\n              and remove it from all routines.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction onClick={confirmDelete}>\n              Delete\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      <ChordChartsModal\n        isOpen={chordChartsModalOpen}\n        onClose={() => setChordChartsModalOpen(false)}\n        itemId={selectedItemId}\n        itemTitle={selectedItemTitle}\n      />\n    </>\n  );\n}","import { useState, useEffect } from 'react';\n\nexport const useActiveRoutine = () => {\n  const [routine, setRoutine] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [version, setVersion] = useState(0);\n\n  const fetchActiveRoutine = async () => {\n    try {\n      const response = await fetch('/api/practice/active-routine/lightweight');\n      if (!response.ok) {\n        throw new Error('Failed to fetch active routine');\n      }\n      const data = await response.json();\n      \n      if (!data.active_id) {\n        setRoutine(null);\n        setError(null);\n        setLoading(false);\n        return;\n      }\n\n      // Sort items by order (column C) to match the Routines page\n      const sortedItems = data.items.sort((a, b) =>\n        parseInt(a.routineEntry['C']) - parseInt(b.routineEntry['C'])\n      );\n\n      setRoutine({\n        id: data.active_id,\n        name: data.name,\n        items: sortedItems.map(item => ({\n          ...item.routineEntry,\n          // Only include minimal details (title) for collapsed view\n          minimalDetails: item.itemMinimal\n        }))\n      });\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n      console.error('Fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const refreshRoutine = async () => {\n    setVersion(v => v + 1);\n  };\n\n  // Fetch active routine on mount and when version changes\n  useEffect(() => {\n    fetchActiveRoutine();\n  }, [version]);\n\n\n  return {\n    routine,\n    loading,\n    error,\n    refreshRoutine\n  };\n}; ","import { useState, useCallback } from 'react';\n\nexport const useItemDetails = () => {\n  const [itemDetailsCache, setItemDetailsCache] = useState({});\n  const [loadingItems, setLoadingItems] = useState(new Set());\n  const [error, setError] = useState(null);\n\n  const fetchItemDetails = useCallback(async (itemId) => {\n    // Return cached data if available\n    if (itemDetailsCache[itemId]) {\n      return itemDetailsCache[itemId];\n    }\n\n    // Return early if already loading\n    if (loadingItems.has(itemId)) {\n      return null;\n    }\n\n    try {\n      setLoadingItems(prev => new Set([...prev, itemId]));\n      setError(null);\n\n      const response = await fetch(`/api/items/${itemId}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch item details: ${response.statusText}`);\n      }\n\n      const itemDetails = await response.json();\n      \n      // Cache the result\n      setItemDetailsCache(prev => ({\n        ...prev,\n        [itemId]: itemDetails\n      }));\n\n      return itemDetails;\n    } catch (err) {\n      setError(err.message);\n      console.error('Error fetching item details:', err);\n      return null;\n    } finally {\n      setLoadingItems(prev => {\n        const next = new Set(prev);\n        next.delete(itemId);\n        return next;\n      });\n    }\n  }, [itemDetailsCache, loadingItems]);\n\n  const getItemDetails = useCallback((itemId) => {\n    return itemDetailsCache[itemId] || null;\n  }, [itemDetailsCache]);\n\n  const isLoadingItem = useCallback((itemId) => {\n    return loadingItems.has(itemId);\n  }, [loadingItems]);\n\n  const clearCache = useCallback(() => {\n    setItemDetailsCache({});\n    setLoadingItems(new Set());\n    setError(null);\n  }, []);\n\n  return {\n    fetchItemDetails,\n    getItemDetails,\n    isLoadingItem,\n    error,\n    clearCache\n  };\n};","import React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from './ui/dialog';\nimport { Button } from './ui/button';\nimport { Textarea } from './ui/textarea';\n\nexport const NoteEditor = ({ open, onOpenChange, itemId, currentNote = '', onNoteSave }) => {\n  const [noteText, setNoteText] = useState('');\n  const [error, setError] = useState(null);\n\n  // Reset state when modal opens\n  useEffect(() => {\n    if (open) {\n      setNoteText(currentNote);\n      setError(null);\n    }\n  }, [open, currentNote]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`/api/items/${itemId}/notes`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ notes: noteText })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save note');\n      }\n\n      const result = await response.json();\n      onNoteSave?.(noteText);\n      onOpenChange(false);\n    } catch (err) {\n      setError(err.message);\n      console.error('Save error:', err);\n    }\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-2xl bg-gray-800\">\n        <DialogHeader>\n          <DialogTitle>Edit note</DialogTitle>\n          <DialogDescription>\n            Add or edit your practice notes\n          </DialogDescription>\n          {error && (\n            <div className=\"mt-2 text-sm text-red-500\">\n              {error}\n            </div>\n          )}\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <Textarea\n            value={noteText}\n            onChange={(e) => setNoteText(e.target.value)}\n            placeholder=\"Enter your notes...\"\n            className=\"h-48 bg-gray-900 text-white\"\n            autoComplete=\"off\"\n          />\n\n          <div className=\"flex justify-end space-x-4\">\n            <Button type=\"button\" variant=\"outline\" onClick={() => onOpenChange(false)}>\n              Cancel\n            </Button>\n            <Button type=\"submit\" variant=\"outline\">\n              Save note\n            </Button>\n          </div>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default NoteEditor; ","import React, { useEffect, useCallback, useState, useRef, useMemo, memo } from 'react';\nimport { trackPracticeEvent, trackActiveRoutine, trackChordChartEvent, trackSongbookLinkClick } from '../utils/analytics';\nimport { supportsFolderOpening } from '../utils/platform';\n\n// Simple debounce function\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\nimport { Button } from '@ui/button';\nimport { useActiveRoutine } from '@hooks/useActiveRoutine';\nimport { useItemDetails } from '@hooks/useItemDetails';\nimport { usePracticeItems } from '@hooks/usePracticeItems';\nimport { useNavigation } from '@contexts/NavigationContext';\nimport { ChevronDown, ChevronRight, Check, Plus, FileText, Book, Music, Upload, AlertTriangle, X, Wand, Sparkles, Loader2, Printer } from 'lucide-react';\nimport { NoteEditor } from './NoteEditor';\nimport { ChordChartEditor } from './ChordChartEditor';\nimport ApiErrorModal from './ApiErrorModal';\nimport AutocreateSuccessModal from './AutocreateSuccessModal';\nimport { serverDebug, serverInfo } from '../utils/logging';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\n\n// Import at top to activate console overrides\nimport '../utils/logging';\n\n// Data transformation no longer needed - DataLayer returns proper format directly\n\n// Custom Play icon with solid triangle\nconst PlayIcon = ({ className }) => (\n  <svg \n    xmlns=\"http://www.w3.org/2000/svg\" \n    viewBox=\"0 0 24 24\" \n    fill=\"currentColor\" \n    className={className}\n  >\n    <path d=\"M8 5v14l11-7z\" />\n  </svg>\n);\n\n// Custom Pause icon with solid bars\nconst PauseIcon = ({ className }) => (\n  <svg \n    xmlns=\"http://www.w3.org/2000/svg\" \n    viewBox=\"0 0 24 24\" \n    fill=\"currentColor\" \n    className={className}\n  >\n    <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\n  </svg>\n);\n\n// Custom Reset icon\nconst ResetIcon = ({ className }) => (\n  <svg \n    xmlns=\"http://www.w3.org/2000/svg\" \n    viewBox=\"0 0 24 24\" \n    fill=\"currentColor\" \n    className={className}\n  >\n    <path d=\"M17.65 6.35A7.958 7.958 0 0012 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0112 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\n  </svg>\n);\n\n// Format seconds to MM:SS\nconst formatTime = (seconds) => {\n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}:${secs.toString().padStart(2, '0')}`;\n};\n\n// Format minutes to HH:MM\nconst formatHoursAndMinutes = (minutes) => {\n  const hours = Math.floor(minutes / 60);\n  const mins = minutes % 60;\n  return `${hours.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}`;\n};\n\n// Memoized chord chart component that only re-renders when chord data changes\nconst MemoizedChordChart = memo(({ chart, onEdit, onDelete, onInsertAfter }) => {\n  const chartRef = useRef(null);\n  \n  useEffect(() => {\n    if (!chartRef.current) return;\n    \n    const renderChart = () => {\n      if (!window.svguitar || !chartRef.current) return;\n\n      try {\n        // Handle nested chordData structure if present\n        const actualChartData = chart.chordData || chart;\n        \n        // Clear any existing content\n        chartRef.current.innerHTML = '';\n\n        // Create SVGuitar instance\n        const chartInstance = new window.svguitar.SVGuitarChord(chartRef.current);\n        \n        // Configure the chart with same dimensions as editor for consistency\n        const config = {\n          strings: actualChartData.numStrings || 6,\n          frets: actualChartData.numFrets || 5,\n          position: actualChartData.startingFret || 1,\n          tuning: [], // Hide tuning labels in the small display\n          width: 220,             // Match editor dimensions\n          height: 310,            // Match editor dimensions\n          fretSize: 1.2,          // Match editor settings\n          fingerSize: 0.75,       // Larger finger size for text visibility (match editor)\n          sidePadding: 0.2,       // Match editor settings\n          fontFamily: 'Arial',\n          // Dark theme colors\n          color: '#ffffff',           // White finger dots\n          backgroundColor: 'transparent',\n          strokeColor: '#ffffff',     // White grid lines\n          textColor: '#ffffff',       // White text\n          fretLabelColor: '#ffffff',  // White fret labels\n          // Finger text settings (match editor)\n          fingerTextColor: '#000000', // Black text on white dots for contrast\n          fingerTextSize: 28         // Larger text size for visibility (match editor)\n        };\n\n        // Combine regular fingers with open and muted strings (same as in editor)\n        // Process fingers to ensure proper finger number format for SVGuitar\n        const processedFingers = (actualChartData.fingers || []).map(finger => {\n          const [string, fret, fingerNumber] = finger;\n          // Only include finger number if it's defined and not empty\n          if (fingerNumber && fingerNumber !== 'undefined') {\n            return [string, fret, fingerNumber];\n          }\n          return [string, fret]; // No finger number\n        });\n        \n        const allFingers = [\n          ...processedFingers,\n          // Add open strings as [string, 0]\n          ...(actualChartData.openStrings || []).map(string => [string, 0]),\n          // Add muted strings as [string, 'x']\n          ...(actualChartData.mutedStrings || []).map(string => [string, 'x'])\n        ];\n\n        // Prepare chord data\n        const chordData = {\n          fingers: allFingers,\n          barres: actualChartData.barres || []\n        };\n\n        // Render the chart\n        chartInstance.configure(config).chord(chordData).draw();\n\n        // Style the SVG to fit the container and add accessibility attributes\n        setTimeout(() => {\n          const svg = chartRef.current?.querySelector('svg');\n          if (svg) {\n            svg.style.width = '100%';\n            svg.style.height = '100%';\n            svg.style.maxWidth = '180px';\n            svg.style.maxHeight = '192px';\n            svg.style.position = 'relative';\n            svg.style.zIndex = '1';\n\n            // Add accessibility attributes\n            svg.setAttribute('role', 'img');\n            svg.setAttribute('aria-label', generateChordDescription(chart));\n          }\n        }, 50);\n      } catch (error) {\n        console.error('Error rendering memoized chord chart:', error);\n      }\n    };\n\n    renderChart();\n  }, [chart]); // Only re-render when chart data changes\n\n  return (\n    <div\n      className=\"bg-gray-800 p-1 rounded-lg relative\"\n      data-chord-id={chart.id}\n      style={{\n        minWidth: '0',\n        maxWidth: '100%',\n        width: '100%',\n        position: 'relative'\n      }}\n    >\n      {/* Edit button */}\n      <button\n        onClick={(e) => {\n          e.stopPropagation();\n          onEdit(chart.id, chart);\n        }}\n        className=\"absolute bottom-1 left-1 w-6 h-6 text-gray-400 hover:text-gray-200 flex items-center justify-center text-sm transition-colors cursor-pointer z-20 bg-gray-900 bg-opacity-75 rounded shadow-lg\"\n        title=\"Edit chord chart\"\n        style={{\n          position: 'absolute',\n          bottom: '4px',\n          left: '4px',\n          zIndex: 20\n        }}\n        aria-label=\"Edit chord chart\"\n      >\n        ✏️\n      </button>\n\n      {/* Delete button */}\n      <button\n        onClick={(e) => {\n          e.stopPropagation();\n          onDelete(chart.id);\n        }}\n        className=\"absolute bottom-1 right-1 w-6 h-6 text-red-500 hover:text-red-700 flex items-center justify-center text-lg font-black transition-colors cursor-pointer z-20 bg-gray-900 bg-opacity-75 rounded shadow-lg\"\n        title=\"Delete chord chart\"\n        style={{\n          position: 'absolute',\n          bottom: '4px',\n          right: '4px',\n          zIndex: 20\n        }}\n        aria-label=\"Delete chord chart\"\n      >\n        ×\n      </button>\n\n      {/* Insert after button */}\n      {onInsertAfter && (\n        <button\n          onClick={(e) => {\n            e.stopPropagation();\n            onInsertAfter(chart.id, chart);\n          }}\n          className=\"absolute bottom-1 right-8 w-6 h-6 bg-blue-500 hover:bg-blue-400 text-white rounded-full flex items-center justify-center text-sm font-bold transition-colors cursor-pointer z-20 shadow-lg\"\n          title=\"Insert chord after this one\"\n          style={{\n            position: 'absolute',\n            bottom: '4px',\n            right: '32px',\n            zIndex: 20\n          }}\n          aria-label=\"Insert chord after this one\"\n        >\n          +\n        </button>\n      )}\n      \n      <div className=\"relative mx-auto flex items-center justify-center overflow-hidden\" style={{width: '180px', height: '192px'}}>\n        <div\n          ref={chartRef}\n          className=\"w-full h-full\"\n        >\n          {/* SVGuitar chart will be rendered here */}\n        </div>\n      </div>\n      <div className=\"text-sm font-semibold mt-2 text-center text-gray-300\">{chart.title}</div>\n    </div>\n  );\n});\n\n// Helper function to generate accessible description for chord charts\nconst generateChordDescription = (chart) => {\n  const actualChartData = chart.chordData || chart;\n  const title = chart.title || 'Chord';\n\n  // Build description parts\n  const parts = [`${title} chord diagram.`];\n\n  // Describe finger positions\n  const fingers = actualChartData.fingers || [];\n  if (fingers.length > 0) {\n    const fingerPositions = fingers.map(finger => {\n      const [string, fret, fingerNum] = finger;\n      const stringNum = 7 - string; // Convert to 1-indexed from high to low (string 1 = high E)\n      const fingerText = fingerNum ? ` with finger ${fingerNum}` : '';\n      return `string ${stringNum} fret ${fret}${fingerText}`;\n    });\n    parts.push(`Finger positions: ${fingerPositions.join(', ')}.`);\n  }\n\n  // Describe open strings\n  const openStrings = actualChartData.openStrings || [];\n  if (openStrings.length > 0) {\n    const openStringNums = openStrings.map(s => 7 - s).sort((a, b) => a - b);\n    parts.push(`Open strings: ${openStringNums.join(', ')}.`);\n  }\n\n  // Describe muted strings\n  const mutedStrings = actualChartData.mutedStrings || [];\n  if (mutedStrings.length > 0) {\n    const mutedStringNums = mutedStrings.map(s => 7 - s).sort((a, b) => a - b);\n    parts.push(`Muted strings: ${mutedStringNums.join(', ')}.`);\n  }\n\n  // Describe barres\n  const barres = actualChartData.barres || [];\n  if (barres.length > 0) {\n    const barreDescriptions = barres.map(barre => {\n      const fromString = 7 - barre.fromString;\n      const toString = 7 - barre.toString;\n      return `Barre at fret ${barre.fret} from string ${fromString} to ${toString}`;\n    });\n    parts.push(`${barreDescriptions.join('. ')}.`);\n  }\n\n  return parts.join(' ');\n};\n\n// Helper functions for copy modal fuzzy matching (outside component to avoid re-creation)\n// Text normalization function for consistent matching\nconst normalizeText = (str) => {\n  return str\n    // Normalize apostrophes and quotes\n    .replace(/[''`\"]/g, \"'\")\n    // Normalize dashes and hyphens\n    .replace(/[–—−]/g, \"-\")\n    // Remove extra whitespace\n    .replace(/\\s+/g, ' ')\n    .trim()\n    .toLowerCase();\n};\n\nconst extractBaseSongName = (title) => {\n  // Remove all parentheses and their contents: (acoustic), (electric), (relearning), etc.\n  return title.replace(/\\s*\\([^)]*\\)\\s*/g, '').trim();\n};\n\nconst findSimilarSongs = (sourceTitle, allItems, sourceItemId) => {\n  const baseName = extractBaseSongName(sourceTitle);\n  const normalizedBaseName = normalizeText(baseName);\n  console.log('DEBUG: findSimilarSongs - sourceTitle:', sourceTitle, '-> baseName:', baseName, '-> normalized:', normalizedBaseName);\n  \n  return allItems.filter(item => {\n    // Skip the source item itself\n    // sourceItemId is Item ID (Column B), so compare with item['B']\n    if (item['B'] === sourceItemId) return false;\n    \n    const itemTitle = item['C'] || '';\n    const itemBaseName = extractBaseSongName(itemTitle);\n    const normalizedItemBaseName = normalizeText(itemBaseName);\n    \n    // FIXED: More precise similarity matching - require significant overlap\n    // Only match if the normalized base names are identical OR one is a substantial subset of the other\n    const matches = normalizedBaseName === normalizedItemBaseName ||\n                   (normalizedBaseName.length > 3 && normalizedItemBaseName.includes(normalizedBaseName)) ||\n                   (normalizedItemBaseName.length > 3 && normalizedBaseName.includes(normalizedItemBaseName));\n    \n    // Debug logging for potential matches\n    if (itemTitle.toLowerCase().includes('feelin') || itemTitle.toLowerCase().includes('alright')) {\n      console.log('DEBUG: Checking item:', itemTitle, '-> itemBaseName:', itemBaseName, '-> normalized:', normalizedItemBaseName, '-> matches:', matches);\n      console.log('  normalizedBaseName:', normalizedBaseName);\n      console.log('  normalizedItemBaseName:', normalizedItemBaseName);\n    }\n    \n    return matches;\n  });\n};\n\nexport const PracticePage = () => {\n  const { routine } = useActiveRoutine();\n  const { fetchItemDetails, getItemDetails, isLoadingItem } = useItemDetails();\n  useNavigation();\n  \n  const { items: allItems } = usePracticeItems();\n  const [expandedItems, setExpandedItems] = useState(new Set());\n  const [expandedNotes, setExpandedNotes] = useState(new Set());\n  const [activeTimers, setActiveTimers] = useState(new Set());\n  const [notes, setNotes] = useState({});\n  const [isNoteEditorOpen, setIsNoteEditorOpen] = useState(false);\n  const [editingNoteItemId, setEditingNoteItemId] = useState(null);\n  const [timers, setTimers] = useState({});\n  const [expandedChords, setExpandedChords] = useState(new Set());\n  const [chordCharts, setChordCharts] = useState({});\n  const [showChordEditor, setShowChordEditor] = useState({});\n\n  // Section management state\n  const [chordSections, setChordSections] = useState({});\n  const [deletingSection, setDeletingSection] = useState(new Set());\n  const [editingChordId, setEditingChordId] = useState(null);\n  const [insertionContext, setInsertionContext] = useState(null);\n  const [scrollBackContext, setScrollBackContext] = useState(null);\n  \n  // Chord chart copy modal state\n  const [showCopyModal, setShowCopyModal] = useState(false);\n  const [copySourceItemId, setCopySourceItemId] = useState(null);\n  const [copySearchTerm, setCopySearchTerm] = useState('');\n  const [selectedTargetItems, setSelectedTargetItems] = useState(new Set());\n  const [itemsWithExistingCharts, setItemsWithExistingCharts] = useState(new Set());\n  const [showOverwriteConfirmation, setShowOverwriteConfirmation] = useState(false);\n  \n  // Autocreate chord charts from files\n  const [showDeleteChordsModal, setShowDeleteChordsModal] = useState(false);\n  const [deleteModalItemId, setDeleteModalItemId] = useState(null);\n  const [autocreateProgress, setAutocreateProgress] = useState({});\n  const [copyProgress, setCopyProgress] = useState(null);\n\n  // Copy from modal state\n  const [showCopyFromModal, setShowCopyFromModal] = useState(false);\n  const [copyFromSearchTerm, setCopyFromSearchTerm] = useState('');\n  const [selectedSourceItem, setSelectedSourceItem] = useState(null);\n  const [copyFromTargetItemId, setCopyFromTargetItemId] = useState(null);\n  const [isDragActive, setIsDragActive] = useState({});\n  const [showAutocreateZone, setShowAutocreateZone] = useState({});\n  const [autocreateAbortController, setAutocreateAbortController] = useState({});\n  const [processingMessageIndex, setProcessingMessageIndex] = useState(0);\n// oxlint-disable-next-line no-unused-vars\n  const [messageQueue, setMessageQueue] = useState([]);\n  const [showCancelConfirmation, setShowCancelConfirmation] = useState(false);\n  const [pendingCancelItemId, setPendingCancelItemId] = useState(null);\n  \n  // Single file tracking for all uploaded files\n  const [uploadedFiles, setUploadedFiles] = useState({});\n  const [showMixedContentModal, setShowMixedContentModal] = useState(false);\n  const [mixedContentData, setMixedContentData] = useState(null);\n  const [showUnsupportedFormatModal, setShowUnsupportedFormatModal] = useState(false);\n  const [unsupportedFormatData, setUnsupportedFormatData] = useState(null);\n  \n  // API Error modal state\n  const [showApiErrorModal, setShowApiErrorModal] = useState(false);\n  const [apiError, setApiError] = useState(null);\n\n  // Autocreate Success modal state\n  const [showAutocreateSuccessModal, setShowAutocreateSuccessModal] = useState(false);\n  const [autocreateSuccessData, setAutocreateSuccessData] = useState(null);\n\n  // YouTube URL state for transcript-based chord creation\n  const [youtubeUrls, setYoutubeUrls] = useState({});\n  const [manualChordInput, setManualChordInput] = useState({});\n  const [manualInputErrors, setManualInputErrors] = useState({});\n  const [showNoTranscriptModal, setShowNoTranscriptModal] = useState(false);\n  const [noTranscriptData, setNoTranscriptData] = useState(null);\n  const [manualTranscript, setManualTranscript] = useState('');\n\n  // No chord names found modal state\n  const [showNoChordNamesModal, setShowNoChordNamesModal] = useState(false);\n\n  // Notification state - use ref for immediate updates\n  const notifyOnCompleteRef = useRef({});\n  const [notificationConfirmMessage, setNotificationConfirmMessage] = useState(null);\n  const [originalTitle, setOriginalTitle] = useState(null);\n\n  // Rotating processing messages for entertainment\n  const processingMessages = [\n    \"✨ Claude is making magic happen\",\n    \"✨ Claude is *still* making magic happen\",\n    \"Yeah, we all love instant gratification, but it'll still be quicker than you could do it from scratch\",\n    \"Are you familiar with the phrase 'A watched pot never boils'? It's kinda like that\",\n    \"Chill, I'm working on it.\",\n    \"You could be stretching or something while you wait, couldn't you?\",\n    \"The pyramids weren't built in a day... \",\n    \"but hey, at least I'm not going to ask you for an email address to send the chord charts to.\",\n    \"Perfect chord charts take time to craft. These will take less time and they won't be perfect.\",\n    \"Yeah, I could show you a progress bar, but we both know it would just lie to you\",\n    \"This is taking precisely as long as it needs to take\",\n    \"Meanwhile, your guitar is getting dusty just sitting there...\",\n    \"Quality over speed, as they say in the chord chart business. We'll see which this turns out to be\",\n    \"Calculating the optimal finger placement for maximum laziness...\",\n    \"Teaching AI to read guitar tabs is harder than teaching humans, surprisingly\",\n    \"Processing at the speed of artisanal chord crafting\",\n    \"Your patience is being converted into beautiful chord diagrams\",\n    \"Still faster than drawing the chord charts by hand\",\n    \"Fun fact: I process thousands of tokens per second, but this still takes a while. Go figure.\",\n    \"At least you're not on hold listening to elevator music right now\",\n    \"I'd apologize for the wait, but I'm kinda busy with building your chord charts\"\n  ];\n\n  // Request notification permission and set up completion notification\n  const handleNotifyRequest = async (itemId) => {\n    console.log('[NOTIFY] Notification button clicked for itemId:', itemId);\n\n    // Always enable title notification - use ref for immediate updates\n    notifyOnCompleteRef.current[itemId] = true;\n    setNotificationConfirmMessage(itemId);\n    console.log('[NOTIFY] Notification enabled for itemId:', itemId);\n    console.log('[NOTIFY] Current ref state:', notifyOnCompleteRef.current);\n\n    // Clear the confirmation message after 10 seconds\n    setTimeout(() => {\n      setNotificationConfirmMessage(null);\n    }, 10000);\n\n    // Also request browser notification permission if supported\n    if ('Notification' in window && Notification.permission === 'default') {\n      try {\n        console.log('[NOTIFY] Requesting browser notification permission...');\n        await Notification.requestPermission();\n      } catch (error) {\n        console.error('[NOTIFY] Error requesting notification permission:', error);\n      }\n    }\n  };\n\n  // Send notification when charts are ready (browser notification + title flash)\n  const sendCompletionNotification = (itemName) => {\n    console.log('[NOTIFY] Attempting to send notification for:', itemName);\n\n    // Change page title to notify user\n    if (!originalTitle) {\n      setOriginalTitle(document.title);\n    }\n    document.title = '🎸 Chord charts ready!';\n    console.log('[NOTIFY] Changed title to: Chord charts ready!');\n\n    // Also try browser notification if supported\n    if ('Notification' in window && Notification.permission === 'granted') {\n      try {\n        console.log('[NOTIFY] Creating browser notification...');\n        new Notification('Chord charts ready! 🎸', {\n          body: `Your chord charts for \"${itemName}\" are finally ready!`,\n          icon: '/static/favicon.ico',\n          tag: 'chord-charts-ready'\n        });\n        console.log('[NOTIFY] Browser notification created successfully');\n      } catch (error) {\n        console.error('[NOTIFY] Error sending browser notification:', error);\n      }\n    }\n  };\n\n  // Restore original title on any user interaction\n  const restoreTitle = useCallback(() => {\n    if (originalTitle) {\n      document.title = originalTitle;\n      setOriginalTitle(null);\n      console.log('[NOTIFY] Restored original title');\n    }\n  }, [originalTitle]);\n\n  // Add click listener to restore title on any user interaction\n  useEffect(() => {\n    if (originalTitle) {\n      const handleClick = () => restoreTitle();\n      document.addEventListener('click', handleClick);\n      document.addEventListener('keydown', handleClick);\n\n      return () => {\n        document.removeEventListener('click', handleClick);\n        document.removeEventListener('keydown', handleClick);\n      };\n    }\n  }, [originalTitle, restoreTitle]);\n\n  // Helper function to group chords into sections based on persisted metadata\n  const getChordSections = (itemId) => {\n    const charts = chordCharts[itemId] || [];\n    \n    console.log(`[DEBUG] getChordSections for item ${itemId}:`, charts);\n    \n    if (charts.length === 0) {\n      return [];\n    }\n    \n    // Group chords by their section metadata\n    const sectionMap = new Map();\n    \n    charts.forEach(chart => {\n      const sectionId = chart.sectionId || 'section-1';\n      const sectionLabel = chart.sectionLabel || 'Verse';\n      const sectionRepeatCount = chart.sectionRepeatCount || '';\n      \n      console.log(`[DEBUG] Processing chord ${chart.id} (${chart.title}) for section ${sectionId}`, {\n        chordSectionId: chart.sectionId, \n        chordSectionLabel: chart.sectionLabel,\n        fallbackUsed: !chart.sectionId\n      });\n      \n      if (!sectionMap.has(sectionId)) {\n        sectionMap.set(sectionId, {\n          id: sectionId,\n          label: sectionLabel,\n          repeatCount: sectionRepeatCount,\n          chords: []\n        });\n      }\n      \n      sectionMap.get(sectionId).chords.push(chart);\n    });\n    \n    // Convert map to array and sort by section creation order\n    const sections = Array.from(sectionMap.values());\n    \n    \n    return sections;\n  };\n\n  // Helper function to build sections from charts array (used after autocreate)\n  const buildSectionsFromCharts = (charts) => {\n    if (charts.length === 0) {\n      return [];\n    }\n    \n    // Group chords by their section metadata\n    const sectionMap = new Map();\n    \n    charts.forEach(chart => {\n      const sectionId = chart.sectionId || 'section-1';\n      const sectionLabel = chart.sectionLabel || 'Verse';\n      const sectionRepeatCount = chart.sectionRepeatCount || '';\n      \n      if (!sectionMap.has(sectionId)) {\n        sectionMap.set(sectionId, {\n          id: sectionId,\n          label: sectionLabel,\n          repeatCount: sectionRepeatCount,\n          chords: []\n        });\n      }\n      \n      sectionMap.get(sectionId).chords.push(chart);\n    });\n    \n    // Convert to array and sort sections by the order of their first chord\n    const sections = Array.from(sectionMap.values()).sort((a, b) => {\n      const aMinOrder = Math.min(...a.chords.map(c => c.order || 0));\n      const bMinOrder = Math.min(...b.chords.map(c => c.order || 0));\n      return aMinOrder - bMinOrder;\n    });\n    \n    // Sort chords within each section by order\n    sections.forEach(section => {\n      section.chords.sort((a, b) => (a.order || 0) - (b.order || 0));\n    });\n    \n    return sections;\n  };\n\n  // Combined function to get both persisted and temporary sections\n\n  // Function to add a new section\n  const addNewSection = (itemId, label = 'New Section') => {\n    console.log('Adding new section for item:', itemId, 'with label:', label);\n    \n    const newSection = {\n      id: `section-${Date.now()}`,\n      label,\n      repeatCount: '',\n      chords: []\n    };\n    \n    setChordSections(prev => {\n      const updated = {\n        ...prev,\n        [itemId]: [...(prev[itemId] || []), newSection]\n      };\n      console.log('Updated chordSections:', updated);\n      return updated;\n    });\n  };\n\n\n  // Debounced version of updateSection for real-time typing\n  const debouncedUpdateSection = useCallback(\n    debounce(async (itemId, sectionId, updates) => {\n      console.log('Debounced section update:', sectionId, updates);\n      \n      try {\n        // Fetch fresh chord charts from the backend to avoid stale state issues\n        const response = await fetch(`/api/items/${itemId}/chord-charts`);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch chord charts for item ${itemId}`);\n        }\n        const freshCharts = await response.json();\n        \n        // DataLayer now returns proper format directly\n        const transformedFreshCharts = freshCharts;\n        \n        console.log(`[DEBUG] Fresh charts for item ${itemId}:`, transformedFreshCharts.map(c => ({\n          id: c.id, \n          title: c.title, \n          sectionId: c.sectionId || 'default-section'\n        })));\n        \n        // Get all chord charts for this section that need to be updated\n        const chartsToUpdate = transformedFreshCharts.filter(chart => \n          (chart.sectionId || 'section-1') === sectionId\n        );\n        \n        if (chartsToUpdate.length === 0) {\n          console.log(`No chord charts to update for section: ${sectionId}. This might be a new section without any chord charts yet.`);\n          return;\n        }\n        \n        console.log(`Updating ${chartsToUpdate.length} chord charts for section ${sectionId}:`, chartsToUpdate.map(c => c.id));\n        \n        // Update each chord chart in the backend\n        const updatePromises = chartsToUpdate.map(chart => {\n          const updateData = {};\n          if (updates.label !== undefined) {\n            updateData.sectionLabel = updates.label;\n          }\n          if (updates.repeatCount !== undefined) {\n            updateData.sectionRepeatCount = updates.repeatCount;\n          }\n          \n          console.log(`Updating chord chart ${chart.id} with:`, updateData);\n          \n          return fetch(`/api/chord-charts/${chart.id}`, {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(updateData)\n          }).then(response => {\n            if (!response.ok) {\n              throw new Error(`Failed to update chord chart ${chart.id}: ${response.status} ${response.statusText}`);\n            }\n            return response.json();\n          });\n        });\n        \n        await Promise.all(updatePromises);\n        console.log(`Successfully persisted ${chartsToUpdate.length} chord charts for section ${sectionId}`);\n        \n      } catch (error) {\n        console.error('Error persisting section updates:', error);\n      }\n    }, 500), // 500ms delay\n    [] // Remove chordCharts dependency to avoid stale closures\n  );\n\n  // Fast local-only section update for immediate UI feedback\n  const updateSectionLocal = (itemId, sectionId, updates) => {\n    // Update the section in local state immediately\n    setChordSections(prev => ({\n      ...prev,\n      [itemId]: (prev[itemId] || []).map(section =>\n        section.id === sectionId ? { ...section, ...updates } : section\n      )\n    }));\n    \n    // Update chord charts in local state immediately\n    setChordCharts(prev => ({\n      ...prev,\n      [itemId]: (prev[itemId] || []).map(chart => {\n        if ((chart.sectionId || 'section-1') === sectionId) {\n          return {\n            ...chart,\n            sectionLabel: updates.label !== undefined ? updates.label : chart.sectionLabel,\n            sectionRepeatCount: updates.repeatCount !== undefined ? updates.repeatCount : chart.sectionRepeatCount\n          };\n        }\n        return chart;\n      })\n    }));\n    \n    // Debounce the backend update\n    debouncedUpdateSection(itemId, sectionId, updates);\n  };\n\n  const deleteSection = async (itemId, sectionId) => {\n    // Validate itemId\n    if (!itemId) {\n      console.error('ERROR: deleteSection called with empty itemId', { itemId, sectionId });\n      return;\n    }\n\n    // Prevent double-clicking/double-triggering\n    const sectionKey = `${itemId}-${sectionId}`;\n    if (deletingSection.has(sectionKey)) {\n      console.log(`Delete already in progress for section ${sectionId}`);\n      return;\n    }\n\n    setDeletingSection(prev => new Set([...prev, sectionKey]));\n\n    try {\n      // Get all chord charts in this section\n      const chartsToDelete = (chordCharts[itemId] || []).filter(chart => \n        (chart.sectionId || 'section-1') === sectionId\n      );\n      \n      if (chartsToDelete.length === 0) {\n        console.log(`No chord charts to delete in section ${sectionId}`);\n        // Just remove the empty section from local state\n        setChordSections(prev => ({\n          ...prev,\n          [itemId]: (prev[itemId] || []).filter(section => section.id !== sectionId)\n        }));\n        return;\n      }\n      \n      const chordIds = chartsToDelete.map(chart => chart.id);\n      console.log(`Batch deleting ${chartsToDelete.length} chord charts from section ${sectionId}:`, chordIds);\n      console.log(`DEBUG: Sending item_id=${itemId} to batch-delete endpoint`);\n\n      // Use batch delete endpoint\n      const response = await fetch('/api/chord-charts/batch-delete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          chord_ids: chordIds,\n          item_id: itemId  // Add item context for sharing-aware deletion\n        })\n      });\n\n      if (!response.ok) {\n        if (response.status === 429) {\n          const errorData = await response.json();\n          console.warn('Rate limit exceeded, will retry after delay');\n          // Show user-friendly message for rate limits\n          alert(`Rate limit exceeded. Please wait a moment and try again. (${errorData.error})`);\n          return;\n        }\n        throw new Error(`HTTP ${response.status}: Failed to batch delete chord charts`);\n      }\n\n      const result = await response.json();\n      console.log('Batch delete result:', result);\n\n      // Handle partial successes\n      if (result.deleted && result.deleted.length > 0) {\n        console.log(`Successfully deleted ${result.deleted.length} chord charts`);\n      }\n      \n      if (result.not_found && result.not_found.length > 0) {\n        console.warn(`${result.not_found.length} chord charts were already deleted:`, result.not_found);\n      }\n      \n      if (result.failed && result.failed.length > 0) {\n        console.error(`Failed to delete ${result.failed.length} chord charts:`, result.failed);\n      }\n\n      // Always update local state optimistically (backend handles partial failures)\n      // Remove chord charts from local state\n      setChordCharts(prev => ({\n        ...prev,\n        [itemId]: (prev[itemId] || []).filter(chart => \n          (chart.sectionId || 'section-1') !== sectionId\n        )\n      }));\n      \n      // Remove section from local state\n      setChordSections(prev => ({\n        ...prev,\n        [itemId]: (prev[itemId] || []).filter(section => section.id !== sectionId)\n      }));\n\n      // Only throw if batch delete completely failed\n      if (!result.success && result.failed && result.failed.length === chordIds.length) {\n        throw new Error(result.error || 'All chord chart deletions failed');\n      }\n      \n    } catch (error) {\n      console.error('Error deleting section:', error);\n      // TODO: Add user-visible error notification\n    } finally {\n      // Always clear the deleting state\n      setDeletingSection(prev => {\n        const next = new Set(prev);\n        next.delete(sectionKey);\n        return next;\n      });\n    }\n  };\n\n\n\n  // Lazy-load chord charts only when chord section is expanded\n  // Batch load chord charts for all items in the routine\n  const loadAllChordCharts = useCallback(async () => {\n    console.log('[DEBUG BATCH] loadAllChordCharts called');\n    if (!routine || !routine.items) return;\n    \n    // Get all item IDs that need chord charts loaded\n    const allItemIds = routine.items.map(item => item['B']);\n    const itemIds = allItemIds.filter(itemId => !chordCharts[itemId]); // Only load if not already loaded\n    console.log('[DEBUG BATCH] All routine items:', allItemIds, 'Items needing loading:', itemIds, 'Current chordCharts keys:', Object.keys(chordCharts));\n    \n    if (itemIds.length === 0) return;\n    \n    try {\n      const response = await fetch('/api/chord-charts/batch', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ item_ids: itemIds })\n      });\n      \n      if (response.ok) {\n        const batchResults = await response.json();\n        \n        // DataLayer now returns proper format directly\n        const transformedBatchResults = batchResults;\n        \n        // Update chord charts state with all results\n        setChordCharts(prev => ({\n          ...prev,\n          ...transformedBatchResults\n        }));\n        \n        // Build sections for each item using existing getChordSections logic\n        Object.entries(transformedBatchResults).forEach(([itemId, charts]) => {\n          if (charts.length === 0) {\n            setChordSections(prev => ({\n              ...prev,\n              [itemId]: []\n            }));\n          } else {\n            // Group chords by their section metadata (same logic as getChordSections)\n            const sectionMap = new Map();\n            \n            charts.forEach(chart => {\n              const sectionId = chart.sectionId || 'section-1';\n              const sectionLabel = chart.sectionLabel || 'Verse';\n              const sectionRepeatCount = chart.sectionRepeatCount || '';\n              \n              if (!sectionMap.has(sectionId)) {\n                sectionMap.set(sectionId, {\n                  id: sectionId,\n                  label: sectionLabel,\n                  repeatCount: sectionRepeatCount,\n                  chords: []\n                });\n              }\n              \n              sectionMap.get(sectionId).chords.push(chart);\n            });\n            \n            const sections = Array.from(sectionMap.values());\n            setChordSections(prev => ({\n              ...prev,\n              [itemId]: sections\n            }));\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error batch loading chord charts:', error);\n    }\n  }, [routine]);\n  \n  // Batch load chord charts when routine changes\n  useEffect(() => {\n    console.log('[DEBUG EFFECT] useEffect triggered for routine/loadAllChordCharts');\n    if (routine && routine.items) {\n      loadAllChordCharts();\n      // Track active routine when practice page is visited\n      trackActiveRoutine(routine.name);\n    }\n  }, [routine, loadAllChordCharts]);\n\n  \n  // Detect items with existing chord charts for overwrite warnings\n  useEffect(() => {\n    if (selectedTargetItems.size > 0) {\n      const itemsWithCharts = new Set();\n      selectedTargetItems.forEach(itemId => {\n        // itemId is the primary key (Column A), but chord charts are stored by ItemID (Column B)\n        const targetItem = allItems?.find(item => item['A'] === itemId);\n        const itemReferenceId = targetItem?.['B'];\n        const existingCharts = chordCharts[itemReferenceId] || [];\n        if (existingCharts.length > 0) {\n          itemsWithCharts.add(itemId);\n        }\n      });\n      setItemsWithExistingCharts(itemsWithCharts);\n    } else {\n      setItemsWithExistingCharts(new Set());\n    }\n  }, [selectedTargetItems, chordCharts, allItems]);\n  \n  // Rotate processing messages every 10 seconds\n  useEffect(() => {\n    const processingItems = Object.values(autocreateProgress).filter(progress => progress === 'processing');\n    \n    if (processingItems.length === 0) {\n      // Reset message state when no processing\n      setProcessingMessageIndex(0);\n      setMessageQueue([]);\n      return;\n    }\n    \n    // Always start with the first message\n    setProcessingMessageIndex(0);\n    // Create initial shuffled queue excluding the first message\n    const remainingMessages = Array.from({length: processingMessages.length - 1}, (_, i) => i + 1);\n    const shuffled = remainingMessages.sort(() => Math.random() - 0.5);\n    setMessageQueue(shuffled);\n    \n    const interval = setInterval(() => {\n      setMessageQueue(prevQueue => {\n        if (prevQueue.length === 0) {\n          // Queue is empty, create new shuffled queue of all messages\n          const allMessages = Array.from({length: processingMessages.length}, (_, i) => i);\n          const newShuffled = allMessages.sort(() => Math.random() - 0.5);\n          const nextIndex = newShuffled[0];\n          const newQueue = newShuffled.slice(1);\n          \n          setProcessingMessageIndex(nextIndex);\n          return newQueue;\n        } else {\n          // Take next message from queue\n          const nextIndex = prevQueue[0];\n          const newQueue = prevQueue.slice(1);\n          \n          setProcessingMessageIndex(nextIndex);\n          return newQueue;\n        }\n      });\n    }, 10000); // 10 seconds\n    \n    return () => clearInterval(interval);\n  }, [autocreateProgress, processingMessages.length]);\n  \n  const loadChordChartsForItem = async (itemReferenceId) => {\n    // Skip if already loaded\n    if (chordCharts[itemReferenceId]) {\n      return;\n    }\n    \n    try {\n      const response = await fetch(`/api/items/${itemReferenceId}/chord-charts`);\n      if (response.ok) {\n        const charts = await response.json();\n        \n        // DataLayer now returns proper format directly\n        const transformedCharts = charts;\n        \n        // Update chord charts state\n        setChordCharts(prev => ({\n          ...prev,\n          [itemReferenceId]: transformedCharts\n        }));\n        \n        // Build sections from loaded chord charts\n        if (transformedCharts.length === 0) {\n          setChordSections(prev => ({\n            ...prev,\n            [itemReferenceId]: []\n          }));\n          return;\n        }\n        \n        // Group chords by their section metadata\n        const sectionMap = new Map();\n        \n        transformedCharts.forEach(chart => {\n          const sectionId = chart.sectionId || 'section-1';\n          const sectionLabel = chart.sectionLabel || 'Verse';\n          const sectionRepeatCount = chart.sectionRepeatCount || '';\n          \n          if (!sectionMap.has(sectionId)) {\n            sectionMap.set(sectionId, {\n              id: sectionId,\n              label: sectionLabel,\n              repeatCount: sectionRepeatCount,\n              chords: []\n            });\n          }\n          \n          sectionMap.get(sectionId).chords.push(chart);\n        });\n        \n        // Update sections state\n        setChordSections(prev => ({\n          ...prev,\n          [itemReferenceId]: Array.from(sectionMap.values())\n        }));\n        \n        console.log('[DEBUG] Loaded chord charts for item:', itemReferenceId, charts.length);\n      }\n    } catch (error) {\n      console.error('Error loading chord charts for item:', itemReferenceId, error);\n    }\n  };\n  \n  const completedItemIds = useMemo(() => {\n    if (routine?.items) {\n      return new Set(\n        routine.items\n          .filter(item => item['D'] === 'TRUE')  // Column D is completed status\n          .map(item => item['A'])  // Column A is routine entry ID\n      );\n    }\n    return new Set();\n  }, [routine]);\n\n  const [completedItems, setCompletedItems] = useState(new Set());\n\n  // Create audio context for timer completion sound\n  const audioContext = useRef(null);\n  const gainNode = useRef(null);\n  const timerSound = useRef(null);\n  const audioBuffer = useRef(null);\n\n  // Initialize Web Audio API context and nodes\n  useEffect(() => {\n    audioContext.current = new (window.AudioContext || window.webkitAudioContext)();\n    \n    // Create gain node\n    gainNode.current = audioContext.current.createGain();\n    gainNode.current.gain.value = 3.0;  // Competing with electric guitar! 🎸\n\n    // Connect nodes\n    gainNode.current.connect(audioContext.current.destination);\n\n    // Load and decode audio file\n    fetch('/static/sound/timesUp.mp3')\n      .then(response => response.arrayBuffer())\n      .then(arrayBuffer => audioContext.current.decodeAudioData(arrayBuffer))\n      .then(decodedBuffer => {\n        audioBuffer.current = decodedBuffer;\n      })\n      .catch(e => console.error('Error loading sound:', e));\n\n    return () => {\n      if (audioContext.current) {\n        audioContext.current.close();\n      }\n    };\n  }, []);\n\n  // Timer countdown effect\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimers(prev => {\n        const next = { ...prev };\n        let changed = false;\n        activeTimers.forEach(itemId => {\n          if (next[itemId] > 0) {\n            next[itemId] = next[itemId] - 1;\n            changed = true;\n            \n            // Play sound when timer hits zero\n            if (next[itemId] === 0) {\n              // Stop any currently playing sound\n              if (timerSound.current) {\n                timerSound.current.stop();\n              }\n              \n              // Create and play new sound using Web Audio API\n              if (audioBuffer.current && audioContext.current) {\n                timerSound.current = audioContext.current.createBufferSource();\n                timerSound.current.buffer = audioBuffer.current;\n                timerSound.current.connect(gainNode.current);\n                timerSound.current.start();\n              }\n            }\n          }\n        });\n        return changed ? next : prev;\n      });\n    }, 1000);\n\n    console.log('Timer effect: Active timers:', Array.from(activeTimers));\n    return () => {\n      clearInterval(interval);\n      // Clean up audio if it's playing\n      if (timerSound.current) {\n        timerSound.current.stop();\n        timerSound.current = null;\n      }\n    };\n  }, [activeTimers]);\n\n  // Effect to sync completedItems with completedItemIds when routine changes  \n  useEffect(() => {\n    setCompletedItems(completedItemIds);\n  }, [completedItemIds]);\n\n  // Fetch notes for an item\n  const fetchNotes = useCallback(async (itemId) => {\n    try {\n      const response = await fetch(`/api/items/${itemId}/notes`);\n      if (!response.ok) throw new Error('Failed to fetch notes');\n      const data = await response.json();\n      if (data.notes) {\n        setNotes(prev => ({\n          ...prev,\n          [itemId]: data.notes\n        }));\n      }\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  }, []);\n\n\n  // Memoized similar items calculation for copy modal\n  // FIXED: Remove getItemDetails dependency to prevent unnecessary recalculations during search\n  const similarItemIds = useMemo(() => {\n    if (!copySourceItemId || !allItems) return new Set();\n    \n    // Get source item directly from allItems instead of using getItemDetails\n    // This prevents recalculation when getItemDetails recreates due to cache changes\n    // copySourceItemId is Item ID (Column B), so find by item['B']\n    const sourceItem = allItems.find(item => item['B'] === copySourceItemId);\n    const sourceTitle = sourceItem?.['C'] || '';\n    const allFilteredItems = allItems.filter(item => item['B'] !== copySourceItemId);\n    \n    return new Set(\n      findSimilarSongs(sourceTitle, allFilteredItems, copySourceItemId).map(item => item['A'])\n    );\n  }, [copySourceItemId, allItems]);\n\n  // Memoized filtered and sorted items for copy modal\n  const sortedAndFilteredItems = useMemo(() => {\n    if (!allItems) return [];\n    \n    return allItems\n      .filter(item => {\n        // Filter out the source item\n        // copySourceItemId is Item ID (Column B), so compare with item['B']\n        if (item['B'] === copySourceItemId) return false;\n        \n        // Filter by search term\n        if (copySearchTerm.trim()) {\n          const title = item['C'] || '';\n          \n          const normalizedTitle = normalizeText(title);\n          const normalizedSearch = normalizeText(copySearchTerm);\n          \n          // Handle empty search after normalization\n          if (!normalizedSearch) return true;\n          \n          console.log(`DEBUG SEARCH: \"${copySearchTerm}\" -> \"${normalizedSearch}\" searching in \"${title}\" -> \"${normalizedTitle}\" -> match: ${normalizedTitle.includes(normalizedSearch)}`);\n          \n          return normalizedTitle.includes(normalizedSearch);\n        }\n        \n        return true;\n      })\n      .sort((a, b) => {\n        // If there's an active search term, only sort alphabetically to respect search results\n        if (copySearchTerm.trim()) {\n          const aTitle = a['C'] || '';\n          const bTitle = b['C'] || '';\n          return aTitle.localeCompare(bTitle);\n        }\n        \n        // Check if items are similar to source using pre-calculated set\n        const aIsSimilar = similarItemIds.has(a['A']);\n        const bIsSimilar = similarItemIds.has(b['A']);\n        \n        // Sort similar songs to the top (only when no search term)\n        if (aIsSimilar && !bIsSimilar) return -1;\n        if (!aIsSimilar && bIsSimilar) return 1;\n        \n        // Within each group (similar/non-similar), sort alphabetically\n        const aTitle = a['C'] || '';\n        const bTitle = b['C'] || '';\n        return aTitle.localeCompare(bTitle);\n      });\n  }, [allItems, copySourceItemId, copySearchTerm, similarItemIds]);\n\n  // Memoized similar items calculation for copy FROM modal (copied from working copy TO logic)\n  const similarItemIdsForCopyFrom = useMemo(() => {\n    if (!copyFromTargetItemId || !allItems) return new Set();\n\n    // Get target item for \"copy from\" modal - copyFromTargetItemId is the destination\n    const targetItem = allItems.find(item => item['B'] === copyFromTargetItemId);\n    const targetTitle = targetItem?.['C'] || '';\n    const allFilteredItems = allItems.filter(item => item['B'] !== copyFromTargetItemId);\n\n    return new Set(\n      findSimilarSongs(targetTitle, allFilteredItems, copyFromTargetItemId).map(item => item['A'])\n    );\n  }, [copyFromTargetItemId, allItems]);\n\n  // Filtered and sorted items for copy FROM modal (copied from working copy TO logic)\n  const sortedAndFilteredCopyFromItems = useMemo(() => {\n    if (!allItems) return [];\n\n    return allItems\n      .filter(item => {\n        // Filter out the target item\n        if (item['B'] === copyFromTargetItemId) return false;\n\n        // Filter by search term\n        if (copyFromSearchTerm.trim()) {\n          const title = item['C'] || '';\n\n          const normalizedTitle = normalizeText(title);\n          const normalizedSearch = normalizeText(copyFromSearchTerm);\n\n          // Handle empty search after normalization\n          if (!normalizedSearch) return true;\n\n          return normalizedTitle.includes(normalizedSearch);\n        }\n\n        return true;\n      })\n      .sort((a, b) => {\n        // If there's an active search term, only sort alphabetically to respect search results\n        if (copyFromSearchTerm.trim()) {\n          const aTitle = a['C'] || '';\n          const bTitle = b['C'] || '';\n          return aTitle.localeCompare(bTitle);\n        }\n\n        // Check if items are similar to target using pre-calculated set\n        const aIsSimilar = similarItemIdsForCopyFrom.has(a['A']);\n        const bIsSimilar = similarItemIdsForCopyFrom.has(b['A']);\n\n        // Sort similar songs to the top (only when no search term)\n        if (aIsSimilar && !bIsSimilar) return -1;\n        if (!aIsSimilar && bIsSimilar) return 1;\n\n        // Within each group (similar/non-similar), sort alphabetically\n        const aTitle = a['C'] || '';\n        const bTitle = b['C'] || '';\n        return aTitle.localeCompare(bTitle);\n      });\n  }, [allItems, copyFromTargetItemId, copyFromSearchTerm, similarItemIdsForCopyFrom]);\n\n  // State to track chord chart counts for all items (for Copy FROM modal)\n  const [allItemChordCounts, setAllItemChordCounts] = useState({});\n\n  // Load chord chart counts for all items when Copy FROM modal opens\n  useEffect(() => {\n    if (showCopyFromModal && allItems && Object.keys(allItemChordCounts).length === 0) {\n      const loadAllChordCounts = async () => {\n        const counts = {};\n\n        // Get all unique item IDs\n        const itemIds = allItems.map(item => item['B']);\n\n        try {\n          // Use batch API to get chord charts efficiently\n          const response = await fetch('/api/chord-charts/batch', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ item_ids: itemIds })\n          });\n\n          if (response.ok) {\n            const batchResults = await response.json();\n\n            // Count charts for each item\n            Object.entries(batchResults).forEach(([itemId, charts]) => {\n              counts[itemId] = (charts || []).length;\n            });\n\n            setAllItemChordCounts(counts);\n          }\n        } catch (error) {\n          console.error('Error loading chord chart counts:', error);\n        }\n      };\n\n      loadAllChordCounts();\n    }\n  }, [showCopyFromModal, allItems, allItemChordCounts]);\n\n  // Apply chord chart filtering using the loaded counts\n  const copyFromItemsWithCharts = useMemo(() => {\n    return sortedAndFilteredCopyFromItems.filter(item => {\n      const itemReferenceId = item['B'];\n      return allItemChordCounts[itemReferenceId] > 0;\n    });\n  }, [sortedAndFilteredCopyFromItems, allItemChordCounts]);\n\n  // Esc key handler for closing modals\n  useEffect(() => {\n    const handleEscKey = (event) => {\n      if (event.key === 'Escape') {\n        if (showCopyModal) {\n          handleCloseCopyModal();\n        } else if (showCopyFromModal) {\n          handleCloseCopyFromModal();\n        } else if (showDeleteChordsModal) {\n          setShowDeleteChordsModal(false);\n          setDeleteModalItemId(null);\n        } else if (showMixedContentModal) {\n          setShowMixedContentModal(false);\n        } else if (showUnsupportedFormatModal) {\n          setShowUnsupportedFormatModal(false);\n        } else if (showCancelConfirmation) {\n          setShowCancelConfirmation(false);\n        } else if (showApiErrorModal) {\n          setShowApiErrorModal(false);\n        } else if (showNoTranscriptModal) {\n          setShowNoTranscriptModal(false);\n          setNoTranscriptData(null);\n          setManualTranscript('');\n        } else if (showNoChordNamesModal) {\n          setShowNoChordNamesModal(false);\n        }\n      }\n    };\n\n    document.addEventListener('keydown', handleEscKey);\n    return () => document.removeEventListener('keydown', handleEscKey);\n  }, [showCopyModal, showCopyFromModal, showDeleteChordsModal, showMixedContentModal, showUnsupportedFormatModal, showCancelConfirmation, showApiErrorModal, showNoTranscriptModal, showNoChordNamesModal]);\n\n  // Initialize timer for an item\n  const initTimer = useCallback((itemId, duration) => {\n    console.log(`Initializing timer for item ${itemId} with duration ${duration} minutes`);\n    setTimers(prev => {\n      if (!prev[itemId]) {\n        return {\n          ...prev,\n          [itemId]: duration * 60 // Convert minutes to seconds\n        };\n      }\n      return prev;\n    });\n  }, []);\n\n  // Modified toggleItem to lazy-load item details when expanding\n  const toggleItem = async (itemId) => {\n    setExpandedItems(prev => {\n      const next = new Set(prev);\n      if (next.has(itemId)) {\n        next.delete(itemId);\n      } else {\n        next.add(itemId);\n        // Lazy-load item details when expanding\n        const routineItem = routine.items.find(item => item['A'] === itemId);  // Column A is ID\n        if (routineItem) {\n          const itemReferenceId = routineItem['B'];  // Column B is Item ID\n          \n          // Fetch full item details if not already cached\n          fetchItemDetails(itemReferenceId).then(itemDetails => {\n            if (itemDetails) {\n              // Initialize timer using fetched details\n              initTimer(itemId, itemDetails['E'] || 5);  // Column E is Duration\n              // Fetch notes when expanding\n              fetchNotes(itemReferenceId);\n            }\n          });\n        }\n      }\n      return next;\n    });\n  };\n\n  const toggleTimer = async (itemId, e) => {\n    e?.stopPropagation(); // Prevent expand/collapse when clicking timer\n    const routineItem = routine.items.find(item => item['A'] === itemId);  // Column A is ID\n    if (routineItem) {\n      // Resume AudioContext on first user interaction (required for browser autoplay policies)\n      if (audioContext.current && audioContext.current.state === 'suspended') {\n        try {\n          await audioContext.current.resume();\n          console.log('[AUDIO] AudioContext resumed after user interaction');\n        } catch (error) {\n          console.error('[AUDIO] Failed to resume AudioContext:', error);\n        }\n      }\n\n      // Stop any playing sound when timer controls are used\n      if (timerSound.current) {\n        timerSound.current.stop();\n      }\n\n      // Only initialize timer if it doesn't exist\n      if (!timers[itemId]) {\n        console.log(`Timer ${itemId} not found, initializing...`);\n        // Try to get cached item details, fallback to default\n        const itemDetails = getItemDetails(routineItem['B']);\n        const duration = itemDetails?.['E'] || 5;  // Column E is Duration\n        initTimer(itemId, duration);\n      } else {\n        console.log(`Timer ${itemId} exists with value ${timers[itemId]}`);\n      }\n      \n      setActiveTimers(prev => {\n        const next = new Set(prev);\n        const itemDetails = getItemDetails(routineItem['B']);\n        const itemName = itemDetails?.['C'] || `Item ${itemId}`; // Column C is Title\n        \n        if (next.has(itemId)) {\n          console.log(`Deactivating timer ${itemId}`);\n          next.delete(itemId);\n          \n          // Calculate elapsed time for timer stopped event\n          const initialDuration = (itemDetails?.['E'] || 5) * 60; // Column E is Duration in minutes, convert to seconds\n          const currentTimer = timers[itemId] || initialDuration;\n          const elapsedSeconds = initialDuration - currentTimer;\n          \n          trackPracticeEvent('timer_stopped', itemName, {\n            time_elapsed_seconds: Math.max(0, elapsedSeconds),\n            initial_duration_minutes: itemDetails?.['E'] || 5\n          });\n        } else {\n          console.log(`Activating timer ${itemId}`);\n          next.add(itemId);\n          trackPracticeEvent('started_timer', itemName);\n        }\n        return next;\n      });\n    }\n  };\n\n  const toggleComplete = async (routineEntryId, e) => {\n    e?.stopPropagation(); // Prevent expand/collapse when clicking checkbox\n    const newState = !completedItems.has(routineEntryId);\n    \n    try {\n      const response = await fetch(`/api/routines/${routine.id}/items/${routineEntryId}/complete`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ completed: newState })\n      });\n\n      if (!response.ok) throw new Error('Failed to update completion state');\n\n      const result = await response.json();\n      if (result.success) {\n        setCompletedItems(prev => {\n          const next = new Set(prev);\n          if (newState) {\n            next.add(routineEntryId);\n            \n            // Track completion with timer data\n            const routineItem = routine.items.find(item => item['A'] === routineEntryId);\n            if (routineItem) {\n              const itemDetails = getItemDetails(routineItem['B']);\n              const itemName = itemDetails?.['C'] || `Item ${routineEntryId}`; // Column C is Title\n              const initialDuration = (itemDetails?.['E'] || 5) * 60; // Column E is Duration in minutes, convert to seconds\n              const currentTimer = timers[routineEntryId] || initialDuration;\n              const elapsedSeconds = initialDuration - currentTimer;\n              \n              trackPracticeEvent('marked_done', itemName, {\n                time_elapsed_seconds: Math.max(0, elapsedSeconds),\n                was_timer_active: activeTimers.has(routineEntryId),\n                initial_duration_minutes: itemDetails?.['E'] || 5\n              });\n            }\n            \n            // Stop timer when marking complete\n            setActiveTimers(prev => {\n              const next = new Set(prev);\n              next.delete(routineEntryId);\n              return next;\n            });\n\n            // When marking as complete:\n            // 1. Find the current item's index\n            const currentIndex = routine.items.findIndex(item => item['A'] === routineEntryId);\n            // 2. Collapse current item\n            setExpandedItems(prev => {\n              const next = new Set(prev);\n              next.delete(routineEntryId);\n              // 3. If there's a next item, expand it\n              if (currentIndex < routine.items.length - 1) {\n                const nextItem = routine.items[currentIndex + 1];\n                next.add(nextItem['A']);\n                // Lazy-load details for next item\n                const nextItemReferenceId = nextItem['B'];\n                fetchItemDetails(nextItemReferenceId).then(itemDetails => {\n                  if (itemDetails) {\n                    // Initialize timer and fetch notes for next item\n                    initTimer(nextItem['A'], itemDetails['E'] || 5);\n                    fetchNotes(nextItemReferenceId);\n                  }\n                });\n              }\n              return next;\n            });\n          } else {\n            next.delete(routineEntryId);\n          }\n          return next;\n        });\n      }\n    } catch (error) {\n      console.error('Error updating completion state:', error);\n    }\n  };\n\n  const resetTimer = async (itemId, e) => {\n    e?.stopPropagation();\n\n    // Resume AudioContext on user interaction (required for browser autoplay policies)\n    if (audioContext.current && audioContext.current.state === 'suspended') {\n      try {\n        await audioContext.current.resume();\n        console.log('[AUDIO] AudioContext resumed after user interaction');\n      } catch (error) {\n        console.error('[AUDIO] Failed to resume AudioContext:', error);\n      }\n    }\n\n    // Stop any playing sound when timer is reset\n    if (timerSound.current) {\n      timerSound.current.stop();\n    }\n\n    const routineItem = routine.items.find(item => item['A'] === itemId);  // Column A is ID\n    if (routineItem) {\n      // Try to get cached item details, fallback to default\n      const itemDetails = getItemDetails(routineItem['B']);\n      const duration = itemDetails?.['E'] || 5;  // Column E is Duration\n      const itemName = itemDetails?.['C'] || `Item ${itemId}`; // Column C is Title\n      \n      setTimers(prev => ({\n        ...prev,\n        [itemId]: duration * 60\n      }));\n      \n      trackPracticeEvent('timer_reset', itemName);\n    }\n  };\n\n  const addNote = async (itemId, e) => {\n    e?.stopPropagation();\n    setEditingNoteItemId(itemId);\n    setIsNoteEditorOpen(true);\n  };\n\n  const handleNoteSave = async () => {\n    await fetchNotes(editingNoteItemId);\n    setEditingNoteItemId(null);\n  };\n\n  const toggleNotes = (itemId, e) => {\n    e?.stopPropagation();\n    setExpandedNotes(prev => {\n      const next = new Set(prev);\n      if (next.has(itemId)) {\n        next.delete(itemId);\n      } else {\n        next.add(itemId);\n      }\n      return next;\n    });\n  };\n\n  const resetProgress = async (e) => {\n    e?.stopPropagation();\n    try {\n      const response = await fetch(`/api/routines/${routine.id}/reset`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n\n      if (!response.ok) throw new Error('Failed to reset progress');\n\n      setCompletedItems(new Set());\n    } catch (error) {\n      console.error('Error resetting progress:', error);\n    }\n  };\n\n  // Calculate total and completed minutes (simplified for now - may not be exact until items are loaded)\n  const { totalMinutes, completedMinutes } = useMemo(() => {\n    if (!routine?.items) return { totalMinutes: 0, completedMinutes: 0 };\n    \n    const total = routine.items.reduce((sum, item) => {\n      // Try to get cached details, fallback to estimated default\n      const itemDetails = getItemDetails(item['B']);\n      const duration = parseInt(itemDetails?.['E']) || 5; // Default 5 minutes\n      return sum + duration;\n    }, 0);\n    \n    const completed = routine.items\n      .filter(item => completedItems.has(item['A']))\n      .reduce((sum, item) => {\n        // Try to get cached details, fallback to estimated default\n        const itemDetails = getItemDetails(item['B']);\n        const duration = parseInt(itemDetails?.['E']) || 5; // Default 5 minutes\n        return sum + duration;\n      }, 0);\n    \n    return { totalMinutes: total, completedMinutes: completed };\n  }, [routine, completedItems, getItemDetails]);\n\n  // Effect to load SVGuitar library for MemoizedChordChart components\n  useEffect(() => {\n    // Load SVGuitar UMD script if not already loaded\n    if (!window.svguitar) {\n      const script = document.createElement('script');\n      script.src = 'https://omnibrain.github.io/svguitar/js/svguitar.umd.js';\n      script.async = true;\n      document.body.appendChild(script);\n    }\n  }, []);\n\n  const toggleChords = (itemId, e) => {\n    e?.stopPropagation();\n    setExpandedChords(prev => {\n      const next = new Set(prev);\n      if (next.has(itemId)) {\n        next.delete(itemId);\n      } else {\n        next.add(itemId);\n        // Lazy-load chord charts when chord section is expanded\n        const routineItem = routine.items.find(item => item['A'] === itemId);\n        if (routineItem) {\n          const itemReferenceId = routineItem['B'];  // Column B is Item ID\n          loadChordChartsForItem(itemReferenceId);\n        }\n      }\n      return next;\n    });\n  };\n\n  const handleSaveChordChart = async (itemId, chartData) => {\n    try {\n      serverInfo('Saving chord chart for item', { itemId, chartData });\n      serverDebug('PracticePage handleSaveChordChart called', { editingChordId, chartData });\n\n      // Determine if we're creating or updating\n      const isUpdate = chartData.editingChordId;\n      serverDebug('PracticePage isUpdate check result', { isUpdate, editingChordIdFromState: editingChordId, editingChordIdFromChartData: chartData.editingChordId });\n\n      // Build chart data - spread all properties flat (backend builds chord_data from flattened format)\n      let chartDataWithSection = { ...chartData };\n      \n      if (isUpdate) {\n        // For updates, preserve the original chord's section information\n        const originalChord = (chordCharts[itemId] || []).find(chord => chord.id === chartData.editingChordId);\n        \n        // Add section metadata to existing chartDataWithSection\n        chartDataWithSection.sectionId = originalChord?.sectionId;\n        chartDataWithSection.sectionLabel = originalChord?.sectionLabel;\n        chartDataWithSection.sectionRepeatCount = originalChord?.sectionRepeatCount;\n        \n        serverDebug('Updating chord, preserving section', {\n          originalSection: {\n            id: originalChord?.sectionId,\n            label: originalChord?.sectionLabel,\n            repeatCount: originalChord?.sectionRepeatCount\n          }\n        });\n        \n      } else {\n        // For new chords, determine target section\n        const itemSections = chordSections[itemId] || getChordSections(itemId);\n        let targetSection;\n        \n        // Check if we have insertion context (inserting after specific chord)\n        if (chartData.insertionContext) {\n          // Use section from insertion context\n          targetSection = {\n            id: chartData.insertionContext.sectionId,\n            label: chartData.insertionContext.sectionLabel,\n            repeatCount: chartData.insertionContext.sectionRepeatCount\n          };\n        } else if (itemSections.length === 0) {\n          // No sections exist, create default\n          targetSection = {\n            id: 'section-1',\n            label: 'Verse',\n            repeatCount: ''\n          };\n        } else {\n          // Use the last section (original behavior for \"Add New Chord\")\n          targetSection = itemSections[itemSections.length - 1];\n        }\n        \n        \n        // Add section metadata to existing chartDataWithSection\n        chartDataWithSection.sectionId = targetSection.id;\n        chartDataWithSection.sectionLabel = targetSection.label;\n        chartDataWithSection.sectionRepeatCount = targetSection.repeatCount;\n        \n      }\n      \n      // Handle line break after this chord - always set the value explicitly\n      chartDataWithSection.hasLineBreakAfter = chartData.startOnNewLine || false;\n      serverDebug('Setting line break after chord', { \n        title: chartDataWithSection.title,\n        hasLineBreakAfter: chartDataWithSection.hasLineBreakAfter \n      });\n      \n      serverDebug('Chord data with section metadata', { chartDataWithSection });\n      \n      const url = isUpdate \n        ? `/api/chord-charts/${chartData.editingChordId}`\n        : `/api/items/${itemId}/chord-charts`;\n      const method = isUpdate ? 'PUT' : 'POST';\n      \n      serverDebug(`${isUpdate ? 'Updating' : 'Creating'} chord chart`, { method, url });\n      \n      const response = await fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(chartDataWithSection)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to save chord chart: ${response.statusText}`);\n      }\n\n      const savedChart = await response.json();\n      serverInfo('Chord chart saved successfully', { savedChart });\n      \n      // DEBUG: Detailed logging of saved chord data format\n      console.log('DEBUG: Saved chord detailed breakdown:', {\n        id: savedChart.id,\n        title: savedChart.title,\n        fingers: savedChart.fingers,\n        fingersType: typeof savedChart.fingers,\n        fingersLength: savedChart.fingers?.length,\n        barres: savedChart.barres,\n        barresType: typeof savedChart.barres,\n        tuning: savedChart.tuning,\n        startingFret: savedChart.startingFret,\n        numFrets: savedChart.numFrets,\n        numStrings: savedChart.numStrings,\n        openStrings: savedChart.openStrings,\n        mutedStrings: savedChart.mutedStrings\n      });\n\n      // Update local state with the saved chart\n      setChordCharts(prev => {\n        const itemCharts = prev[itemId] || [];\n        \n        if (isUpdate) {\n          // Update existing chord - ensure consistent type comparison\n          const editingId = parseInt(chartData.editingChordId);\n          serverDebug('Updating chordCharts state', { \n            editingId, \n            editingChordIdOriginal: chartData.editingChordId,\n            existingChartIds: itemCharts.map(c => ({ id: c.id, type: typeof c.id }))\n          });\n          \n          let updatedCharts = itemCharts.map(chart => {\n            const match = parseInt(chart.id) === editingId;\n            if (match) {\n              serverDebug('Found matching chord to update', { chart: chart.id, editingId });\n              console.log('DEBUG: State update - replacing old chart:', {\n                oldChart: chart,\n                newChart: savedChart,\n                fingersOld: chart.fingers,\n                fingersNew: savedChart.fingers\n              });\n            }\n            return match ? savedChart : chart;\n          });\n          \n          // Apply line break updater if it exists (for line break before edited chord)\n          if (chartDataWithSection._lineBreakUpdater) {\n            serverDebug('Applying stored line break updater to preserve line breaks');\n            updatedCharts = chartDataWithSection._lineBreakUpdater(updatedCharts);\n          }\n          \n          serverDebug('Updated charts result', { \n            originalCount: itemCharts.length, \n            updatedCount: updatedCharts.length,\n            foundMatch: updatedCharts.some(c => parseInt(c.id) === editingId),\n            hasLineBreakUpdater: !!chartDataWithSection._lineBreakUpdater\n          });\n          \n          return {\n            ...prev,\n            [itemId]: updatedCharts\n          };\n        } else {\n          // Add new chord\n          let finalCharts = [...itemCharts, savedChart];\n          \n          // Apply line break updater if it exists (for line break before new chord)  \n          if (chartDataWithSection._lineBreakUpdater) {\n            serverDebug('Applying stored line break updater to preserve line breaks for new chord');\n            finalCharts = chartDataWithSection._lineBreakUpdater(finalCharts);\n          }\n          \n          return {\n            ...prev,\n            [itemId]: finalCharts\n          };\n        }\n      });\n\n      // Update sections state\n      setChordSections(prev => {\n        const itemSections = prev[itemId] || [];\n        \n        if (isUpdate) {\n          // Update existing chord in sections - ensure consistent type comparison\n          const editingId = parseInt(chartData.editingChordId);\n          serverDebug('Updating chordSections state', { \n            editingId,\n            sectionsCount: itemSections.length\n          });\n          \n          let updatedSections = itemSections.map(section => {\n            const updatedChords = section.chords.map(chord => {\n              const match = parseInt(chord.id) === editingId;\n              if (match) {\n                serverDebug('Found matching chord in section', { \n                  sectionId: section.id, \n                  sectionLabel: section.label,\n                  chordId: chord.id,\n                  editingId \n                });\n              }\n              return match ? savedChart : chord;\n            });\n            \n            return {\n              ...section,\n              chords: updatedChords\n            };\n          });\n          \n          // Apply line break updater to sections as well if it exists\n          if (chartDataWithSection._lineBreakUpdater) {\n            serverDebug('Applying line break updater to sections state');\n            updatedSections = updatedSections.map(section => ({\n              ...section,\n              chords: chartDataWithSection._lineBreakUpdater(section.chords)\n            }));\n          }\n          \n          return {\n            ...prev,\n            [itemId]: updatedSections\n          };\n        } else {\n          // Add new chord to section\n          // If no sections exist, create a default one\n          if (itemSections.length === 0) {\n            const newSections = [{\n              id: 'section-1',\n              label: 'Verse',\n              repeatCount: '',\n              chords: [savedChart]\n            }];\n            \n            // Apply line break updater if it exists\n            if (chartDataWithSection._lineBreakUpdater) {\n              serverDebug('Applying line break updater to new section');\n              newSections[0].chords = chartDataWithSection._lineBreakUpdater(newSections[0].chords);\n            }\n            \n            return {\n              ...prev,\n              [itemId]: newSections\n            };\n          }\n          \n          // Add to appropriate section with proper insertion logic\n          const updatedSections = [...itemSections];\n          \n          if (chartData.insertionContext) {\n            // Insert at specific position within target section\n            const targetSectionIndex = updatedSections.findIndex(section => \n              section.id === chartData.insertionContext.sectionId\n            );\n            \n            if (targetSectionIndex >= 0) {\n              const targetSection = { ...updatedSections[targetSectionIndex] };\n              const insertOrder = chartData.insertionContext.insertOrder;\n              \n              // Find insertion point and insert chord\n              const insertionIndex = targetSection.chords.findIndex(chord => \n                parseInt(chord.order) >= insertOrder\n              );\n              \n              if (insertionIndex >= 0) {\n                // Insert in the middle of the section\n                targetSection.chords = [\n                  ...targetSection.chords.slice(0, insertionIndex),\n                  savedChart,\n                  ...targetSection.chords.slice(insertionIndex)\n                ];\n              } else {\n                // Insert at the end of the section\n                targetSection.chords = [...targetSection.chords, savedChart];\n              }\n              \n              updatedSections[targetSectionIndex] = targetSection;\n            } else {\n              // Target section not found, add to last section as fallback\n              const lastSection = { ...updatedSections[updatedSections.length - 1] };\n              lastSection.chords = [...lastSection.chords, savedChart];\n              updatedSections[updatedSections.length - 1] = lastSection;\n            }\n          } else {\n            // Original behavior: add to the last section\n            const lastSection = { ...updatedSections[updatedSections.length - 1] };\n            lastSection.chords = [...lastSection.chords, savedChart];\n            updatedSections[updatedSections.length - 1] = lastSection;\n          }\n          \n          // Apply line break updater if it exists\n          if (chartDataWithSection._lineBreakUpdater) {\n            serverDebug('Applying line break updater to updated sections');\n            updatedSections.forEach(section => {\n              section.chords = chartDataWithSection._lineBreakUpdater(section.chords);\n            });\n          }\n          \n          return {\n            ...prev,\n            [itemId]: updatedSections\n          };\n        }\n      });\n\n      // With memoized components, updates will automatically trigger re-renders\n\n      // Track chord chart action\n      const routineItem = routine.items.find(item => item['B'] === itemId);\n      if (routineItem) {\n        const itemDetails = getItemDetails(itemId);\n        const itemName = itemDetails?.['C'] || `Item ${itemId}`; // Column C is Title\n        \n        if (isUpdate) {\n          trackChordChartEvent('edited', itemName, {\n            chord_name: chartData.title || 'Unknown Chord',\n            section_id: chartDataWithSection.sectionId,\n            section_label: chartDataWithSection.sectionLabel\n          });\n        } else {\n          trackChordChartEvent('added', itemName, {\n            chord_name: chartData.title || 'Unknown Chord',\n            section_id: chartDataWithSection.sectionId,\n            section_label: chartDataWithSection.sectionLabel\n          });\n        }\n      }\n\n      // Hide the editor after saving and clear editing state\n      setShowChordEditor(prev => ({\n        ...prev,\n        [itemId]: false\n      }));\n      setEditingChordId(null);\n      setInsertionContext(null);\n\n      // Scroll back to the original chord chart location\n      scrollBackToChord();\n\n    } catch (error) {\n      console.error('Error saving chord chart:', error);\n      // TODO: Add user-visible error handling\n    }\n  };\n\n  const handleDeleteChordChart = async (itemId, chordId) => {\n    try {\n      console.log('Deleting chord chart:', chordId, 'for item:', itemId);\n      \n      const response = await fetch(`/api/items/${itemId}/chord-charts/${chordId}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        if (response.status === 429) {\n          const errorData = await response.json();\n          console.warn('Rate limit exceeded for individual delete');\n          alert(`Rate limit exceeded. Please wait a moment and try again. (${errorData.error})`);\n          return;\n        }\n        throw new Error(`Failed to delete chord chart: ${response.statusText}`);\n      }\n\n      console.log('Chord chart deleted successfully');\n\n      // Track chord chart deletion\n      const routineItem = routine.items.find(item => item['B'] === itemId);\n      if (routineItem) {\n        const itemDetails = getItemDetails(itemId);\n        const itemName = itemDetails?.['C'] || `Item ${itemId}`; // Column C is Title\n        \n        // Get chord info before deleting for tracking\n        const chordToDelete = (chordCharts[itemId] || []).find(chart => chart.id === chordId);\n        \n        trackChordChartEvent('deleted', itemName, {\n          chord_name: chordToDelete?.title || 'Unknown Chord',\n          chord_id: chordId\n        });\n      }\n\n      // Update local state by removing the chart\n      setChordCharts(prev => {\n        const itemCharts = prev[itemId] || [];\n        return {\n          ...prev,\n          [itemId]: itemCharts.filter(chart => chart.id !== chordId)\n        };\n      });\n\n      // Also remove from sections\n      setChordSections(prev => {\n        const itemSections = prev[itemId] || [];\n        const updatedSections = itemSections.map(section => ({\n          ...section,\n          chords: section.chords.filter(chart => chart.id !== chordId)\n        }));\n        \n        return {\n          ...prev,\n          [itemId]: updatedSections\n        };\n      });\n\n    } catch (error) {\n      console.error('Error deleting chord chart:', error);\n      // TODO: Add user-visible error handling\n    }\n  };\n\n  const scrollBackToChord = () => {\n    if (scrollBackContext) {\n      setTimeout(() => {\n        // Try to find the specific chord chart element first\n        const chordElement = document.querySelector(`[data-chord-id=\"${scrollBackContext.chordId}\"]`);\n        if (chordElement) {\n          chordElement.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest'\n          });\n        } else {\n          // Fallback to original scroll position\n          window.scrollTo({\n            top: scrollBackContext.scrollPosition,\n            behavior: 'smooth'\n          });\n        }\n      }, 100);\n      setScrollBackContext(null);\n    }\n  };\n\n  const handleEditChordChart = (itemId, chordId, chartData) => {\n    console.log('Edit chord chart:', chordId, 'for item:', itemId, 'with data:', chartData);\n\n    // Store context for scrolling back after edit\n    setScrollBackContext({\n      itemId,\n      chordId,\n      scrollPosition: window.scrollY\n    });\n\n    // Show the chord editor for this item\n    setShowChordEditor(prev => ({\n      ...prev,\n      [itemId]: true\n    }));\n\n    // Set the editing chord ID in the editor so it knows to update instead of create\n    // We'll need to pass this to the ChordChartEditor component\n    setEditingChordId(chordId);\n\n    // Auto-scroll to the chord editor after it opens (keep chord name field visible at top)\n    setTimeout(() => {\n      const editorElement = document.querySelector(`[data-editor-for-item=\"${itemId}\"]`);\n      if (editorElement) {\n        editorElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center',\n          inline: 'nearest'\n        });\n      }\n    }, 100); // Small delay to ensure the editor has rendered\n  };\n\n  const handleInsertChordAfter = (itemId, afterChordId, afterChartData) => {\n    console.log('Insert chord after:', afterChordId, 'for item:', itemId, 'with data:', afterChartData);\n\n    // Store context for scrolling back after insert (use the afterChordId to scroll back to)\n    setScrollBackContext({\n      itemId,\n      chordId: afterChordId,\n      scrollPosition: window.scrollY\n    });\n\n    // Show the chord editor for this item\n    setShowChordEditor(prev => ({\n      ...prev,\n      [itemId]: true\n    }));\n\n    // Set insertion context - we'll pass this to the ChordChartEditor\n    // insertOrder should be the position to insert at, not after\n    setInsertionContext({\n      afterChordId,\n      sectionId: afterChartData.sectionId,\n      sectionLabel: afterChartData.sectionLabel,\n      sectionRepeatCount: afterChartData.sectionRepeatCount,\n      insertOrder: parseInt(afterChartData.order) + 1\n    });\n\n    // Clear editing chord ID since this is a new chord\n    setEditingChordId(null);\n\n    // Auto-scroll to the chord editor after it opens\n    setTimeout(() => {\n      const editorElement = document.querySelector(`[data-editor-for-item=\"${itemId}\"]`);\n      if (editorElement) {\n        editorElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start',\n          inline: 'nearest'\n        });\n      }\n    }, 100);\n  };\n\n  // Print chord charts functionality\n  const handlePrintChords = (itemId) => {\n    console.log('Print button clicked for item:', itemId);\n    // Add print class to chord chart container\n    const chordContainer = document.querySelector(`[data-item-id=\"${itemId}\"].chord-charts-container`);\n    console.log('Found container:', chordContainer);\n    if (chordContainer) {\n      chordContainer.classList.add('chord-chart-print-area');\n      window.print();\n      // Remove print class after printing\n      setTimeout(() => {\n        chordContainer.classList.remove('chord-chart-print-area');\n      }, 100);\n    } else {\n      console.error('Could not find chord charts container for item:', itemId);\n    }\n  };\n\n\n  // Chord chart copy functionality\n  const handleOpenCopyModal = async (itemId) => {\n    console.log('Opening copy modal for item:', itemId);\n    setCopySourceItemId(itemId);\n\n    // Get source item details for fuzzy matching\n    // itemId is the Item ID (Column B), but we need to find the actual item in allItems\n    const sourceItem = allItems?.find(item => item['B'] === itemId);\n    const sourceTitle = sourceItem?.['C'] || '';\n\n    // Find similar songs first\n    const similarSongs = findSimilarSongs(sourceTitle, allItems, itemId);\n    console.log('Source:', sourceTitle);\n    console.log('Found similar songs:', similarSongs.map(s => s['C']));\n\n    // TARGETED APPROACH: Only load chord charts for source + similar songs (not all items)\n    // This matches the efficient approach from the working sheets version\n    const itemsToLoad = [itemId, ...similarSongs.map(s => s['B'])]; // Use ItemIDs (Column B)\n    console.log('Loading chord charts for relevant items:', itemsToLoad.length, 'items');\n\n    for (const id of itemsToLoad) {\n      try {\n        const response = await fetch(`/api/items/${id}/chord-charts`);\n        if (response.ok) {\n          const charts = await response.json();\n          setChordCharts(prev => ({ ...prev, [id]: charts }));\n          console.log(`Loaded ${charts.length} charts for item ${id}`);\n        }\n      } catch (error) {\n        console.error(`Error loading chord charts for item ${id}:`, error);\n      }\n    }\n\n    setShowCopyModal(true);\n    setCopySearchTerm('');\n    setSelectedTargetItems(new Set());\n    setCopyProgress(null);\n  };\n\n  const handleCloseCopyModal = () => {\n    setShowCopyModal(false);\n    setCopySourceItemId(null);\n    setCopySearchTerm('');\n    setSelectedTargetItems(new Set());\n    setItemsWithExistingCharts(new Set());\n    setShowOverwriteConfirmation(false);\n    setCopyProgress(null);\n  };\n\n  const handleToggleTargetItem = (itemId) => {\n    setSelectedTargetItems(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(itemId)) {\n        newSet.delete(itemId);\n      } else {\n        newSet.add(itemId);\n        // Lazy load chord charts for this item if not already loaded (for overwrite detection)\n        // Note: itemId here is the primary key (Column A), but we need ItemID (Column B) for API\n        const targetItem = allItems?.find(item => item['A'] === itemId);\n        const itemReferenceId = targetItem?.['B'];\n        if (itemReferenceId) {\n          loadChordChartsForItem(itemReferenceId);\n        }\n      }\n      return newSet;\n    });\n  };\n\n  const handleConfirmCopy = async () => {\n    console.log('handleConfirmCopy called', { copySourceItemId, selectedTargetItems: Array.from(selectedTargetItems) });\n    if (!copySourceItemId || selectedTargetItems.size === 0) {\n      console.log('Early return: missing source or targets');\n      return;\n    }\n\n    // If there are overwrites and we haven't confirmed yet, show confirmation\n    if (itemsWithExistingCharts.size > 0 && !showOverwriteConfirmation) {\n      console.log('Showing overwrite confirmation, items with existing charts:', itemsWithExistingCharts.size);\n      setShowOverwriteConfirmation(true);\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/chord-charts/copy', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          source_item_id: copySourceItemId,\n          target_item_ids: Array.from(selectedTargetItems).map(primaryKey => {\n            // Convert primary key (Column A) to ItemID (Column B)\n            const targetItem = allItems?.find(item => item['A'] === primaryKey);\n            return targetItem?.['B'];\n          }).filter(Boolean) // Remove any undefined values\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to copy chord charts: ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      console.log('Chord charts copied successfully:', result);\n\n      // Set copy progress to complete to show success message\n      setCopyProgress('complete');\n\n      // Force refresh chord charts for all affected items using the proven autocreate pattern\n      // Convert primary keys (Column A) to ItemIDs (Column B) for targets, same as API call body\n      const targetItemIds = Array.from(selectedTargetItems).map(primaryKey => {\n        const targetItem = allItems?.find(item => item['A'] === primaryKey);\n        return targetItem?.['B'];\n      }).filter(Boolean);\n      const affectedItems = [copySourceItemId, ...targetItemIds];\n      console.log('[DEBUG COPY] About to refresh chord charts for affected items:', affectedItems);\n      for (const itemId of affectedItems) {\n        try {\n          const response = await fetch(`/api/items/${itemId}/chord-charts`);\n          if (response.ok) {\n            const charts = await response.json();\n\n            // Update chord charts state like autocreate does\n            console.log('[DEBUG COPY] Updating chordCharts state for item', itemId, 'with', charts.length, 'charts');\n            setChordCharts(prev => ({\n              ...prev,\n              [itemId]: charts\n            }));\n\n            // Build sections from loaded chord charts using inline logic like autocreate\n            if (charts.length === 0) {\n              setChordSections(prev => ({\n                ...prev,\n                [itemId]: []\n              }));\n            } else {\n              // Group chords by their section metadata (same logic as autocreate)\n              const sectionMap = new Map();\n\n              charts.forEach(chart => {\n                const sectionId = chart.sectionId || 'section-1';\n                const sectionLabel = chart.sectionLabel || 'Verse';\n                const sectionRepeatCount = chart.sectionRepeatCount || '';\n\n                if (!sectionMap.has(sectionId)) {\n                  sectionMap.set(sectionId, {\n                    id: sectionId,\n                    label: sectionLabel,\n                    repeatCount: sectionRepeatCount,\n                    chords: []\n                  });\n                }\n\n                sectionMap.get(sectionId).chords.push(chart);\n              });\n\n              // Convert to array and sort sections by the order of their first chord\n              const sections = Array.from(sectionMap.values()).sort((a, b) => {\n                const aFirstOrder = a.chords.length > 0 ? (a.chords[0].order || 0) : 0;\n                const bFirstOrder = b.chords.length > 0 ? (b.chords[0].order || 0) : 0;\n                return aFirstOrder - bFirstOrder;\n              });\n\n              console.log('[DEBUG COPY] Updating chordSections state for item', itemId, 'with', sections.length, 'sections');\n              setChordSections(prev => ({\n                ...prev,\n                [itemId]: sections\n              }));\n            }\n          }\n        } catch (refreshError) {\n          console.error('Error refreshing chord charts for item', itemId, refreshError);\n        }\n      }\n\n      handleCloseCopyModal();\n    } catch (error) {\n      console.error('Error copying chord charts:', error);\n      // TODO: Add user-visible error handling\n    }\n  };\n\n  // Overwrite confirmation handlers\n  const handleOverwriteConfirmed = () => {\n    console.log('Overwrite confirmed, proceeding with copy');\n    setShowOverwriteConfirmation(false);\n    // Continue with the copy by calling handleConfirmCopy again\n    handleConfirmCopy();\n  };\n\n  const handleOverwriteCancelled = () => {\n    console.log('Overwrite cancelled, returning to item selection');\n    setShowOverwriteConfirmation(false);\n    // Stay in the modal, return to item selection\n  };\n\n  // Copy from modal functions (simplified to match working copy TO modal)\n  const handleOpenCopyFromModal = (itemId) => {\n    console.log('Opening copy from modal for item:', itemId);\n    setCopyFromTargetItemId(itemId);\n    setShowCopyFromModal(true);\n    setCopyFromSearchTerm('');\n    setSelectedSourceItem(null);\n  };\n\n  const handleCloseCopyFromModal = () => {\n    setShowCopyFromModal(false);\n    setCopyFromTargetItemId(null);\n    setCopyFromSearchTerm('');\n    setSelectedSourceItem(null);\n    setAllItemChordCounts({}); // Clear chord count cache\n  };\n\n  const handleConfirmCopyFrom = async () => {\n    console.log('handleConfirmCopyFrom called', { selectedSourceItem, copyFromTargetItemId });\n    if (!selectedSourceItem || !copyFromTargetItemId) {\n      console.log('Early return: missing source or target');\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/chord-charts/copy', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          source_item_id: selectedSourceItem,\n          target_item_ids: [copyFromTargetItemId]\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to copy chord charts: ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      console.log('Chord charts copied successfully:', result);\n\n      // Force refresh chord charts for target item\n      const response2 = await fetch(`/api/items/${copyFromTargetItemId}/chord-charts`);\n      if (response2.ok) {\n        const charts = await response2.json();\n\n        setChordCharts(prev => ({\n          ...prev,\n          [copyFromTargetItemId]: charts\n        }));\n\n        // Build sections from loaded chord charts\n        if (charts.length === 0) {\n          setChordSections(prev => ({\n            ...prev,\n            [copyFromTargetItemId]: []\n          }));\n        } else {\n          const sectionMap = new Map();\n\n          charts.forEach(chart => {\n            const sectionId = chart.sectionId || 'section-1';\n            const sectionLabel = chart.sectionLabel || 'Verse';\n            const sectionRepeatCount = chart.sectionRepeatCount || '';\n\n            if (!sectionMap.has(sectionId)) {\n              sectionMap.set(sectionId, {\n                id: sectionId,\n                label: sectionLabel,\n                repeatCount: sectionRepeatCount,\n                chords: []\n              });\n            }\n\n            sectionMap.get(sectionId).chords.push(chart);\n          });\n\n          const sections = Array.from(sectionMap.values()).sort((a, b) => {\n            const aFirstOrder = a.chords.length > 0 ? (a.chords[0].order || 0) : 0;\n            const bFirstOrder = b.chords.length > 0 ? (b.chords[0].order || 0) : 0;\n            return aFirstOrder - bFirstOrder;\n          });\n\n          setChordSections(prev => ({\n            ...prev,\n            [copyFromTargetItemId]: sections\n          }));\n        }\n      }\n\n      handleCloseCopyFromModal();\n    } catch (error) {\n      console.error('Error copying chord charts:', error);\n      // TODO: Add user-visible error handling\n    }\n  };\n\n  // Autocreate functions\n  const handleAutocreateClick = (itemId) => {\n    const existingCharts = chordCharts[itemId] || [];\n    if (existingCharts.length > 0) {\n      // Show modal asking to delete existing charts\n      setDeleteModalItemId(itemId);\n      setShowDeleteChordsModal(true);\n    } else {\n      // No existing charts, proceed with file selection\n      // This will be handled by the drag-and-drop zone\n    }\n  };\n\n  const handleDeleteExistingCharts = async () => {\n    if (!deleteModalItemId) return;\n    \n    try {\n      // Delete all chord charts for this item\n      const existingCharts = chordCharts[deleteModalItemId] || [];\n      for (const chart of existingCharts) {\n        const response = await fetch(`/api/items/${deleteModalItemId}/chord-charts/${chart.id}`, {\n          method: 'DELETE'\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to delete chord chart ${chart.id}`);\n        }\n      }\n      \n      // Force refresh chord charts (clear state first since all charts are deleted)\n      setChordCharts(prev => ({\n        ...prev,\n        [deleteModalItemId]: []\n      }));\n      setChordSections(prev => ({\n        ...prev,\n        [deleteModalItemId]: []\n      }));\n      \n      // Close modal\n      setShowDeleteChordsModal(false);\n      setDeleteModalItemId(null);\n    } catch (error) {\n      console.error('Error deleting existing chord charts:', error);\n    }\n  };\n\n  const handleCancelAutocreate = (itemId) => {\n    // Cancel the request if it's in progress\n    if (autocreateAbortController[itemId]) {\n      autocreateAbortController[itemId].abort();\n    }\n    \n    // Reset all state for this item\n    setAutocreateProgress(prev => {\n      const newState = { ...prev };\n      delete newState[itemId];\n      return newState;\n    });\n    setAutocreateAbortController(prev => {\n      const newState = { ...prev };\n      delete newState[itemId];\n      return newState;\n    });\n    setUploadedFiles(prev => {\n      const newState = { ...prev };\n      delete newState[itemId];\n      return newState;\n    });\n  };\n\n  const handleShowCancelConfirmation = (itemId) => {\n    setPendingCancelItemId(itemId);\n    setShowCancelConfirmation(true);\n  };\n\n  const handleConfirmCancel = () => {\n    if (pendingCancelItemId) {\n      handleCancelAutocreate(pendingCancelItemId);\n    }\n    setShowCancelConfirmation(false);\n    setPendingCancelItemId(null);\n  };\n\n  const handleCancelDialog = () => {\n    setShowCancelConfirmation(false);\n    setPendingCancelItemId(null);\n  };\n\n  const handleSingleFileDrop = (itemId, files) => {\n    if (!files || files.length === 0) return;\n    \n    // Validate file count\n    if (files.length > 5) {\n      alert('Maximum 5 files allowed. Please select fewer files.');\n      return;\n    }\n    \n    setUploadedFiles(prev => ({ ...prev, [itemId]: Array.from(files) }));\n  };\n\n  // Validate manual chord input pattern\n  const validateManualChordInput = (input, itemId) => {\n    if (!input || input.trim().length === 0) {\n      setManualInputErrors(prev => ({ ...prev, [itemId]: null }));\n      return true;\n    }\n\n    const trimmedInput = input.trim();\n\n    // Pattern: Allow chord names (letters, numbers, #, b, ♭, ♯, /), commas, spaces, and section names on their own lines\n    // Valid examples: \"C, G, Am, F\", \"verse\\nC, G, Am\\nchorus\\nF, C, G\", \"Em7, A#, Bb\", \"Intro D A G D\", \"C/G\"\n    const validPattern = /^[A-Za-z0-9#b♭♯/\\s,\\n\\r-]+$/;\n\n    if (!validPattern.test(trimmedInput)) {\n      setManualInputErrors(prev => ({\n        ...prev,\n        [itemId]: 'Only chord names (A-G), numbers, #, b, ♭, ♯, /, commas, spaces, and section names are allowed'\n      }));\n      return false;\n    }\n\n    // Check for potentially problematic patterns\n    const lines = trimmedInput.split(/[\\n\\r]+/);\n    const hasValidContent = lines.some(line => {\n      const cleanLine = line.trim();\n      if (cleanLine.length === 0) return false;\n\n      // Check if this is a section name (single word, letters only)\n      if (/^[A-Za-z]+$/.test(cleanLine)) return true;\n\n      // Check if this line contains only chords (space-separated or comma-separated)\n      const words = cleanLine.split(/[,\\s]+/).filter(word => word.trim().length > 0);\n      const allWordsAreChords = words.every(word => /^[A-Ga-g][A-Za-z0-9#b♭♯/]*$/.test(word));\n\n      return allWordsAreChords;\n    });\n\n    if (!hasValidContent) {\n      setManualInputErrors(prev => ({\n        ...prev,\n        [itemId]: 'Please enter chord names separated by commas, spaces, or section names (e.g., \"C, G, Am, F\" or \"D A G D\" or \"Intro\")'\n      }));\n      return false;\n    }\n\n    setManualInputErrors(prev => ({ ...prev, [itemId]: null }));\n    return true;\n  };\n\n  const handleProcessFiles = async (itemId) => {\n    const files = uploadedFiles[itemId] || [];\n    const youtubeUrl = youtubeUrls[itemId]?.trim();\n    const manualChords = manualChordInput[itemId]?.trim();\n\n    console.log(`[AUTOCREATE] handleProcessFiles called for item ${itemId}, files:`, files.length, 'youtubeUrl:', youtubeUrl, 'manualChords:', manualChords);\n\n    // Handle YouTube URL if provided\n    if (youtubeUrl) {\n      await handleYouTubeUrl(itemId, youtubeUrl);\n      return;\n    }\n\n    // Handle manual chord input if provided\n    if (manualChords) {\n      if (validateManualChordInput(manualChords, itemId)) {\n        await handleManualChordInput(itemId, manualChords);\n        return;\n      } else {\n        return; // Stop processing if validation fails\n      }\n    }\n\n    // Handle files if provided\n    if (files.length === 0) {\n      alert('Please add at least one file, YouTube URL, or manual chord input before processing.');\n      return;\n    }\n\n    await handleFileDrop(itemId, files);\n  };\n\n  const handleManualChordInput = async (itemId, chordInput) => {\n    console.log(`[AUTOCREATE] Processing manual chord input for item ${itemId}:`, chordInput);\n\n    setAutocreateProgress(prev => ({\n      ...prev,\n      [itemId]: 'processing'\n    }));\n\n    try {\n      // Create a text file from the manual input and send it to the autocreate endpoint\n      const textBlob = new Blob([chordInput], { type: 'text/plain' });\n      const textFile = new File([textBlob], 'manual-input.txt', { type: 'text/plain' });\n\n      const formData = new FormData();\n      formData.append('file0', textFile);\n      formData.append('itemId', itemId);\n      formData.append('userChoice', 'chord_names'); // Indicate this is chord names input\n\n      console.log(`[AUTOCREATE] Sending manual input to autocreate endpoint`);\n\n      const response = await fetch('/api/autocreate-chord-charts', {\n        method: 'POST',\n        body: formData\n      });\n\n      if (!response.ok) {\n        const errorData = await response.text();\n        throw new Error(`Failed to process manual input: ${response.status} ${response.statusText} - ${errorData}`);\n      }\n\n      const result = await response.json();\n      console.log(`[AUTOCREATE] Manual input processed successfully:`, result);\n\n      // Force refresh UI state - same as other autocreate methods\n      const chartResponse = await fetch(`/api/items/${itemId}/chord-charts`);\n      const charts = await chartResponse.json();\n\n      setChordCharts(prev => ({\n        ...prev,\n        [itemId]: charts\n      }));\n\n      setChordSections(prev => ({\n        ...prev,\n        [itemId]: buildSectionsFromCharts(charts)\n      }));\n\n      // Clear the manual input\n      setManualChordInput(prev => ({\n        ...prev,\n        [itemId]: ''\n      }));\n\n      // Show success modal - same as other autocreate methods\n      const itemDetails = getItemDetails(itemId);\n      setAutocreateSuccessData({\n        itemTitle: itemDetails?.C || `Item ${itemId}`,\n        chordsCreated: charts.length,\n        processingMethod: 'Manual Entry'\n      });\n      setShowAutocreateSuccessModal(true);\n\n    } catch (error) {\n      console.error('Error processing manual chord input:', error);\n      setApiError({ message: 'Failed to process manual chord input. Please try again.' });\n      setShowApiErrorModal(true);\n    } finally {\n      setAutocreateProgress(prev => {\n        const newState = { ...prev };\n        delete newState[itemId];\n        return newState;\n      });\n    }\n  };\n\n\n  const handleYouTubeUrl = async (itemId, youtubeUrl) => {\n    console.log(`[YOUTUBE] Processing YouTube URL for item ${itemId}:`, youtubeUrl);\n\n    // Sanitize and validate YouTube URL format\n    const sanitizedUrl = youtubeUrl.trim().replace(/[<>\"']/g, '');\n    const youtubeRegex = /^https?:\\/\\/(www\\.)?(youtube\\.com\\/watch\\?v=[\\w-]+|youtu\\.be\\/[\\w-]+)(\\?.*|&.*)?$/;\n\n    if (!youtubeRegex.test(sanitizedUrl)) {\n      setApiError({ message: 'Please enter a valid YouTube URL (e.g., https://youtube.com/watch?v=...)' });\n      setShowApiErrorModal(true);\n      return;\n    }\n\n    setAutocreateProgress(prev => ({\n      ...prev,\n      [itemId]: 'checking_transcript'\n    }));\n\n    try {\n      // First, check if transcript is available and fetch it\n      console.log('[YOUTUBE] Fetching transcript from YouTube API');\n      const transcriptResponse = await fetch('/api/youtube/check-transcript', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ url: sanitizedUrl })\n      });\n\n      if (!transcriptResponse.ok) {\n        throw new Error('Failed to fetch YouTube transcript');\n      }\n\n      const transcriptData = await transcriptResponse.json();\n\n      if (!transcriptData.hasTranscript || !transcriptData.transcript) {\n        setApiError({\n          message: 'This YouTube video does not have a transcript available. Please try a different video or use file upload instead.'\n        });\n        setShowApiErrorModal(true);\n        return;\n      }\n\n      console.log(`[YOUTUBE] Transcript fetched successfully, length: ${transcriptData.transcript.length} characters`);\n\n      // Now process the transcript using the existing function\n      await processYouTubeTranscript(itemId, transcriptData.transcript);\n\n    } catch (error) {\n      console.error('Error processing YouTube URL:', error);\n      setApiError({ message: 'Failed to process YouTube URL. Please try again.' });\n      setShowApiErrorModal(true);\n      setAutocreateProgress(prev => {\n        const newState = { ...prev };\n        delete newState[itemId];\n        return newState;\n      });\n    }\n\n  };\n\n  const processYouTubeTranscript = async (itemId, transcript) => {\n    try {\n      // Set reading transcript state for YouTube processing\n      setAutocreateProgress({ [itemId]: 'reading_transcript' });\n\n      // Use existing autocreate endpoint with chord_names type\n      const formData = new FormData();\n\n      // Add itemId to form data (not headers)\n      formData.append('itemId', itemId);\n\n      // Create a virtual file with the transcript content\n      const transcriptBlob = new Blob([transcript], { type: 'text/plain' });\n      formData.append('file0', transcriptBlob, 'youtube_transcript.txt');\n\n      // Show uploading for minimum 2 seconds, then switch to processing\n      const minDisplayTime = 2000;\n\n      setTimeout(() => {\n        setAutocreateProgress({ [itemId]: 'processing' });\n      }, minDisplayTime);\n\n      const response = await fetch('/api/autocreate-chord-charts', {\n        method: 'POST',\n        headers: { 'X-Item-Id': itemId },\n        body: formData\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to create chord charts: ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      console.log('[YOUTUBE] Chord charts created successfully:', result);\n\n      // Check if the result contains the \"no chord names found\" error\n      if (result.error && result.error.includes('No chord names found in this transcript')) {\n        // Show the \"no chord names found\" modal instead of success\n        setShowNoChordNamesModal(true);\n        setAutocreateProgress(prev => {\n          const newState = { ...prev };\n          delete newState[itemId];\n          return newState;\n        });\n        // Clear YouTube URL\n        setYoutubeUrls(prev => ({ ...prev, [itemId]: '' }));\n        return;\n      }\n\n      // Track autocreate chord charts success (YouTube transcript flow)\n      const routineItem = routine.items.find(item => item['B'] === itemId);\n      if (routineItem) {\n        const itemDetails = getItemDetails(itemId);\n        const itemName = itemDetails?.['C'] || `Item ${itemId}`; // Column C is Title\n\n        trackChordChartEvent('autocreated', itemName, {\n          content_type: 'youtube_transcript',\n          source: 'youtube_url'\n        });\n      }\n\n      // Show success modal for YouTube transcripts\n      const itemDetails = getItemDetails(itemId);\n      setAutocreateSuccessData({\n        itemName: itemDetails?.['C'] || `Item ${itemId}`,\n        chordCount: result.chord_count || 0,\n        contentType: 'youtube_transcript',\n        uploadedFileNames: 'YouTube transcript',\n        isVisionAnalysis: false\n      });\n      setShowAutocreateSuccessModal(true);\n\n      // Force refresh chord charts for this item (same as file upload)\n      try {\n        const response2 = await fetch(`/api/items/${itemId}/chord-charts`);\n        if (response2.ok) {\n          const charts = await response2.json();\n\n          // Transform chord data from Google Sheets format to expected format\n          const transformedCharts = charts;\n\n          // Update chord charts state like manual creation does\n          setChordCharts(prev => ({\n            ...prev,\n            [itemId]: transformedCharts\n          }));\n\n          // Build sections from loaded chord charts (same logic as file upload)\n          if (transformedCharts.length === 0) {\n            setChordSections(prev => ({\n              ...prev,\n              [itemId]: []\n            }));\n          } else {\n            // Group chords by their section metadata (same logic as getChordSections)\n            const sectionMap = new Map();\n\n            transformedCharts.forEach(chart => {\n              const sectionId = chart.sectionId || 'section-1';\n              const sectionLabel = chart.sectionLabel || 'Verse';\n              const sectionRepeatCount = chart.sectionRepeatCount || '';\n\n              if (!sectionMap.has(sectionId)) {\n                sectionMap.set(sectionId, {\n                  id: sectionId,\n                  label: sectionLabel,\n                  repeatCount: sectionRepeatCount,\n                  chords: []\n                });\n              }\n\n              sectionMap.get(sectionId).chords.push(chart);\n            });\n\n            const sections = Array.from(sectionMap.values());\n            setChordSections(prev => ({\n              ...prev,\n              [itemId]: sections\n            }));\n          }\n        }\n      } catch (refreshError) {\n        console.error('Error refreshing chord charts:', refreshError);\n        // Don't fail the whole operation if refresh fails\n      }\n\n      // Clear YouTube URL and progress state after successful processing\n      setYoutubeUrls(prev => ({ ...prev, [itemId]: '' }));\n      setAutocreateProgress(prev => {\n        const newState = { ...prev };\n        delete newState[itemId];\n        return newState;\n      });\n\n    } catch (error) {\n      console.error('Error processing YouTube transcript:', error);\n      setApiError({ message: 'Failed to create chord charts from transcript. Please try again.' });\n      setShowApiErrorModal(true);\n      setAutocreateProgress(prev => {\n        const newState = { ...prev };\n        delete newState[itemId];\n        return newState;\n      });\n    }\n  };\n\n  const handleMixedContentChoice = async (contentType) => {\n    if (!mixedContentData) return;\n    \n    const { itemId, files } = mixedContentData;\n    \n    console.log(`[AUTOCREATE] handleMixedContentChoice called with contentType: ${contentType}, itemId: ${itemId}, files:`, files.length);\n    \n    try {\n      setAutocreateProgress({ [itemId]: 'processing' });\n      setShowMixedContentModal(false);\n      \n      console.log(`[AUTOCREATE] Starting processing for ${contentType} with ${files.length} files`);\n      \n      // Create FormData and add user choice\n      const formData = new FormData();\n      files.forEach((file, index) => {\n        // We need to reconstruct the file from the base64 data\n        const byteCharacters = atob(file.data);\n        const byteNumbers = Array.from({ length: byteCharacters.length });\n        for (let i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n        const reconstructedFile = new File([byteArray], file.name, { type: file.media_type });\n        formData.append(`file${index}`, reconstructedFile);\n      });\n      formData.append('itemId', itemId);\n      formData.append('userChoice', contentType); // Add user's choice\n      \n      console.log(`[AUTOCREATE] Sending API request to /api/autocreate-chord-charts`);\n      \n      const response = await fetch('/api/autocreate-chord-charts', {\n        method: 'POST',\n        body: formData\n      });\n      \n      console.log(`[AUTOCREATE] API response status: ${response.status} ${response.statusText}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to process files');\n      }\n      \n      const result = await response.json();\n      \n      console.log(`[AUTOCREATE] API response data:`, result);\n      \n      if (result.success) {\n        console.log(`[AUTOCREATE] Processing successful, setting state to complete`);\n        setAutocreateProgress({ [itemId]: 'complete' });\n\n        // Get item details once for reuse\n        const itemDetails = getItemDetails(itemId);\n        const itemName = itemDetails?.['C'] || `Item ${itemId}`;\n\n        // Send notification if user requested it\n        console.log('[NOTIFY] Checking notification request for itemId:', itemId);\n        console.log('[NOTIFY] notifyOnComplete ref:', notifyOnCompleteRef.current);\n        if (notifyOnCompleteRef.current[itemId]) {\n          console.log('[NOTIFY] User requested notification, sending...');\n          sendCompletionNotification(itemName);\n        } else {\n          console.log('[NOTIFY] No notification requested for this item');\n        }\n\n        // Track autocreate chord charts success\n        const routineItem = routine.items.find(item => item['B'] === itemId);\n        if (routineItem) {\n          trackChordChartEvent('autocreated', itemName, {\n            file_count: files?.length || 0,\n            content_type: contentType || 'mixed',\n            uploaded_file_names: files?.map(f => f.name).join(', ') || ''\n          });\n        }\n\n        // Show success modal for visual analysis (more complex processing)\n        setAutocreateSuccessData({\n          itemName,\n          chordCount: result.chord_count || 0,\n          contentType: contentType || 'mixed',\n          uploadedFileNames: files?.map(f => f.name).join(', ') || '',\n          isVisionAnalysis: contentType === 'chord_charts' || result.used_vision_analysis === true\n        });\n        setShowAutocreateSuccessModal(true);\n\n        // Force refresh chord charts\n        try {\n          const chartsResponse = await fetch(`/api/items/${itemId}/chord-charts`);\n          if (chartsResponse.ok) {\n            const charts = await chartsResponse.json();\n            const transformedCharts = charts;\n            setChordCharts(prev => ({ ...prev, [itemId]: transformedCharts }));\n            \n            if (transformedCharts && transformedCharts.length > 0) {\n              const sections = buildSectionsFromCharts(transformedCharts);\n              setChordSections(prev => ({ ...prev, [itemId]: sections }));\n            }\n          }\n        } catch (error) {\n          console.error('Failed to refresh chord charts after mixed content choice:', error);\n        }\n        \n        // Clear state after delay\n        setTimeout(() => {\n          setAutocreateProgress(prev => {\n            const newState = { ...prev };\n            delete newState[itemId];\n            return newState;\n          });\n          setUploadedFiles(prev => {\n            const newState = { ...prev };\n            delete newState[itemId];\n            return newState;\n          });\n          setMixedContentData(null);\n        }, 2000);\n      }\n    } catch (error) {\n      console.error(`[AUTOCREATE] Error processing mixed content choice:`, error);\n      console.error(`[AUTOCREATE] Full error details:`, {\n        message: error.message,\n        stack: error.stack,\n        name: error.name\n      });\n      setAutocreateProgress({ [itemId]: 'error' });\n      setMixedContentData(null);\n    }\n  };\n  \n  const handleFileDrop = async (itemId, files) => {\n    if (!files || files.length === 0) return;\n    \n    // Validate file count\n    if (files.length > 5) {\n      alert('Maximum 5 files allowed. Please select fewer files.');\n      return;\n    }\n    \n    try {\n      setAutocreateProgress({ [itemId]: 'uploading' });\n      \n      // Create abort controller for this request\n      const abortController = new AbortController();\n      setAutocreateAbortController(prev => ({ ...prev, [itemId]: abortController }));\n      \n      const formData = new FormData();\n      Array.from(files).forEach((file, index) => {\n        formData.append(`file${index}`, file);\n      });\n      formData.append('itemId', itemId);\n      \n      // Show uploading for minimum 2 seconds, then switch to processing\n      const minDisplayTime = 2000;\n      \n      setTimeout(() => {\n        setAutocreateProgress({ [itemId]: 'processing' });\n      }, minDisplayTime);\n      \n      const response = await fetch('/api/autocreate-chord-charts', {\n        method: 'POST',\n        body: formData,\n        signal: abortController.signal\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to process files');\n      }\n      \n      const result = await response.json();\n      \n      // Check if user needs to choose between mixed content types\n      if (result.needs_user_choice) {\n        setMixedContentData({\n          itemId: itemId,\n          options: result.mixed_content_options || [],\n          files: result.files || []\n        });\n        setShowMixedContentModal(true);\n        setAutocreateProgress(prev => {\n          const newState = { ...prev };\n          delete newState[itemId];\n          return newState;\n        });\n        return;\n      }\n\n      // Check for unsupported file formats\n      if (result.error === 'unsupported_format') {\n        setUnsupportedFormatData({\n          message: result.message,\n          title: result.title\n        });\n        setShowUnsupportedFormatModal(true);\n        setAutocreateProgress(prev => {\n          const newState = { ...prev };\n          delete newState[itemId];\n          return newState;\n        });\n        return;\n      }\n      \n      setAutocreateProgress({ [itemId]: 'complete' });\n\n      // Get item details once for reuse\n      const itemDetails = getItemDetails(itemId);\n      const itemName = itemDetails?.['C'] || `Item ${itemId}`;\n\n      // Send notification if user requested it\n      console.log('[NOTIFY] Checking notification request for itemId (direct flow):', itemId);\n      console.log('[NOTIFY] notifyOnComplete ref (direct flow):', notifyOnCompleteRef.current);\n      if (notifyOnCompleteRef.current[itemId]) {\n        console.log('[NOTIFY] User requested notification (direct flow), sending...');\n        sendCompletionNotification(itemName);\n      } else {\n        console.log('[NOTIFY] No notification requested for this item (direct flow)');\n      }\n\n      // Track autocreate chord charts success (direct upload flow)\n      const routineItem = routine.items.find(item => item['B'] === itemId);\n      if (routineItem) {\n        trackChordChartEvent('autocreated', itemName, {\n          file_count: result.file_count || 0,\n          content_type: result.content_type || 'auto-detected',\n          uploaded_file_names: result.uploaded_file_names || ''\n        });\n      }\n\n      // Show success modal for visual analysis (more complex processing)\n      setAutocreateSuccessData({\n        itemName,\n        chordCount: result.chord_count || 0,\n        contentType: result.content_type || 'auto-detected',\n        uploadedFileNames: result.uploaded_file_names || '',\n        isVisionAnalysis: result.content_type === 'chord_charts' || result.used_vision_analysis === true || (!result.content_type && result.used_vision_analysis !== false)\n      });\n      setShowAutocreateSuccessModal(true);\n\n      // Force refresh chord charts for this item (don't use loadChordChartsForItem as it skips if already loaded)\n      try {\n        const response = await fetch(`/api/items/${itemId}/chord-charts`);\n        if (response.ok) {\n          const charts = await response.json();\n          \n          // Transform chord data from Google Sheets format to expected format\n          const transformedCharts = charts;\n          \n          // Update chord charts state like manual creation does\n          setChordCharts(prev => ({\n            ...prev,\n            [itemId]: transformedCharts\n          }));\n          \n          // Build sections from loaded chord charts\n          if (transformedCharts.length === 0) {\n            setChordSections(prev => ({\n              ...prev,\n              [itemId]: []\n            }));\n          } else {\n            // Group chords by their section metadata (same logic as getChordSections)\n            const sectionMap = new Map();\n            \n            transformedCharts.forEach(chart => {\n              const sectionId = chart.sectionId || 'section-1';\n              const sectionLabel = chart.sectionLabel || 'Verse';\n              const sectionRepeatCount = chart.sectionRepeatCount || '';\n              \n              if (!sectionMap.has(sectionId)) {\n                sectionMap.set(sectionId, {\n                  id: sectionId,\n                  label: sectionLabel,\n                  repeatCount: sectionRepeatCount,\n                  chords: []\n                });\n              }\n              \n              sectionMap.get(sectionId).chords.push(chart);\n            });\n            \n            // Convert to array and sort sections by the order of their first chord\n            const sections = Array.from(sectionMap.values()).sort((a, b) => {\n              const aMinOrder = Math.min(...a.chords.map(c => c.order || 0));\n              const bMinOrder = Math.min(...b.chords.map(c => c.order || 0));\n              return aMinOrder - bMinOrder;\n            });\n            \n            // Sort chords within each section by order\n            sections.forEach(section => {\n              section.chords.sort((a, b) => (a.order || 0) - (b.order || 0));\n            });\n            \n            setChordSections(prev => ({\n              ...prev,\n              [itemId]: sections\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('Failed to refresh chord charts after autocreate:', error);\n      }\n      \n      // Clear progress and close autocreate zone after a delay\n      setTimeout(() => {\n        setAutocreateProgress(prev => {\n          const newState = { ...prev };\n          delete newState[itemId];\n          return newState;\n        });\n        setShowAutocreateZone(prev => ({ ...prev, [itemId]: false }));\n        setAutocreateAbortController(prev => {\n          const newState = { ...prev };\n          delete newState[itemId];\n          return newState;\n        });\n        setUploadedFiles(prev => {\n          const newState = { ...prev };\n          delete newState[itemId];\n          return newState;\n        });\n      }, 5000);\n      \n    } catch (error) {\n      if (error.name === 'AbortError') {\n        console.log('Autocreate request was cancelled');\n        return;\n      }\n      \n      console.error('Error in autocreate:', error);\n      \n      // Check if this is an API error that needs special handling\n      const errorMsg = error.message || error.toString();\n      if (errorMsg.includes('529') || errorMsg.includes('overloaded') || \n          errorMsg.includes('429') || errorMsg.includes('rate limit') ||\n          errorMsg.includes('500') || errorMsg.includes('502') || errorMsg.includes('503') ||\n          errorMsg.includes('timeout')) {\n        // Show API error modal for these specific errors\n        setApiError(error);\n        setShowApiErrorModal(true);\n        setAutocreateProgress({ [itemId]: 'idle' }); // Reset to idle state\n      } else {\n        // Generic error handling for other errors\n        setAutocreateProgress({ [itemId]: 'error' });\n      }\n      \n      // Clear error state after delay (only for generic errors)\n      if (!(errorMsg.includes('529') || errorMsg.includes('overloaded') || \n            errorMsg.includes('429') || errorMsg.includes('rate limit') ||\n            errorMsg.includes('500') || errorMsg.includes('502') || errorMsg.includes('503') ||\n            errorMsg.includes('timeout'))) {\n        setTimeout(() => {\n          setAutocreateProgress(prev => {\n          const newState = { ...prev };\n          delete newState[itemId];\n          return newState;\n        });\n        setAutocreateAbortController(prev => {\n          const newState = { ...prev };\n          delete newState[itemId];\n          return newState;\n        });\n      }, 5000);\n      }\n    }\n  };\n\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">{routine?.name}</h1>\n        <div className=\"flex flex-col items-end gap-2\">\n          <div className=\"text-xl font-mono\">\n            {formatHoursAndMinutes(completedMinutes)} / {formatHoursAndMinutes(totalMinutes - completedMinutes)}\n          </div>\n          <Button\n            variant=\"outline\"\n            onClick={resetProgress}\n            className=\"text-gray-300 hover:text-white\"\n          >\n            Reset Progress\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"space-y-4\">\n        {routine?.items?.map((routineItem) => {\n          const isExpanded = expandedItems.has(routineItem['A']);  // Column A is ID\n          const isNotesExpanded = expandedNotes.has(routineItem['A']);\n          const isTimerActive = activeTimers.has(routineItem['A']);\n          const isCompleted = completedItems.has(routineItem['A']);  // Use routine entry ID for completion state\n          \n          // Get full item details from cache if available, otherwise use defaults\n          const itemDetails = getItemDetails(routineItem['B']);\n          const timerValue = timers[routineItem['A']] !== undefined \n            ? timers[routineItem['A']] \n            : (itemDetails?.['E'] || 5) * 60;  // Column E is Duration\n          const itemNotes = notes[routineItem['B']] || '';\n          const isChordsExpanded = expandedChords.has(routineItem['A']);\n          \n          // For collapsed items, use minimal details; for expanded items, use full details or loading state\n          const displayTitle = routineItem.minimalDetails?.['C'] || 'Loading...';\n          const isLoadingDetails = isExpanded && !itemDetails && isLoadingItem(routineItem['B']);\n          \n          return (\n            <div\n              key={routineItem['A']}  // Column A is ID\n              className=\"rounded-lg bg-gray-800 overflow-hidden\"\n            >\n              <h2 className=\"sr-only\">Practice Item: {displayTitle}</h2>\n              <div\n                className=\"flex items-center justify-between p-5 cursor-pointer hover:bg-gray-700\"\n                onClick={() => toggleItem(routineItem['A'])}  // Column A is ID\n                role=\"button\"\n                aria-expanded={isExpanded}\n                aria-controls={`practice-item-content-${routineItem['A']}`}\n                tabIndex={0}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter' || e.key === ' ') {\n                    e.preventDefault();\n                    toggleItem(routineItem['A']);\n                  }\n                }}\n              >\n                <div className=\"flex items-center space-x-4\">\n                  <button\n                    className={`w-6 h-6 rounded-full border-2 flex items-center justify-center ${isCompleted\n                        ? 'bg-green-500 border-green-500 text-white'\n                        : 'border-gray-400 text-transparent hover:border-gray-300'}`}\n                    onClick={(e) => toggleComplete(routineItem['A'], e)}  // Column A is ID\n                    aria-label={isCompleted ? 'Mark as incomplete' : 'Mark as complete'}\n                  >\n                    <Check className=\"h-4 w-4\" aria-hidden=\"true\" />\n                  </button>\n                  {isExpanded ? (\n                    <ChevronDown className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                  ) : (\n                    <ChevronRight className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                  )}\n                  <span className={`text-xl ${isCompleted ? 'line-through text-gray-500' : ''}`} id={`practice-item-title-${routineItem['A']}`}>\n                    {displayTitle}\n                    {isLoadingDetails && <span className=\"text-gray-500 ml-2\" role=\"status\" aria-live=\"polite\">(Loading details...)</span>}\n                  </span>\n                </div>\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"text-gray-400\"\n                      onClick={(e) => toggleTimer(routineItem['A'], e)}\n                      title={activeTimers.has(routineItem['A']) ? \"Pause timer\" : \"Start timer\"}\n                    >\n                      {activeTimers.has(routineItem['A']) ? (\n                        <PauseIcon className=\"h-5 w-5\" />\n                      ) : (\n                        <PlayIcon className=\"h-5 w-5\" />\n                      )}\n                    </Button>\n\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"text-gray-400\"\n                      onClick={(e) => resetTimer(routineItem['A'], e)}\n                      title=\"Reset timer\"\n                    >\n                      <ResetIcon className=\"h-5 w-5\" />\n                    </Button>\n\n                    <span className=\"text-lg font-mono\" title=\"Time remaining\">\n                      {formatTime(timerValue)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              {isExpanded && (\n                <div className=\"px-8 pb-6\">\n                  {/* Timer section */}\n                  <div className=\"flex flex-col items-center justify-center py-8 space-y-6\">\n                    <button\n                      onClick={(e) => toggleTimer(routineItem['A'], e)}  // Column A is ID\n                      className=\"w-48 h-48 rounded-full border-4 border-gray-600 flex items-center justify-center hover:border-gray-500 transition-colors\"\n                    >\n                      {isTimerActive ? (\n                        <PauseIcon className=\"h-24 w-24 text-red-500\" />\n                      ) : (\n                        <PlayIcon className=\"h-24 w-24 text-green-500\" />\n                      )}\n                    </button>\n                    <div className=\"flex flex-col items-center space-y-2\">\n                      <div className=\"text-5xl font-mono\">\n                        {formatTime(timerValue)}\n                      </div>\n                      {!isTimerActive && timerValue !== (itemDetails?.['E'] || 5) * 60 && (  // Column E is Duration\n                        <button\n                          onClick={(e) => resetTimer(routineItem['A'], e)}  // Column A is ID\n                          className=\"flex items-center space-x-2 text-gray-400 hover:text-gray-300 transition-colors\"\n                        >\n                          <ResetIcon className=\"h-4 w-4\" />\n                          <span>Reset Timer</span>\n                        </button>\n                      )}\n                    </div>\n\n                    {/* Mark as done button - centered below timer */}\n                    <div className=\"flex justify-center mt-6\">\n                      <Button\n                        variant=\"outline\"\n                        className=\"max-w-md text-gray-300 hover:text-white\"\n                        onClick={(e) => toggleComplete(routineItem['A'], e)}\n                      >\n                        Mark as done\n                      </Button>\n                    </div>\n                  </div>\n\n                  {/* Description */}\n                  <div className=\"space-y-2 px-4\">\n                    {/* Chord Charts toggle */}\n                    <div\n                      className=\"flex items-center justify-between p-2 hover:bg-gray-700 rounded cursor-pointer\"\n                      onClick={(e) => toggleChords(routineItem['A'], e)}\n                      role=\"button\"\n                      aria-expanded={isChordsExpanded}\n                      aria-controls={`chord-charts-content-${routineItem['A']}`}\n                      tabIndex={0}\n                      onKeyDown={(e) => {\n                        if (e.key === 'Enter' || e.key === ' ') {\n                          e.preventDefault();\n                          toggleChords(routineItem['A'], e);\n                        }\n                      }}\n                    >\n                      <div className=\"flex items-center\">\n                        {isChordsExpanded ? (\n                          <ChevronDown className=\"h-5 w-5 text-gray-400 mr-2\" aria-hidden=\"true\" />\n                        ) : (\n                          <ChevronRight className=\"h-5 w-5 text-gray-400 mr-2\" aria-hidden=\"true\" />\n                        )}\n                        <h3 className=\"text-xl text-gray-300 flex items-center\" id={`chord-charts-title-${routineItem['A']}`}>\n                          <Music className=\"h-5 w-5 mr-2\" aria-hidden=\"true\" />\n                          Chord charts\n                        </h3>\n                      </div>\n                    </div>\n\n                    {/* Collapsible chord chart content */}\n                    {isChordsExpanded && (\n                      <div\n                        id={`chord-charts-content-${routineItem['A']}`}\n                        className=\"bg-gray-700 rounded-lg p-4 chord-charts-container relative\"\n                        data-item-id={routineItem['B']}\n                        role=\"region\"\n                        aria-labelledby={`chord-charts-title-${routineItem['A']}`}\n                      >\n                        \n                        {/* Display chord sections */}\n                        {(() => {\n                          // Define itemReferenceId at the top level of this scope\n                          const itemReferenceId = routineItem['B'];  // Column B is Item ID\n                          const sectionsFromState = chordSections[itemReferenceId];\n                          const sectionsFromCharts = sectionsFromState ? null : getChordSections(itemReferenceId);\n                          const finalSections = sectionsFromState || sectionsFromCharts || [];\n                          \n                          // Map sections to JSX elements with itemReferenceId in scope\n                          const sections = finalSections.map((section, sectionIndex) => {\n                            return (\n                          <div key={section.id} className=\"mb-6\">\n                            {/* Section header with label and repeat count */}\n                            <div className=\"flex justify-between items-center mb-3\">\n                              {/* Section label (top-left) */}\n                              <input\n                                type=\"text\"\n                                value={section.label}\n                                onChange={(e) => {\n                                  console.log('Updating section label:', section.id, e.target.value);\n                                  updateSectionLocal(itemReferenceId, section.id, { label: e.target.value });\n                                }}\n                                className=\"bg-gray-900 text-white px-2 py-1 rounded text-sm font-semibold border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                                placeholder=\"Section name\"\n                              />\n                              \n                              {/* Repeat count, line break, and section delete */}\n                              <div className=\"flex items-center gap-2\">\n                                <input\n                                  type=\"text\"\n                                  value={section.repeatCount}\n                                  onChange={(e) => updateSectionLocal(itemReferenceId, section.id, { repeatCount: e.target.value })}\n                                  className=\"bg-gray-900 text-white px-2 py-1 rounded text-sm w-6 text-center border border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                                  placeholder=\"x2\"\n                                  maxLength=\"3\"\n                                />\n                                <button\n                                  onClick={() => deleteSection(itemReferenceId, section.id)}\n                                  disabled={deletingSection.size > 0}\n                                  className={`w-5 h-5 rounded-full flex items-center justify-center text-xs font-bold transition-colors ${\n                                    deletingSection.size > 0 \n                                      ? 'bg-gray-500 cursor-not-allowed' \n                                      : 'bg-red-600 hover:bg-red-700 cursor-pointer'\n                                  } text-white`}\n                                  title={deletingSection.size > 0 ? \"Deleting...\" : \"Delete section\"}\n                                >\n                                  {deletingSection.size > 0 ? (\n                                    <Loader2 className=\"h-3 w-3 animate-spin\" />\n                                  ) : (\n                                    '×'\n                                  )}\n                                </button>\n                              </div>\n                            </div>\n\n                            {/* Tuning and capo info - only show on first section */}\n                            {sectionIndex === 0 && (() => {\n                              // Get tuning and capo from first chord in section (they should all be the same)\n                              const firstChord = section.chords[0];\n                              if (!firstChord) return null;\n                              \n                              const tuning = firstChord.tuning || 'EADGBE';\n                              const capo = firstChord.capo || 0;\n                              \n                              return (\n                                <div className=\"text-center text-white font-bold text-sm mb-3\">\n                                  {capo > 0 ? `${tuning} | Capo on ${capo}` : tuning}\n                                </div>\n                              );\n                            })()}\n\n                            {/* Chord grid for this section */}\n                            {section.chords.length > 0 && (\n                              <div className=\"space-y-2\">\n                                {(() => {\n                                  // Group chords by line breaks\n                                  const chordRows = [];\n                                  let currentRow = [];\n                                  \n                                  section.chords.forEach((chart, index) => {\n                                    currentRow.push(chart);\n                                    \n                                    // Start new row if:\n                                    // 1. This chord has a line break after it\n                                    // 2. We've reached 5 chords\n                                    // 3. This is the last chord\n                                    if (chart.hasLineBreakAfter || currentRow.length >= 5 || index === section.chords.length - 1) {\n                                      chordRows.push([...currentRow]);\n                                      currentRow = [];\n                                    }\n                                  });\n                                  \n                                  return chordRows.map((row, rowIndex) => (\n                                    <div\n                                      key={rowIndex}\n                                      className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-2\"\n                                    >\n                                      {row.map(chart => (\n                                        <MemoizedChordChart\n                                          key={chart.id}\n                                          chart={chart}\n                                          onEdit={(chordId, chartData) => handleEditChordChart(itemReferenceId, chordId, chartData)}\n                                          onDelete={(chordId) => handleDeleteChordChart(itemReferenceId, chordId)}\n                                          onInsertAfter={(chordId, chartData) => handleInsertChordAfter(itemReferenceId, chordId, chartData)}\n                                        />\n                                      ))}\n                                    </div>\n                                  ));\n                                })()}\n                              </div>\n                            )}\n                          </div>\n                          );\n                          });\n\n                          // Return the complete chord chart content including buttons and editor\n                          return (\n                            <>\n                              {sections}\n                              \n                              {/* Add new section button */}\n                              {/* Toggle for chord editor */}\n                              {/* Print button - floating above Add New Chord - only show if chord charts exist */}\n                              {(() => {\n                                const existingCharts = chordCharts[itemReferenceId] || [];\n                                if (existingCharts.length > 0) {\n                                  return (\n                                    <div className=\"flex justify-end mb-2\">\n                                      <Button\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        onClick={(e) => {\n                                          e.stopPropagation();\n                                          handlePrintChords(itemReferenceId);\n                                        }}\n                                        className=\"p-2 border-gray-600 text-gray-400 hover:text-gray-200 hover:bg-gray-600\"\n                                        title=\"Print chord charts\"\n                                      >\n                                        <Printer className=\"h-4 w-4\" />\n                                      </Button>\n                                    </div>\n                                  );\n                                }\n                                return null;\n                              })()}\n\n                              {/* Autocreate from files - collapsible section */}\n                              {(() => {\n                                const existingCharts = chordCharts[itemReferenceId] || [];\n                                const progress = autocreateProgress[itemReferenceId];\n                                const zoneExpanded = showAutocreateZone[itemReferenceId];\n                                \n                                if (existingCharts.length === 0) {\n                                  // No existing charts - show expandable autocreate\n                                  return (\n                                    <div className=\"mb-4\">\n                                      {zoneExpanded ? (\n                                        <Button\n                                          onClick={() => setShowAutocreateZone(prev => ({\n                                            ...prev,\n                                            [itemReferenceId]: false\n                                          }))}\n                                          variant=\"ghost\"\n                                          size=\"sm\"\n                                          className=\"text-gray-400 hover:text-gray-300 mb-2\"\n                                          title=\"Collapse autocreate section\"\n                                        >\n                                          ←\n                                        </Button>\n                                      ) : (\n                                        <div className=\"flex justify-center\">\n                                          <Button\n                                            onClick={() => setShowAutocreateZone(prev => ({\n                                              ...prev,\n                                              [itemReferenceId]: true\n                                            }))}\n                                            className=\"max-w-md bg-gray-700 text-gray-300 hover:bg-gray-600 mb-2 flex items-center justify-center\"\n                                          >\n                                            <Upload className=\"h-4 w-4 mr-2\" />\n                                            Autocreate chord charts\n                                          </Button>\n                                        </div>\n                                      )}\n                                      \n                                      {zoneExpanded && (\n                                        <div className=\"border border-gray-600/30 rounded-lg p-4 bg-gray-800/10\">\n                                          <div className=\"text-sm text-gray-400 mb-6\">\n                                            <p>• Upload lyrics with chord names to create charts</p>\n                                            <p>• Upload chord diagrams to import existing charts</p>\n                                          </div>\n                                          \n                                          {!progress && (\n                                            <>\n                                              {/* Three-column layout for larger screens, stacked on mobile */}\n                                              <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6 items-start\">\n\n                                                {/* Column 1: File Upload */}\n                                                <div className=\"flex flex-col\">\n                                                  <div className=\"text-center mb-2\">\n                                                    <p className=\"text-gray-400 text-sm font-medium\">Upload files</p>\n                                                  </div>\n                                                  <div\n                                                    className={`flex-1 p-4 border-2 border-dashed rounded-lg transition-colors cursor-pointer ${\n                                                      isDragActive[itemReferenceId]\n                                                        ? 'border-gray-500 bg-gray-800/20'\n                                                        : 'border-gray-600 hover:border-gray-500 bg-gray-800/10'\n                                                    }`}\n                                                    onDragOver={(e) => {\n                                                      e.preventDefault();\n                                                      setIsDragActive(prev => {\n                                                        if (prev[itemReferenceId] !== true) {\n                                                          return { ...prev, [itemReferenceId]: true };\n                                                        }\n                                                        return prev;\n                                                      });\n                                                    }}\n                                                    onDragLeave={(e) => {\n                                                      e.preventDefault();\n                                                      setIsDragActive(prev => {\n                                                        if (prev[itemReferenceId] !== false) {\n                                                          return { ...prev, [itemReferenceId]: false };\n                                                        }\n                                                        return prev;\n                                                      });\n                                                    }}\n                                                    onDrop={(e) => {\n                                                      e.preventDefault();\n                                                      setIsDragActive(prev => ({ ...prev, [itemReferenceId]: false }));\n                                                      handleSingleFileDrop(itemReferenceId, e.dataTransfer.files);\n                                                    }}\n                                                    onClick={() => {\n                                                      const input = document.createElement('input');\n                                                      input.type = 'file';\n                                                      input.multiple = true;\n                                                      input.accept = '.pdf,.png,.jpg,.jpeg';\n                                                      input.onchange = (e) => handleSingleFileDrop(itemReferenceId, e.target.files);\n                                                      input.click();\n                                                    }}\n                                                  >\n                                                    <div className=\"text-center\">\n                                                      <Upload className={`h-12 w-12 mx-auto mb-2 ${\n                                                        uploadedFiles[itemReferenceId] && uploadedFiles[itemReferenceId].length > 0 ? 'text-gray-300' : 'text-gray-400'\n                                                      }`} />\n                                                      <p className={`text-sm font-medium mb-2 ${\n                                                        uploadedFiles[itemReferenceId] && uploadedFiles[itemReferenceId].length > 0 ? 'text-gray-200' : 'text-gray-300'\n                                                      }`}>Drop files or click</p>\n                                                      <p className=\"text-gray-400 text-xs mb-2\">\n                                                        PDFs, images • 5mb max\n                                                      </p>\n                                                      {uploadedFiles[itemReferenceId] && uploadedFiles[itemReferenceId].length > 0 ? (\n                                                        <div>\n                                                          <p className=\"text-gray-300 text-xs font-medium mb-1\">\n                                                            {uploadedFiles[itemReferenceId].length} file(s)\n                                                          </p>\n                                                        </div>\n                                                      ) : (\n                                                        <p className=\"text-gray-400 text-xs\">\n                                                          Lyrics or chord charts\n                                                        </p>\n                                                      )}\n                                                    </div>\n                                                  </div>\n                                                </div>\n\n                                                {/* Column 2: YouTube URL */}\n                                                <div className=\"flex flex-col\">\n                                                  <div className=\"text-center mb-2\">\n                                                    <p className=\"text-gray-400 text-sm font-medium\">YouTube guitar lesson</p>\n                                                  </div>\n                                                  <div className=\"flex-1 flex flex-col justify-center\">\n                                                    <input\n                                                      type=\"url\"\n                                                      placeholder=\"YouTube guitar lesson URL (transcript required)\"\n                                                      value={youtubeUrls[itemReferenceId] || ''}\n                                                      onChange={(e) => {\n                                                        const sanitizedValue = e.target.value.replace(/[<>\"']/g, '');\n                                                        setYoutubeUrls(prev => ({\n                                                          ...prev,\n                                                          [itemReferenceId]: sanitizedValue\n                                                        }));\n                                                      }}\n                                                      maxLength={500}\n                                                      className=\"w-full p-3 bg-gray-700 text-white rounded border-2 border-gray-600 focus:border-gray-500 text-sm\"\n                                                    />\n                                                  </div>\n                                                </div>\n\n                                                {/* Column 3: Manual Chord Input */}\n                                                <div className=\"flex flex-col\">\n                                                  <div className=\"text-center mb-2\">\n                                                    <p className=\"text-gray-400 text-sm font-medium\">Manual entry</p>\n                                                  </div>\n                                                  <div className=\"flex-1 flex flex-col justify-center relative\">\n                                                    <textarea\n                                                      placeholder=\"Enter song section names and chord names, like this:&#10;Intro&#10;Am7 Em/A E7sus&#10;Verse&#10;C G/B Am (space or comma-separated)\"\n                                                      value={manualChordInput[itemReferenceId] || ''}\n                                                      onChange={(e) => {\n                                                        const value = e.target.value;\n                                                        if (value.length <= 500) {\n                                                          setManualChordInput(prev => ({\n                                                            ...prev,\n                                                            [itemReferenceId]: value\n                                                          }));\n                                                          // Validate on change\n                                                          validateManualChordInput(value, itemReferenceId);\n                                                        }\n                                                      }}\n                                                      maxLength={500}\n                                                      className={`w-full p-3 text-white rounded border-2 focus:border-gray-500 text-sm resize-none min-h-[160px] ${\n                                                        manualInputErrors[itemReferenceId] ? 'bg-red-900/20 border-red-500' : 'bg-gray-700 border-gray-600'\n                                                      }`}\n                                                    />\n                                                    {/* Character counter */}\n                                                    <div className=\"absolute bottom-1 right-2 text-xs text-gray-400\">\n                                                      {(manualChordInput[itemReferenceId] || '').length}/500\n                                                    </div>\n                                                    {/* Error message */}\n                                                    {manualInputErrors[itemReferenceId] && (\n                                                      <div className=\"mt-1 text-xs text-red-400\">\n                                                        {manualInputErrors[itemReferenceId]}\n                                                      </div>\n                                                    )}\n                                                  </div>\n                                                </div>\n\n                                              </div>\n\n                                          {/* Process Button */}\n                                          <div className=\"flex justify-center\">\n                                            <Button\n                                              onClick={() => handleProcessFiles(itemReferenceId)}\n                                              disabled={progress || (\n                                                // Must have exactly one input method\n                                                (uploadedFiles[itemReferenceId] || []).length === 0 && !youtubeUrls[itemReferenceId]?.trim() && !manualChordInput[itemReferenceId]?.trim() ||\n                                                ((uploadedFiles[itemReferenceId] || []).length > 0 ? 1 : 0) + (youtubeUrls[itemReferenceId]?.trim() ? 1 : 0) + (manualChordInput[itemReferenceId]?.trim() ? 1 : 0) > 1\n                                              )}\n                                              className=\"px-6\"\n                                            >\n                                              <Wand className=\"h-4 w-4 mr-2\" />\n                                              Create chord charts\n                                            </Button>\n                                          </div>\n                                            </>\n                                          )}\n\n                                          {/* Progress/Status Display */}\n                                          <div\n                                            className=\"w-full p-6 border-2 border-dashed rounded-lg mt-4 bg-gray-800/10 border-gray-600/50\"\n                                          >\n                                            <div className=\"text-center\">\n                                              {progress === 'checking_transcripts' && (\n                                                <div className=\"space-y-3\">\n                                                  <div className=\"flex items-center justify-center space-x-2\">\n                                                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-yellow-500\"></div>\n                                                    <span className=\"text-yellow-400\">Checking for transcripts...</span>\n                                                  </div>\n                                                  <br />\n                                                  <Button\n                                                    variant=\"outline\"\n                                                    size=\"sm\"\n                                                    onClick={() => handleShowCancelConfirmation(itemReferenceId)}\n                                                    className=\"text-gray-400 hover:text-gray-200 border-gray-600\"\n                                                  >\n                                                    <X className=\"h-3 w-3 mr-1\" />\n                                                    Cancel\n                                                  </Button>\n                                                </div>\n                                              )}\n                                              {progress === 'reading_transcript' && (\n                                                <div className=\"space-y-3\">\n                                                  <div className=\"flex items-center justify-center space-x-2\">\n                                                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-gray-500\"></div>\n                                                    <span className=\"text-gray-400\">Reading transcript...</span>\n                                                  </div>\n                                                  <br />\n                                                  <Button\n                                                    variant=\"outline\"\n                                                    size=\"sm\"\n                                                    onClick={() => handleShowCancelConfirmation(itemReferenceId)}\n                                                    className=\"text-gray-400 hover:text-gray-200 border-gray-600\"\n                                                  >\n                                                    <X className=\"h-3 w-3 mr-1\" />\n                                                    Cancel\n                                                  </Button>\n                                                </div>\n                                              )}\n                                              {progress === 'uploading' && (\n                                                <div className=\"space-y-3\" role=\"status\" aria-live=\"polite\">\n                                                  <div className=\"flex items-center justify-center space-x-2\">\n                                                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-gray-500\" aria-hidden=\"true\"></div>\n                                                    <span className=\"text-gray-400\">Uploading files...</span>\n                                                  </div>\n                                                  <br />\n                                                  <Button\n                                                    variant=\"outline\"\n                                                    size=\"sm\"\n                                                    onClick={() => handleShowCancelConfirmation(itemReferenceId)}\n                                                    className=\"text-gray-400 hover:text-gray-200 border-gray-600\"\n                                                  >\n                                                    <X className=\"h-3 w-3 mr-1\" />\n                                                    Cancel\n                                                  </Button>\n                                                </div>\n                                              )}\n                                              {progress === 'processing_transcript' && (\n                                                <div className=\"space-y-3\" role=\"status\" aria-live=\"polite\">\n                                                  <div className=\"flex items-center justify-center space-x-2\">\n                                                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-purple-500\" aria-hidden=\"true\"></div>\n                                                    <span className=\"text-white\">Processing transcript...</span>\n                                                  </div>\n                                                  <br />\n                                                  <Button\n                                                    variant=\"outline\"\n                                                    size=\"sm\"\n                                                    onClick={() => handleShowCancelConfirmation(itemReferenceId)}\n                                                    className=\"text-gray-400 hover:text-gray-200 border-gray-600\"\n                                                  >\n                                                    <X className=\"h-3 w-3 mr-1\" />\n                                                    Cancel\n                                                  </Button>\n                                                </div>\n                                              )}\n                                              {progress === 'processing' && (\n                                                <div className=\"space-y-3\" role=\"status\" aria-live=\"polite\">\n                                                  {notificationConfirmMessage === itemReferenceId ? (\n                                                    <div className=\"text-center space-y-3\">\n                                                      <div className=\"text-green-400 text-sm\">\n                                                        ✅ Got it, you can go do stuff in other tabs, we'll notify you when the charts are ready\n                                                      </div>\n                                                    </div>\n                                                  ) : (\n                                                    <div className=\"flex items-center justify-center space-x-2\">\n                                                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-purple-500\" aria-hidden=\"true\"></div>\n                                                      <div className=\"flex items-center\">\n                                                        <span className=\"text-white\">{processingMessages[processingMessageIndex]}</span>\n                                                        <div className=\"ml-2 animate-spin\" aria-hidden=\"true\">⚙️</div>\n                                                      </div>\n                                                    </div>\n                                                  )}\n                                                  <br />\n                                                  <div className=\"flex gap-2 justify-center\">\n                                                    {!notifyOnCompleteRef.current[itemReferenceId] && !notificationConfirmMessage && (\n                                                      <Button\n                                                        variant=\"outline\"\n                                                        size=\"sm\"\n                                                        onClick={() => handleNotifyRequest(itemReferenceId)}\n                                                        className=\"text-blue-400 hover:text-blue-300 border-blue-600\"\n                                                      >\n                                                        🔔 Notify me when ready\n                                                      </Button>\n                                                    )}\n                                                    <Button\n                                                      variant=\"outline\"\n                                                      size=\"sm\"\n                                                      onClick={() => handleShowCancelConfirmation(itemReferenceId)}\n                                                      className=\"text-gray-400 hover:text-gray-200 border-gray-600\"\n                                                    >\n                                                      <X className=\"h-3 w-3 mr-1\" />\n                                                      Cancel\n                                                    </Button>\n                                                  </div>\n                                                </div>\n                                              )}\n                                              {progress === 'complete' && (\n                                                <div className=\"flex items-center justify-center space-x-2\">\n                                                  <Check className=\"h-4 w-4 text-green-500\" />\n                                                  <span className=\"text-green-400\">Chord charts created!</span>\n                                                </div>\n                                              )}\n                                              {progress === 'error' && (\n                                                <div className=\"flex items-center justify-center space-x-2\">\n                                                  <AlertTriangle className=\"h-4 w-4 text-red-500\" />\n                                                  <span className=\"text-red-400\">Error processing files. Please try again.</span>\n                                                </div>\n                                              )}\n                                              {!progress && (\n                                                <>\n                                                  {chordCharts[itemReferenceId] && chordCharts[itemReferenceId].length > 0 ? (\n                                                    <>\n                                                      <AlertTriangle className=\"h-8 w-8 text-orange-400 mx-auto mb-2\" />\n                                                      <p className=\"text-orange-300 font-medium mb-1\">Chord charts already exist</p>\n                                                      <p className=\"text-gray-400 text-sm\">\n                                                        Please delete all chord charts from this song before using autocreate\n                                                      </p>\n                                                    </>\n                                                  ) : (\n                                                    <>\n                                                      {(() => {\n                                                        const hasFiles = (uploadedFiles[itemReferenceId] || []).length > 0;\n                                                        \n                                                        if (hasFiles) {\n                                                          return (\n                                                            <>\n                                                              <Sparkles className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\n                                                              <p className=\"text-gray-300 font-medium mb-1\">Ready to create chord charts</p>\n                                                              <p className=\"text-gray-400 text-sm\">\n                                                                Click 'Create chord charts'\n                                                              </p>\n                                                            </>\n                                                          );\n                                                        } else {\n                                                          return (\n                                                            <>\n                                                              <Sparkles className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\n                                                              <p className=\"text-gray-300 font-medium mb-1\">Add a file above, then click 'Create Chord Charts'</p>\n                                                              <p className=\"text-gray-400 text-xs\">(The results will probably contain errors, use the ✏️edit icon to make any corrections needed.)</p>\n                                                            </>\n                                                          );\n                                                        }\n                                                      })()}\n                                                    </>\n                                                  )}\n                                                </>\n                                              )}\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  );\n                                } else {\n                                  // Has existing charts - show replace option\n                                  return (\n                                    <div className=\"mb-4 flex justify-center\">\n                                      <Button\n                                        variant=\"outline\"\n                                        onClick={() => handleAutocreateClick(itemReferenceId)}\n                                        className=\"max-w-md text-orange-300 hover:bg-orange-800 hover:border-orange-600\"\n                                      >\n                                        <Upload className=\"h-4 w-4 mr-2\" />\n                                        Replace with autocreated charts\n                                      </Button>\n                                    </div>\n                                  );\n                                }\n                              })()}\n\n                              <div className=\"mb-4 flex justify-center\">\n                                <Button\n                                  variant=\"default\"\n                                  onClick={() => {\n                                    setScrollBackContext({\n                                      itemId: itemReferenceId,\n                                      scrollPosition: window.scrollY\n                                    });\n                                    setShowChordEditor(prev => ({ ...prev, [itemReferenceId]: true }));\n                                    setTimeout(() => {\n                                      const editorElement = document.querySelector(`[data-editor-for-item=\"${itemReferenceId}\"]`);\n                                      if (editorElement) {\n                                        editorElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\n                                      }\n                                    }, 100);\n                                  }}\n                                  className=\"min-w-48\"\n                                >\n                                  + Add new chord\n                                </Button>\n                              </div>\n\n                              <div className=\"mb-4 flex justify-center\">\n                                <Button\n                                  variant=\"default\"\n                                  onClick={() => addNewSection(itemReferenceId)}\n                                  className=\"min-w-48\"\n                                >\n                                  + Add new section\n                                </Button>\n                              </div>\n\n                              {/* Copy buttons - responsive: side-by-side on desktop, stacked on mobile */}\n                              <div className=\"flex flex-col sm:flex-row gap-2 mb-4 max-w-2xl mx-auto\">\n                                <Button\n                                  variant=\"default\"\n                                  onClick={() => handleOpenCopyFromModal(itemReferenceId)}\n                                  className=\"flex-1\"\n                                >\n                                  Copy chord charts from other song\n                                </Button>\n                                <Button\n                                  variant=\"default\"\n                                  onClick={() => handleOpenCopyModal(itemReferenceId)}\n                                  disabled={!chordCharts[itemReferenceId] || chordCharts[itemReferenceId].length === 0}\n                                  className=\"flex-1 bg-purple-700 text-purple-300 hover:bg-purple-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n                                >\n                                  Copy chord charts to other song\n                                </Button>\n                              </div>\n\n                              {/* Chord editor */}\n                              {showChordEditor[itemReferenceId] && (\n                                <div data-editor-for-item={itemReferenceId}>\n                                  <ChordChartEditor\n                                  itemId={itemReferenceId}\n                                  defaultTuning={itemDetails?.H || 'EADGBE'}\n                                  editingChordId={editingChordId}\n                                  insertionContext={insertionContext}\n                                  onSave={(chartData) => handleSaveChordChart(itemReferenceId, chartData)}\n                                  onCancel={() => {\n                                    setShowChordEditor(prev => ({ ...prev, [itemReferenceId]: false }));\n                                    setEditingChordId(null);\n                                    setInsertionContext(null);\n\n                                    // Scroll back to the original chord chart location\n                                    scrollBackToChord();\n                                  }}\n                                />\n                                </div>\n                              )}\n                            </>\n                          );\n                        })()}\n                      </div>\n                    )}\n\n                    {/* Notes toggle */}\n                    <div\n                      className=\"flex items-center justify-between p-2 hover:bg-gray-700 rounded cursor-pointer\"\n                      onClick={(e) => toggleNotes(routineItem['A'], e)}  // Column A is ID\n                      role=\"button\"\n                      aria-expanded={isNotesExpanded}\n                      aria-controls={`notes-content-${routineItem['A']}`}\n                      tabIndex={0}\n                      onKeyDown={(e) => {\n                        if (e.key === 'Enter' || e.key === ' ') {\n                          e.preventDefault();\n                          toggleNotes(routineItem['A'], e);\n                        }\n                      }}\n                    >\n                      <div className=\"flex items-center\">\n                        {isNotesExpanded ? (\n                          <ChevronDown className=\"h-5 w-5 text-gray-400 mr-2\" aria-hidden=\"true\" />\n                        ) : (\n                          <ChevronRight className=\"h-5 w-5 text-gray-400 mr-2\" aria-hidden=\"true\" />\n                        )}\n                        <h3 className=\"text-xl text-gray-300 flex items-center\" id={`notes-title-${routineItem['A']}`}>\n                          <FileText className=\"h-5 w-5 mr-2\" aria-hidden=\"true\" />\n                          Notes\n                        </h3>\n                      </div>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        className=\"text-gray-300\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          addNote(routineItem['B'], e);  // Column B is Item ID\n                        }}\n                      >\n                        <Plus className=\"h-4 w-4 mr-2\" aria-hidden=\"true\" />\n                        {itemNotes ? 'Edit note' : 'Add note'}\n                      </Button>\n                    </div>\n\n                    {/* Collapsible notes content */}\n                    {isNotesExpanded && itemNotes && (\n                      <div\n                        id={`notes-content-${routineItem['A']}`}\n                        className=\"px-4\"\n                        role=\"region\"\n                        aria-labelledby={`notes-title-${routineItem['A']}`}\n                      >\n                        <div className=\"bg-gray-700 p-3 rounded\">\n                          <p className=\"text-gray-300 whitespace-pre-wrap\">{itemNotes}</p>\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Tuning and Songbook section */}\n                    <div className=\"mt-4\">\n                      <div className=\"flex items-center justify-between\">\n                        {/* Songbook folder link - only show on desktop platforms */}\n                        {itemDetails?.['F'] && supportsFolderOpening() && (\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n\n                              // Track songbook link click\n                              const itemName = itemDetails?.['C'] || `Item ${routineItem['A']}`;\n                              trackSongbookLinkClick(itemName, itemDetails['F']);\n\n                              fetch('/api/open-folder', {\n                                method: 'POST',\n                                headers: {\n                                  'Content-Type': 'application/json',\n                                },\n                                body: JSON.stringify({ path: itemDetails['F'] })\n                              }).catch(err => console.error('Error opening folder:', err));\n                            }}\n                            className=\"text-gray-400 hover:text-gray-300 hover:underline flex items-center\"\n                          >\n                            <Book className=\"h-4 w-4 mr-2\" />\n                            Open Songbook Folder\n                          </button>\n                        )}\n                        {/* Tuning */}\n                        {itemDetails?.['H'] && (\n                          <span className=\"text-sm font-mono font-bold text-gray-400\">\n                            {itemDetails['H']}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              {expandedItems.has(routineItem['A']) && (\n                <div\n                  id={`practice-item-content-${routineItem['A']}`}\n                  className=\"px-5 pb-5\"\n                  role=\"region\"\n                  aria-labelledby={`practice-item-title-${routineItem['A']}`}\n                >\n                  <div className=\"text-gray-400\">\n                  </div>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Add NoteEditor */}\n      <NoteEditor\n        open={isNoteEditorOpen}\n        onOpenChange={setIsNoteEditorOpen}\n        itemId={editingNoteItemId}\n        currentNote={editingNoteItemId ? notes[editingNoteItemId] : ''}\n        onNoteSave={handleNoteSave}\n      />\n\n      {/* Copy Chord Charts Modal */}\n      {showCopyModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div\n            className={`bg-gray-700 rounded-lg p-6 ${showOverwriteConfirmation || copyProgress === 'complete' ? 'max-w-xs' : 'w-full max-w-md'} max-h-[80vh] flex flex-col`}\n            onWheel={(e) => e.stopPropagation()}\n          >\n            {copyProgress === 'complete' ? (\n              <>\n                <h2 className=\"text-xl font-bold text-white mb-4\">\n                  Success!\n                </h2>\n                <div className=\"flex items-center justify-center space-x-2 mb-4\">\n                  <Check className=\"h-6 w-6 text-green-500\" />\n                  <span className=\"text-green-400 text-lg\">Chord charts copied successfully!</span>\n                </div>\n                <Button\n                  onClick={handleCloseCopyModal}\n                  className=\"w-full bg-green-600 hover:bg-green-700\"\n                >\n                  Done\n                </Button>\n              </>\n            ) : !showOverwriteConfirmation ? (\n              <>\n                <h2 className=\"text-xl font-bold text-white mb-4\">\n                  Copy chord charts\n                </h2>\n                \n                <p className=\"text-gray-300 mb-2\">\n                  Copy chord charts from \"{allItems?.find(item => item['B'] === copySourceItemId)?.['C'] || 'Unknown Song'}\" to:\n                </p>\n                \n\n                {/* Search field */}\n                <input\n                  type=\"text\"\n                  placeholder=\"Search songs...\"\n                  value={copySearchTerm}\n                  onChange={(e) => setCopySearchTerm(e.target.value)}\n                  className=\"w-full p-2 mb-4 bg-gray-700 text-white rounded border border-gray-600 focus:border-purple-500\"\n                />\n\n                {/* Scrollable song list */}\n                <div className=\"flex-1 overflow-y-auto mb-4 min-h-0 modal-scroll\">\n                  {sortedAndFilteredItems.map(item => (\n                      <div key={item['A']} className=\"flex items-center mb-2\">\n                        <input\n                          type=\"checkbox\"\n                          id={`copy-item-${item['A']}`}\n                          checked={selectedTargetItems.has(item['A'])}\n                          onChange={() => handleToggleTargetItem(item['A'])}\n                          className=\"mr-3\"\n                        />\n                        <label \n                          htmlFor={`copy-item-${item['A']}`}\n                          className=\"text-white cursor-pointer flex-1 flex items-center\"\n                        >\n                          <span>{item['C'] || 'Untitled'}</span>\n                          {itemsWithExistingCharts.has(item['A']) && (\n                            <span className=\"text-yellow-400 ml-2 text-sm\"> ⚠️will overwrite</span>\n                          )}\n                        </label>\n                      </div>\n                    ))}\n                </div>\n\n                {/* Modal buttons */}\n                <div className=\"flex gap-2\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={handleCloseCopyModal}\n                    className=\"flex-1\"\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={handleConfirmCopy}\n                    disabled={selectedTargetItems.size === 0}\n                    style={selectedTargetItems.size === 0 ? {\n                      backgroundColor: '#4b5563',\n                      color: '#d1d5db',\n                      opacity: '1'\n                    } : itemsWithExistingCharts.size > 0 ? {\n                      backgroundColor: '#dc2626',\n                      color: '#ffffff',\n                      opacity: '1'\n                    } : {\n                      backgroundColor: '#5b1f1f',\n                      color: '#ffffff',\n                      opacity: '1'\n                    }}\n                    className=\"flex-1 bg-purple-600 hover:bg-purple-700 disabled:cursor-not-allowed\"\n                  >\n                    {itemsWithExistingCharts.size > 0 \n                      ? `Copy and Overwrite ${selectedTargetItems.size} song${selectedTargetItems.size !== 1 ? 's' : ''}`\n                      : `Copy to ${selectedTargetItems.size} song${selectedTargetItems.size !== 1 ? 's' : ''}`\n                    }\n                  </Button>\n                </div>\n              </>\n            ) : (\n              <>\n                <h3 className=\"text-lg font-semibold text-white mb-4\">\n                  Confirm Overwrite\n                </h3>\n                <p className=\"text-gray-300 mb-4\">\n                  {itemsWithExistingCharts.size} of the selected songs already have chord charts. \n                  Copying will replace all existing chord charts in those songs.\n                </p>\n                \n                {/* List of songs being overwritten */}\n                <div className=\"bg-gray-600 rounded p-3 mb-4\">\n                  <p className=\"text-sm text-gray-200 mb-2 font-medium\">Songs that will be overwritten:</p>\n                  <ul className=\"text-sm text-gray-300 space-y-1\">\n                    {sortedAndFilteredItems\n                      .filter(item => selectedTargetItems.has(item['A']) && itemsWithExistingCharts.has(item['A']))\n                      .map(item => (\n                        <li key={item['A']} className=\"flex items-center\">\n                          <span className=\"text-yellow-400 mr-2\">•</span>\n                          {item['C'] || 'Unknown Song'}\n                        </li>\n                      ))}\n                  </ul>\n                </div>\n                \n                <p className=\"text-sm text-gray-400 mb-6\">\n                  This action cannot be undone.\n                </p>\n                <div className=\"flex gap-2\">\n                  <Button \n                    variant=\"outline\" \n                    onClick={handleOverwriteCancelled} \n                    className=\"flex-1\"\n                  >\n                    Go Back\n                  </Button>\n                  <Button \n                    onClick={handleOverwriteConfirmed} \n                    className=\"flex-1 bg-red-600 hover:bg-red-700\"\n                  >\n                    Yes, Overwrite\n                  </Button>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Copy From Other Song Modal */}\n      {showCopyFromModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div\n            className=\"bg-gray-700 rounded-lg p-6 w-full max-w-md max-h-[80vh] flex flex-col\"\n            onWheel={(e) => e.stopPropagation()}\n          >\n            <h2 className=\"text-xl font-bold text-white mb-4\">\n              Copy chord charts from other song\n            </h2>\n\n            <p className=\"text-gray-300 mb-2\">\n              Copy chord charts to \"{allItems?.find(item => item['B'] === copyFromTargetItemId)?.['C'] || 'Unknown Song'}\" from:\n            </p>\n\n            {/* Search field */}\n            <input\n              type=\"text\"\n              placeholder=\"Search songs with chord charts...\"\n              value={copyFromSearchTerm}\n              onChange={(e) => setCopyFromSearchTerm(e.target.value)}\n              className=\"w-full p-2 mb-4 bg-gray-700 text-white rounded border border-gray-600 focus:border-blue-500\"\n            />\n\n            {/* Scrollable song list - only items with chord charts */}\n            <div className=\"flex-1 overflow-y-auto mb-4 min-h-0 modal-scroll\">\n              {copyFromItemsWithCharts.map(item => (\n                <div key={item['A']} className=\"flex items-center mb-2\">\n                  <input\n                    type=\"radio\"\n                    id={`copy-from-item-${item['A']}`}\n                    name=\"copyFromSource\"\n                    checked={selectedSourceItem === item['B']}\n                    onChange={() => setSelectedSourceItem(item['B'])}\n                    className=\"mr-3\"\n                  />\n                  <label\n                    htmlFor={`copy-from-item-${item['A']}`}\n                    className=\"flex-1 cursor-pointer text-white hover:text-gray-300\"\n                  >\n                    {item['C'] || 'Unknown Song'}\n                    <span className=\"text-xs text-gray-400 ml-2\">\n                      ({allItemChordCounts[item['B']] || 0} charts)\n                    </span>\n                  </label>\n                </div>\n              ))}\n            </div>\n\n            {/* Action buttons */}\n            <div className=\"flex gap-2\">\n              <Button\n                variant=\"outline\"\n                onClick={handleCloseCopyFromModal}\n                className=\"flex-1\"\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleConfirmCopyFrom}\n                disabled={!selectedSourceItem}\n                className=\"flex-1 bg-blue-600 hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Copy chord charts\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Delete Existing Chord Charts Modal */}\n      <AlertDialog open={showDeleteChordsModal} onOpenChange={setShowDeleteChordsModal}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle className=\"flex items-center space-x-2\">\n              <AlertTriangle className=\"h-5 w-5 text-orange-500\" />\n              <span>Replace existing chord charts</span>\n            </AlertDialogTitle>\n            <AlertDialogDescription>\n              This song already has chord charts. To use autocreate, all existing chord charts must be deleted first. \n              This action cannot be undone.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel onClick={() => {\n              setShowDeleteChordsModal(false);\n              setDeleteModalItemId(null);\n            }}>\n              Cancel\n            </AlertDialogCancel>\n            <AlertDialogAction\n              onClick={handleDeleteExistingCharts}\n              className=\"bg-orange-500 hover:bg-orange-600 text-white border-orange-500 shadow-lg font-medium\"\n            >\n              Delete all & autocreate\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      {/* Mixed Content Choice Modal */}\n      <AlertDialog open={showMixedContentModal} onOpenChange={setShowMixedContentModal}>\n        <AlertDialogContent className=\"w-80 min-h-[600px]\">\n          <AlertDialogHeader>\n            <AlertDialogTitle className=\"flex items-center space-x-2\">\n              <AlertTriangle className=\"h-5 w-5 text-blue-500\" />\n              <span>Mixed Content Detected</span>\n            </AlertDialogTitle>\n            <AlertDialogDescription>\n              Your file contains both chord names and chord charts. How would you like to process it?\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <div className=\"space-y-4 my-8\">\n            <AlertDialogAction\n              onClick={() => handleMixedContentChoice('chord_names')}\n              className=\"w-full h-auto p-6 flex flex-col items-center bg-slate-700 hover:bg-slate-600 text-white\"\n            >\n              <div className=\"font-medium\">Process Chord Names</div>\n              <div className=\"text-sm text-slate-300 mt-1\">(standard tuning)</div>\n            </AlertDialogAction>\n            <AlertDialogAction\n              onClick={() => handleMixedContentChoice('chord_charts')}\n              className=\"w-full p-4 bg-slate-700 hover:bg-slate-600 text-white\"\n            >\n              Import chord charts\n            </AlertDialogAction>\n          </div>\n          <AlertDialogFooter>\n            <AlertDialogCancel onClick={() => {\n              setShowMixedContentModal(false);\n              setMixedContentData(null);\n            }}>\n              Cancel\n            </AlertDialogCancel>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      {/* Unsupported Format Modal */}\n      <AlertDialog open={showUnsupportedFormatModal} onOpenChange={setShowUnsupportedFormatModal}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle className=\"flex items-center space-x-2\">\n              <AlertTriangle className=\"h-5 w-5 text-red-500\" />\n              <span>{unsupportedFormatData?.title || 'Format Not Supported'}</span>\n            </AlertDialogTitle>\n            <AlertDialogDescription>\n              {unsupportedFormatData?.message || 'Sorry, we can only build chord charts. This file format is not supported.'}\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogAction onClick={() => {\n              setShowUnsupportedFormatModal(false);\n              setUnsupportedFormatData(null);\n            }}>\n              OK\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      {/* Cancel Confirmation Dialog */}\n      <AlertDialog open={showCancelConfirmation} onOpenChange={setShowCancelConfirmation}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Are you sure you wanna do that?</AlertDialogTitle>\n            <AlertDialogDescription>\n              You'll have to wait just as long next time if you start over\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel onClick={handleCancelDialog}>\n              *sigh* Ok, I'll wait...\n            </AlertDialogCancel>\n            <AlertDialogAction onClick={handleConfirmCancel}>\n              Yes, damnit, cancel!\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      {/* API Error Modal */}\n      <ApiErrorModal\n        isOpen={showApiErrorModal}\n        onClose={() => {\n          setShowApiErrorModal(false);\n          setApiError(null);\n        }}\n        error={apiError}\n      />\n\n      {/* Autocreate Success Modal */}\n      <AutocreateSuccessModal\n        isOpen={showAutocreateSuccessModal}\n        onClose={() => {\n          setShowAutocreateSuccessModal(false);\n          setAutocreateSuccessData(null);\n        }}\n        autocreateData={autocreateSuccessData}\n      />\n\n      {/* No Transcript Modal */}\n      {showNoTranscriptModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-gray-700 rounded-lg p-6 w-full max-w-md max-h-[80vh] flex flex-col\">\n            <h2 className=\"text-xl font-bold text-white mb-4\">\n              No Transcripts Available\n            </h2>\n\n            <p className=\"text-gray-300 mb-4\">\n              Oh, drag. This YouTube video doesn't have transcripts on it. So, go find a free tool to generate transcripts from YouTube videos, then copy/paste the transcript below:\n            </p>\n\n            <textarea\n              value={manualTranscript}\n              onChange={(e) => setManualTranscript(e.target.value)}\n              placeholder=\"Paste the transcript here...\"\n              className=\"w-full h-32 p-3 bg-gray-800 text-white rounded border border-gray-600 focus:border-red-500 resize-none mb-4\"\n              maxLength={25000}\n            />\n\n            <p className=\"text-xs text-gray-400 mb-4\">\n              {manualTranscript.length}/25,000 characters\n            </p>\n\n            <div className=\"flex gap-3\">\n              <Button\n                variant=\"outline\"\n                onClick={() => {\n                  setShowNoTranscriptModal(false);\n                  setNoTranscriptData(null);\n                  setManualTranscript('');\n                }}\n                className=\"flex-1 border-gray-600 text-gray-300 hover:bg-gray-600\"\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"outline\"\n                onClick={async () => {\n                  if (!manualTranscript.trim()) {\n                    alert('Please paste a transcript before proceeding.');\n                    return;\n                  }\n\n                  const { itemId } = noTranscriptData;\n                  setShowNoTranscriptModal(false);\n                  setNoTranscriptData(null);\n\n                  await processYouTubeTranscript(itemId, manualTranscript);\n                  setManualTranscript('');\n                }}\n                disabled={!manualTranscript.trim()}\n                className={`flex-1 ${\n                  !manualTranscript.trim()\n                    ? 'border-gray-600 text-gray-500 cursor-not-allowed'\n                    : 'border-gray-600 text-gray-300 hover:bg-gray-700'\n                }`}\n              >\n                <Wand className=\"h-4 w-4 mr-2\" />\n                🪄 Create chord charts\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* No Chord Names Found Modal */}\n      <Dialog open={showNoChordNamesModal} onOpenChange={(open) => !open && setShowNoChordNamesModal(false)}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <AlertTriangle className=\"h-6 w-6 text-orange-500\" />\n              No Chord Names Found\n            </DialogTitle>\n            <DialogDescription className=\"text-left space-y-1\">\n              <p>So, um, we can't find any chord names mentioned in this video. Sorry, we can't create tablature yet, just chord charts.</p>\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"flex justify-end gap-2 -mt-2\">\n            <Button onClick={() => setShowNoChordNamesModal(false)} className=\"min-w-20\">\n              Ok\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}; ","// hooks/useAuth.js\nimport { useState, useEffect, useCallback } from 'react';\n\nexport const useAuth = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [hasSpreadsheetAccess, setHasSpreadsheetAccess] = useState(false);\n  const [checking, setChecking] = useState(true);\n  const [error, setError] = useState(null);\n\n  const checkAuth = useCallback(async () => {\n    try {\n      const response = await fetch('/api/auth/status');\n      if (!response.ok) throw new Error('Auth check failed');\n      const data = await response.json();\n      setIsAuthenticated(data.authenticated);\n      setHasSpreadsheetAccess(data.hasSpreadsheetAccess);\n      setError(null);\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      setIsAuthenticated(false);\n      setHasSpreadsheetAccess(false);\n      setError(error.message);\n    } finally {\n      setChecking(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Check auth status immediately\n    checkAuth();\n    \n    // Set up periodic checks every 15 minutes (Google OAuth tokens last ~1 hour)\n    const interval = setInterval(checkAuth, 15 * 60 * 1000);\n    \n    return () => clearInterval(interval);\n  }, [checkAuth]);\n\n  const handleLogin = () => {\n    window.location.href = '/authorize';\n  };\n\n  const handleLogout = () => {\n    window.location.href = '/logout';\n  };\n\n  return {\n    isAuthenticated,\n    hasSpreadsheetAccess,\n    checking,\n    error,\n    handleLogin,\n    handleLogout,\n    checkAuth\n  };\n};\n","// components/AuthButton.jsx\nimport React from 'react';\nimport { Button } from '@ui/button';\nimport { useAuth } from '@hooks/useAuth';\nimport { Loader2, LogOut } from 'lucide-react';\n\nconst AuthButton = () => {\n  const { isAuthenticated, hasSpreadsheetAccess, checking, error, handleLogin, handleLogout } = useAuth();\n\n  return (\n    <div className=\"ml-auto flex items-center gap-2\">\n      {isAuthenticated && !hasSpreadsheetAccess && (\n        <span className=\"text-sm text-red-400\">Log in with gmail acct instead</span>\n      )}\n      <Button \n        onClick={isAuthenticated ? handleLogout : handleLogin}\n        variant={isAuthenticated ? \"ghost\" : \"default\"}\n        className={isAuthenticated \n          ? \"text-gray-400 hover:text-gray-200\" \n          : \"bg-blue-600 hover:bg-blue-700 text-gray-100\"\n        }\n        disabled={checking}\n      >\n        {checking ? (\n          <>\n            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n            Checking auth...\n          </>\n        ) : error ? (\n          \"Auth Error - Click to retry\"\n        ) : isAuthenticated ? (\n          \"logout\"\n        ) : (\n          <>\n            <LogOut className=\"mr-2 h-4 w-4\" />\n            Let me in\n          </>\n        )}\n      </Button>\n    </div>\n  );\n};\n\nexport default AuthButton;\n\n","// app/static/js/components/NavMenu.jsx\nimport React from 'react';\nimport { Button } from '@ui/button';\nimport { cn } from '@lib/utils';\nimport AuthButton from './AuthButton';\nimport { useNavigation } from '@contexts/NavigationContext';\n\nconst NavMenu = ({ className }) => {\n  const { activePage, setActivePage } = useNavigation();\n  const navItems = ['Practice', 'Routines', 'Items'];\n\n  return (\n    <nav className={cn(\"flex flex-wrap items-center gap-4\", className)} aria-label=\"Main navigation\">\n      <div className=\"flex flex-wrap gap-4\">\n        {navItems.map((item) => (\n          <Button\n            key={item}\n            variant={activePage === item ? \"secondary\" : \"ghost\"}\n            className={cn(\n              \"text-xl py-6 px-8\",\n              activePage === item ? \"bg-secondary hover:bg-secondary/90\" : \"hover:bg-accent\"\n            )}\n            onClick={() => setActivePage(item)}\n            aria-current={activePage === item ? \"page\" : undefined}\n          >\n            {item}\n          </Button>\n        ))}\n      </div>\n      <AuthButton />\n    </nav>\n  );\n};\n\nexport default NavMenu;","// app/static/js/hooks/useRoutineEditor.js\nimport { useState, useEffect, useMemo, useCallback } from 'react';\n\nexport const useRoutineEditor = (routineId = null, initialRoutineDetails = null, availableItems = []) => {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [itemDetails, setItemDetails] = useState({});\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Initialize with provided details or fetch them\n  useEffect(() => {\n    if (initialRoutineDetails?.items) {\n      setSelectedItems(initialRoutineDetails.items);\n      setLoading(false);\n    } else if (routineId) {\n      fetchRoutine();\n    } else {\n      setSelectedItems([]);\n      setLoading(false);\n    }\n  }, [routineId, initialRoutineDetails]);\n\n  const fetchRoutine = async () => {\n    try {\n      const response = await fetch(`/api/routines/${routineId}/details`);\n      if (!response.ok) throw new Error('Failed to fetch routine');\n      const data = await response.json();\n\n      // Sort items by order (column C)\n      const sortedItems = data.items.sort((a, b) => \n        parseInt(a.routineEntry['C']) - parseInt(b.routineEntry['C'])\n      );\n      \n      setSelectedItems(sortedItems);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n      console.error('Fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Filter available items based on search query and exclude selected items\n  const filteredItems = useMemo(() => {\n    // Get Item IDs from routine entries (column B)\n    const selectedItemIds = new Set(selectedItems.map(item => item.itemDetails?.['B'] || item.routineEntry?.['B']));\n    const filtered = availableItems.filter(item => {\n      const isSelected = selectedItemIds.has(item['B']);  // Column B is Item ID\n      // Normalize apostrophes in both search term and title for consistent matching\n      const normalizeApostrophes = (str) => str.replace(/[''`]/g, \"'\");\n      const title = item['C'] || '';\n      const normalizedTitle = normalizeApostrophes(title.toLowerCase());\n      const normalizedSearch = normalizeApostrophes(searchQuery.toLowerCase());\n      const matchesSearch = normalizedTitle.includes(normalizedSearch);  // Column C is Title\n      return !isSelected && matchesSearch;\n    });\n    return filtered;\n  }, [availableItems, selectedItems, searchQuery]);\n\n  const addToRoutine = async (routineId, itemId) => {\n    try {\n      const response = await fetch(`/api/routines/${routineId}/items`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ itemId })\n      });\n\n      if (!response.ok) throw new Error('Failed to add item to routine');\n      \n      // Refresh the routine to get updated items\n      await fetchRoutine();\n      return true;\n    } catch (err) {\n      console.error('Error adding item:', err);\n      return false;\n    }\n  };\n\n  const removeFromRoutine = async (routineId, routineEntryId) => {\n    try {\n      const response = await fetch(`/api/routines/${routineId}/items/${routineEntryId}`, {\n        method: 'DELETE'\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || 'Failed to remove item from routine');\n      }\n      \n      // Update local state immediately for better UX\n      setSelectedItems(prev => prev.filter(item => item.routineEntry['A'] !== routineEntryId));\n      \n      return true;\n    } catch (err) {\n      console.error('Error removing item:', err);\n      return false;\n    }\n  };\n\n  const updateRoutineOrder = async (routineId, items) => {\n    try {\n\n      // Extract only the routine entry data for reordering\n      const routineEntries = items.map(item => ({\n        'A': item['A'],           // Routine entry ID\n        'C': item['C']           // Order in routine\n      }));\n\n\n      const url = `/api/routines/${routineId}/order`;\n\n      const response = await fetch(url, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(routineEntries)\n      });\n\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('Order update failed:', errorData);\n        throw new Error(errorData.message || 'Failed to update routine order');\n      }\n\n\n      // Refresh the routine to get updated items from server\n      await fetchRoutine();\n\n      return true;\n    } catch (err) {\n      console.error('Error updating routine order:', err);\n      return false;\n    }\n  };\n\n  return {\n    availableItems: filteredItems,\n    selectedItems,\n    setSelectedItems,\n    searchQuery,\n    setSearchQuery,\n    loading,\n    error,\n    addToRoutine,\n    removeFromRoutine,\n    updateRoutineOrder,\n  };\n};","// app/static/js/components/RoutineEditor.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useRoutineEditor } from '@hooks/useRoutineEditor';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Card, CardHeader, CardTitle, CardContent } from '@ui/card';\nimport { Button } from '@ui/button';\nimport { Input } from '@ui/input';\nimport { Search, Plus, GripVertical, X } from 'lucide-react';\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  useSortable,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\n\n// Available item in the search list\nconst AvailableItem = React.memo(({ item, onAdd }) => (\n  <div className=\"flex items-center justify-between p-4 bg-gray-800 rounded-lg\">\n    <span className=\"text-lg\">{item['C']}</span>\n    <Button\n      variant=\"ghost\"\n      size=\"sm\"\n      onClick={() => onAdd(item)}\n      className=\"text-blue-500 hover:text-blue-400\"\n    >\n      <Plus className=\"h-4 w-4\" />\n    </Button>\n  </div>\n));\n\n// Sortable item component for selected items\nconst SortableRoutineItem = React.memo(({ item, onRemove }) => {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: item.routineEntry?.['A'] || item['A'] });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    zIndex: isDragging ? 1 : 0,\n  };\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      className={`flex items-center justify-between p-4 ${\n        isDragging ? 'bg-gray-700' : 'bg-gray-800'\n      } rounded-lg`}\n    >\n      <div className=\"flex items-center\">\n        <div {...attributes} {...listeners}>\n          <GripVertical className=\"h-5 w-5 text-gray-500 mr-4 cursor-move\" />\n        </div>\n        <span className=\"text-lg\">{item.itemDetails?.['C'] || 'Loading...'}</span>\n      </div>\n      <Button\n        variant=\"ghost\"\n        size=\"sm\"\n        onClick={() => onRemove(item.routineEntry?.['A'] || item['A'])}\n        className=\"text-red-500 hover:text-red-400\"\n      >\n        <X className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  );\n});\n\nexport const RoutineEditor = ({ open, onOpenChange, routine = null, onRoutineChange, items = [] }) => {\n  const {\n    availableItems,\n    selectedItems,\n    setSelectedItems,\n    searchQuery,\n    setSearchQuery,\n    loading,\n    error: hookError,\n    addToRoutine,\n    removeFromRoutine,\n    updateRoutineOrder,\n  } = useRoutineEditor(routine?.id, routine?.details, items);\n\n  const [newRoutineName, setNewRoutineName] = useState(routine?.name || '');\n  const [error, setError] = useState(null);\n\n  // Clear error when modal opens/closes\n  useEffect(() => {\n    if (open) {\n      setError(null);\n    }\n  }, [open]);\n\n  // For debugging\n  useEffect(() => {\n  }, [routine]);\n\n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: {\n        delay: 100,\n        tolerance: 5,\n      },\n    }),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  const handleDragEnd = async ({ active, over }) => {\n\n    if (active.id !== over?.id) {\n\n      const oldIndex = selectedItems.findIndex(item => (item.routineEntry?.['A'] || item['A']) === active.id);\n      const newIndex = selectedItems.findIndex(item => (item.routineEntry?.['A'] || item['A']) === over.id);\n\n\n      // Create new array with items in new positions\n      const reordered = arrayMove(selectedItems, oldIndex, newIndex);\n\n      // Update all orders to match new positions\n      const withNewOrder = reordered.map((item, index) => ({\n        'A': item.routineEntry?.['A'] || item['A'],  // ID\n        'C': index.toString()         // New order\n      }));\n\n\n      // Update local state first for immediate UI feedback\n      setSelectedItems(reordered);\n\n      if (routine?.id) {\n        try {\n          await updateRoutineOrder(routine.id, withNewOrder);\n\n          // Notify parent component that routine was changed\n          if (onRoutineChange) {\n            onRoutineChange();\n          }\n        } catch (error) {\n          console.error('Failed to update routine order:', error);\n          // Revert to previous state on error\n          setSelectedItems(selectedItems);\n        }\n      } else {\n      }\n    } else {\n    }\n  };\n\n  const handleAddItem = async (item) => {\n    try {\n      setError(null);\n      if (!routine?.id) {\n        // For new routines, just update local state\n        setSelectedItems(prev => [...prev, {\n          routineEntry: {\n            'A': item['A'],  // ID\n            'B': item['B'],  // Item ID\n            'C': prev.length.toString(),  // Order\n            'D': 'FALSE',  // Completed\n          },\n          itemDetails: item  // Include all item properties\n        }]);\n      } else {\n        // For existing routines, call API through the hook\n        const success = await addToRoutine(routine.id, item['B']);  // Use Item ID from column B\n        if (!success) {\n          throw new Error('Failed to add item to routine');\n        }\n        // Notify parent of change\n        onRoutineChange?.();\n      }\n    } catch (err) {\n      setError(err.message);\n      console.error('Error adding item:', err);\n    }\n  };\n\n  const handleRemoveItem = async (routineEntryId) => {\n    try {\n      setError(null);\n      if (!routine?.id) {\n        // For new routines, just update local state\n        setSelectedItems(prev => prev.filter(item => item.routineEntry['A'] !== routineEntryId));\n      } else {\n        // For existing routines, call API through the hook with routine entry ID\n        const success = await removeFromRoutine(routine.id, routineEntryId);\n        if (!success) {\n          throw new Error('Failed to remove item from routine');\n        }\n        // Notify parent of change\n        onRoutineChange?.();\n      }\n    } catch (err) {\n      setError(err.message);\n      console.error('Error removing item:', err);\n    }\n  };\n\n  if (loading) return <div className=\"text-2xl text-center p-8\" role=\"status\" aria-live=\"polite\">Loading...</div>;\n  if (hookError) return <div className=\"text-2xl text-red-500 text-center p-8\" role=\"alert\">{hookError}</div>;\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[80vh]\">\n        <DialogHeader>\n          <DialogTitle>\n            {routine ? `Edit routine: ${routine.name}` : 'Create new routine'}\n          </DialogTitle>\n          <DialogDescription>\n            Add or remove items and arrange them in your preferred order\n          </DialogDescription>\n          {error && (\n            <div className=\"mt-2 text-sm text-red-500\" role=\"alert\">\n              {error}\n            </div>\n          )}\n        </DialogHeader>\n\n        <div className=\"flex gap-8 h-[60vh]\">\n          {/* Selected Items */}\n          <Card className=\"w-1/2 bg-gray-900\">\n            <CardHeader>\n              <CardTitle>Selected items</CardTitle>\n              {!routine?.name && (\n                <Input\n                  placeholder=\"Enter routine name...\"\n                  value={newRoutineName}\n                  onChange={(e) => setNewRoutineName(e.target.value)}\n                  className=\"mt-2\"\n                  autoComplete=\"off\"\n                />\n              )}\n            </CardHeader>\n            <CardContent className=\"space-y-4 overflow-y-auto h-[calc(100%-100px)]\">\n              <DndContext\n                sensors={sensors}\n                collisionDetection={closestCenter}\n                onDragEnd={handleDragEnd}\n              >\n                <SortableContext\n                  items={selectedItems.map(item => item.routineEntry?.['A'] || item['A']).filter(id => id != null)}\n                  strategy={verticalListSortingStrategy}\n                >\n                  <div className=\"space-y-4\">\n                    {selectedItems.filter(item => (item.routineEntry?.['A'] || item['A']) != null).map((item) => (\n                      <SortableRoutineItem\n                        key={item.routineEntry?.['A'] || item['A']}\n                        item={item}\n                        onRemove={handleRemoveItem}\n                      />\n                    ))}\n                  </div>\n                </SortableContext>\n              </DndContext>\n            </CardContent>\n          </Card>\n\n          {/* Available Items */}\n          <Card className=\"w-1/2 bg-gray-900\">\n            <CardHeader>\n              <CardTitle>Available items</CardTitle>\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-500\" />\n                <Input\n                  className=\"pl-9\"\n                  placeholder=\"Search items...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  autoComplete=\"off\"\n                />\n              </div>\n            </CardHeader>\n            <CardContent className=\"space-y-4 overflow-y-auto h-[calc(100%-100px)]\">\n              {availableItems.map(item => (\n                <AvailableItem\n                  key={item['A']}\n                  item={item}\n                  onAdd={handleAddItem}\n                />\n              ))}\n            </CardContent>\n          </Card>\n        </div>\n\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default RoutineEditor;","import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { useAuth } from '@hooks/useAuth';\nimport { trackItemOperation, trackRoutineOperation } from '../utils/analytics';\nimport { Button } from '@ui/button';\nimport { Input } from '@ui/input';\nimport { Card, CardHeader, CardTitle, CardContent } from '@ui/card';\nimport { Plus, Pencil, X, CheckCircle2, GripVertical } from 'lucide-react';\nimport { RoutineEditor } from './RoutineEditor';\nimport ChordChartsModal from './ChordChartsModal';\nimport { ChordIcon } from './icons/ChordIcon';\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  useSortable,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\n\n// Sortable item component for active routine items\nconst SortableItem = React.memo(({ item, itemDetails, handleOpenChordCharts }) => {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: item.routineEntry?.['A'] || item['A'] });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    zIndex: isDragging ? 1 : 0,\n  };\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      className={`flex items-center justify-between p-4 rounded-lg ${\n        isDragging ? 'bg-gray-700' : 'bg-gray-800'\n      }`}\n    >\n      <div className=\"flex items-center\">\n        <div {...attributes} {...listeners}>\n          <GripVertical className=\"h-5 w-5 text-gray-500 mr-4 cursor-move\" />\n        </div>\n        <span className=\"text-lg\">{itemDetails?.['C'] || `Item ${item.routineEntry?.['B'] || item['B']}`}</span>\n      </div>\n      <div className=\"flex items-center gap-2\">\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          onClick={() => handleOpenChordCharts(\n            item.routineEntry?.['B'] || item['B'],\n            itemDetails?.['C'] || `Item ${item.routineEntry?.['B'] || item['B']}`\n          )}\n          className=\"text-blue-400 hover:text-blue-300 hover:bg-gray-700 h-8 w-8\"\n        >\n          <ChordIcon className=\"h-5 w-5\" />\n          <span className=\"sr-only\">Chord charts</span>\n        </Button>\n        {(item.routineEntry?.['D'] || item['D']) === 'TRUE' && (\n          <CheckCircle2 className=\"h-5 w-5 text-green-500\" />\n        )}\n      </div>\n    </div>\n  );\n});\n\n// Add SortableInactiveRoutine component near the top with other components\nconst SortableInactiveRoutine = React.memo(({ routine, handleActivateRoutine, handleEditClick, handleDeleteClick }) => {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: routine.ID });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    zIndex: isDragging ? 1 : 0,\n  };\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      className={`flex items-center justify-between p-3 ${\n        isDragging ? 'bg-gray-700' : 'bg-gray-800'\n      } rounded-lg`}\n    >\n      <div className=\"flex items-center\">\n        <div {...attributes} {...listeners}>\n          <GripVertical className=\"h-5 w-5 text-gray-500 mr-4 cursor-move\" />\n        </div>\n        <span>{routine.name}</span>\n      </div>\n      <div className=\"flex space-x-2\">\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => handleActivateRoutine(routine.ID)}\n          className=\"text-green-500 hover:text-green-400\"\n        >\n          <Plus className=\"h-4 w-4\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Activate routine</span>\n        </Button>\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => handleEditClick(routine)}\n          className=\"text-blue-500 hover:text-blue-400\"\n        >\n          <Pencil className=\"h-4 w-4\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Edit routine</span>\n        </Button>\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          className=\"text-red-500 hover:text-red-400\"\n          onClick={() => handleDeleteClick(routine.ID)}\n        >\n          <X className=\"h-4 w-4\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Delete routine</span>\n        </Button>\n      </div>\n    </div>\n  );\n});\n\nconst RoutinesPage = () => {\n  const { isAuthenticated, checking } = useAuth();\n  const [items, setItems] = useState([]);  // Lazy-loaded when needed\n  const [newRoutineName, setNewRoutineName] = useState('');\n  const [routines, setRoutines] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [routineToDelete, setRoutineToDelete] = useState(null);\n  const [isEditOpen, setIsEditOpen] = useState(false);\n  const [editingRoutine, setEditingRoutine] = useState(null);\n  const [error, setError] = useState(null);\n  const [activeRoutineItems, setActiveRoutineItems] = useState([]);\n\n  // Chord charts modal state\n  const [chordChartsModalOpen, setChordChartsModalOpen] = useState(false);\n  const [selectedItemId, setSelectedItemId] = useState(null);\n  const [selectedItemTitle, setSelectedItemTitle] = useState('');\n\n  // Debounce timer for routine order updates\n  const routineOrderDebounceRef = useRef(null);\n  const pendingRoutineOrderRef = useRef(null);\n\n  const activeRoutine = useMemo(() => routines.find(r => r.active), [routines]);\n  const inactiveRoutines = useMemo(() => \n    routines\n      .filter(r => !r.active)\n      .sort((a, b) => Number(a.order) - Number(b.order)), \n    [routines]);\n\n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: {\n        delay: 100,\n        tolerance: 5,\n      },\n    }),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  const fetchRoutines = useCallback(async () => {\n    if (!isAuthenticated) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      setError(null);\n      const response = await fetch('/api/routines');\n      if (!response.ok) throw new Error('Failed to fetch routines');\n      const routinesList = await response.json();\n      setRoutines(routinesList);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated]);\n\n  // Lazy-load items only when routine editor is opened\n  const fetchItemsIfNeeded = useCallback(async () => {\n    if (items.length === 0) {\n      try {\n        const response = await fetch('/api/items');\n        if (!response.ok) throw new Error('Failed to fetch items');\n        const itemsData = await response.json();\n        setItems(itemsData);\n      } catch (error) {\n        console.error('Error fetching items:', error);\n        setError(error.message);\n      }\n    }\n  }, [items.length]);\n\n  const handleActivateRoutine = useCallback(async (routineId) => {\n    try {\n      const response = await fetch(`/api/routines/${routineId}/active`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ active: true })\n      });\n  \n      if (!response.ok) throw new Error('Failed to activate routine');\n      await fetchRoutines();\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    }\n  }, [fetchRoutines]);\n\n  const handleDeactivateRoutine = useCallback(async (routineId) => {\n    try {\n      const response = await fetch(`/api/routines/${routineId}/active`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ active: false })\n      });\n\n      if (!response.ok) throw new Error('Failed to deactivate routine');\n      await fetchRoutines();\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    }\n  }, [fetchRoutines]);\n\n  const handleDeleteClick = useCallback((routineId) => {\n    setRoutineToDelete(routines.find(r => r.ID === routineId));\n  }, [routines]);\n\n  const handleOpenChordCharts = useCallback((itemId, itemTitle) => {\n    setSelectedItemId(itemId);\n    setSelectedItemTitle(itemTitle);\n    setChordChartsModalOpen(true);\n  }, []);\n\n  const handleDeleteConfirm = useCallback(async () => {\n    if (!routineToDelete) return;\n    \n    try {\n      const response = await fetch(`/api/routines/${routineToDelete.ID}`, {\n        method: 'DELETE'\n      });\n      \n      if (!response.ok) throw new Error('Failed to delete routine');\n      \n      // Track routine deletion\n      trackItemOperation('deleted', 'routine', routineToDelete.Name);\n      \n      await fetchRoutines();\n    } catch (error) {\n      console.error('Failed to delete routine:', error);\n      setError(error.message);\n    } finally {\n      setRoutineToDelete(null);\n    }\n  }, [routineToDelete, fetchRoutines]);\n\n  const handleCreateRoutine = useCallback(async () => {\n    if (!newRoutineName.trim()) return;\n    \n    try {\n      const response = await fetch('/api/routines', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ routineName: newRoutineName.trim() }),\n      });\n      \n      if (!response.ok) throw new Error('Failed to create routine');\n      \n      // Track routine creation\n      trackItemOperation('created', 'routine', newRoutineName.trim());\n      \n      await fetchRoutines();\n      setNewRoutineName('');\n    } catch (error) {\n      console.error('Failed to create routine:', error);\n      setError(error.message);\n    }\n  }, [newRoutineName, fetchRoutines]);\n\n  const handleEditClick = useCallback(async (routine) => {\n    \n    // Lazy-load items before opening editor\n    await fetchItemsIfNeeded();\n    \n    // Find the active routine details if this is the active routine\n    const routineDetails = routine.active ? {\n      id: routine.ID,\n      name: routine.name,\n      items: activeRoutineItems.map(item => ({\n        routineEntry: item.routineEntry || item,  // Extract actual routineEntry or fallback to item\n        itemDetails: item.itemDetails\n      }))\n    } : null;\n\n    setEditingRoutine({\n      id: routine.ID,\n      name: routine.name,\n      details: routineDetails\n    });\n    setIsEditOpen(true);\n  }, [activeRoutineItems, fetchItemsIfNeeded]);\n\n  const handleRoutineChange = useCallback(async () => {\n    await fetchRoutines();\n    // Call fetchActiveRoutineItems directly without dependency to avoid circular reference\n    const activeRoutine = routines.find(r => r.active);\n\n    if (!activeRoutine) {\n      setActiveRoutineItems([]);\n      return;\n    }\n\n    // Fetch the routine with all details\n    const routineResponse = await fetch(`/api/routines/${activeRoutine.ID}`);\n    if (routineResponse.ok) {\n      const routineData = await routineResponse.json();\n\n      // Sort items by order (order is stored in routineEntry.C)\n      const sortedItems = routineData.items\n        .sort((a, b) => parseInt(a.routineEntry['C']) - parseInt(b.routineEntry['C']))\n        .map(item => ({\n          ...item,\n          itemDetails: item.itemDetails || item\n        }));\n\n      setActiveRoutineItems(sortedItems);\n    }\n  }, [fetchRoutines, routines]);\n\n  const fetchActiveRoutineItems = useCallback(async () => {\n    try {\n      // Get active routine ID from the routines list instead of making a separate call\n      const activeRoutine = routines.find(r => r.active);\n      \n      if (!activeRoutine) {\n        setActiveRoutineItems([]);\n        return;\n      }\n\n      // Fetch the routine with all details\n      const routineResponse = await fetch(`/api/routines/${activeRoutine.ID}`);\n      if (!routineResponse.ok) throw new Error('Failed to fetch routine details');\n      const routineData = await routineResponse.json();\n      \n      // Sort items by order (order is stored in routineEntry.C)\n      const sortedItems = routineData.items\n        .sort((a, b) => parseInt(a.routineEntry['C']) - parseInt(b.routineEntry['C']))\n        .map(item => ({\n          ...item,\n          itemDetails: item.itemDetails || item\n        }));\n      \n      setActiveRoutineItems(sortedItems);\n\n      // Log the loaded items structure\n      fetch('/api/debug/log', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          message: `LOAD: Active routine items loaded: ${sortedItems.length} items`,\n          level: 'info'\n        })\n      });\n\n      if (sortedItems.length > 0) {\n        fetch('/api/debug/log', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            message: `LOAD: Sortable IDs: ${sortedItems.map(item => item.routineEntry?.['A'] || item['A']).join(', ')}`,\n            level: 'info'\n          })\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching routine items:', error);\n      setError(error.message);\n    }\n  }, [routines]);\n\n  useEffect(() => {\n    fetchActiveRoutineItems();\n  }, [fetchActiveRoutineItems]);\n\n\n  const handleDragEnd = async ({ active, over }) => {\n    // Simple sync logging\n    fetch('/api/debug/log', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        message: `ACTIVE ROUTINE handleDragEnd called: active=${active?.id}, over=${over?.id}`,\n        level: 'info'\n      })\n    });\n\n    if (!active || !over || active.id === over.id) {\n      fetch('/api/debug/log', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          message: 'ACTIVE ROUTINE Drag end early return - no valid drag',\n          level: 'info'\n        })\n      });\n      return;\n    }\n\n    const oldIndex = activeRoutineItems.findIndex(item => (item.routineEntry?.['A'] || item['A']) === active.id);\n    const newIndex = activeRoutineItems.findIndex(item => (item.routineEntry?.['A'] || item['A']) === over.id);\n\n    fetch('/api/debug/log', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        message: `ACTIVE ROUTINE Indices: old=${oldIndex}, new=${newIndex}, activeId=${active.id}, overId=${over.id}`,\n        level: 'info'\n      })\n    });\n\n\n    try {\n      // First get the active routine ID\n      const response = await fetch('/api/routines/active');\n      if (!response.ok) throw new Error('Failed to fetch active routine');\n      const data = await response.json();\n      const activeId = data.A; // Use Google Sheets format (Column A)\n\n\n      if (!activeId) {\n        throw new Error('No active routine found');\n      }\n\n      // Create new array with moved item\n      const reordered = arrayMove(activeRoutineItems, oldIndex, newIndex);\n\n      // Update all orders to match new positions, keeping only essential columns\n      const withNewOrder = reordered.map((item, index) => ({\n        'A': item.routineEntry?.['A'] || item['A'],           // ID (routine entry ID)\n        'C': index.toString(),    // Order\n      }));\n\n\n      // Update UI optimistically\n      setActiveRoutineItems(reordered);\n\n      // Send update to backend using the active routine ID as sheet name\n      const orderUrl = `/api/routines/${activeId}/order`;\n\n      const orderResponse = await fetch(orderUrl, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(withNewOrder)\n      });\n\n      if (!orderResponse.ok) {\n        const errorText = await orderResponse.text();\n        throw new Error(`Failed to update routine order: ${errorText}`);\n      }\n\n\n      // Refresh items to ensure sync\n      await fetchActiveRoutineItems();\n    } catch (error) {\n      console.error('Reorder failed:', error);\n      // Revert to original order on error\n      await fetchActiveRoutineItems();\n    }\n  };\n\n  // Debounced function to save routine order to backend\n  const saveRoutineOrder = useCallback(async (updates) => {\n    try {\n      const orderResponse = await fetch('/api/routines/order', {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updates)\n      });\n      \n      if (!orderResponse.ok) {\n        const errorText = await orderResponse.text();\n        throw new Error(`Failed to update routine order: ${errorText}`);\n      }\n    } catch (error) {\n      console.error('Failed to save routine order:', error);\n      // Show error to user\n      setError('Failed to save routine order. Please refresh the page.');\n      // Revert by fetching latest data\n      await fetchRoutines();\n    }\n  }, [fetchRoutines]);\n\n  const handleDragEndInactive = ({ active, over }) => {\n    // Log inactive routines drag event\n    fetch('/api/debug/log', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        message: `INACTIVE ROUTINES handleDragEnd called: active=${active?.id}, over=${over?.id}`,\n        level: 'info'\n      })\n    });\n\n    if (!active || !over || active.id === over.id) return;\n\n    const oldIndex = inactiveRoutines.findIndex(routine => routine.ID === active.id);\n    const newIndex = inactiveRoutines.findIndex(routine => routine.ID === over.id);\n\n    // Create new array with moved item\n    const reordered = arrayMove(inactiveRoutines, oldIndex, newIndex);\n    \n    // Update ALL affected items' order values to match their new positions\n    const updates = reordered.map((routine, index) => ({\n      'A': routine.ID,\n      'D': index.toString()  // New order based on position\n    }));\n    \n    // Update UI optimistically\n    setRoutines(prevRoutines => {\n      const activeRoutine = prevRoutines.find(r => r.active);\n      const updatedInactive = updates.map(update => {\n        const original = prevRoutines.find(r => r.ID === update.A);\n        return { ...original, order: update.D };\n      });\n      \n      return activeRoutine \n        ? [activeRoutine, ...updatedInactive]\n        : updatedInactive;\n    });\n    \n    // Store the pending update\n    pendingRoutineOrderRef.current = updates;\n    \n    // Clear any existing debounce timer\n    if (routineOrderDebounceRef.current) {\n      clearTimeout(routineOrderDebounceRef.current);\n    }\n    \n    // Set new debounce timer (500ms delay)\n    routineOrderDebounceRef.current = setTimeout(() => {\n      if (pendingRoutineOrderRef.current) {\n        saveRoutineOrder(pendingRoutineOrderRef.current);\n        pendingRoutineOrderRef.current = null;\n      }\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (!checking) {\n      setLoading(true);\n      fetchRoutines();\n    }\n  }, [checking, fetchRoutines]);\n\n  // Cleanup debounce timer on unmount\n  useEffect(() => {\n    return () => {\n      if (routineOrderDebounceRef.current) {\n        clearTimeout(routineOrderDebounceRef.current);\n        // Save any pending updates before unmounting\n        if (pendingRoutineOrderRef.current) {\n          saveRoutineOrder(pendingRoutineOrderRef.current);\n        }\n      }\n    };\n  }, [saveRoutineOrder]);\n\n  if (checking) {\n    return (\n      <div className=\"text-center p-8\" role=\"status\" aria-live=\"polite\">\n        <h2 className=\"text-2xl mb-4\">Checking authentication...</h2>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"text-center p-8\" role=\"status\" aria-live=\"polite\">\n        <h2 className=\"text-2xl mb-4\">Loading routines...</h2>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center p-8\">\n        <h2 className=\"text-2xl text-red-500 mb-4\">Error: {error}</h2>\n        <Button onClick={fetchRoutines} className=\"bg-blue-600 hover:bg-blue-700\">\n          Retry\n        </Button>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"text-center p-8\">\n        <h2 className=\"text-2xl mb-4\">Please log in to manage routines</h2>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {/* Active Routine Section */}\n        <Card className=\"bg-gray-900 text-gray-100\">\n          <CardHeader>\n            <CardTitle>Current active routine</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {isAuthenticated ? (\n              activeRoutine ? (\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"flex items-center\">\n                      <CheckCircle2 className=\"h-5 w-5 text-green-500 mr-2\" aria-hidden=\"true\" />\n                      {activeRoutine.name}\n                    </span>\n                    <div className=\"flex space-x-2\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => handleEditClick(activeRoutine)}\n                        className=\"text-blue-500 hover:text-blue-400\"\n                      >\n                        <Pencil className=\"h-4 w-4\" aria-hidden=\"true\" />\n                        <span className=\"sr-only\">Edit routine</span>\n                      </Button>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => handleDeactivateRoutine(activeRoutine.ID)}\n                        className=\"text-gray-400 hover:text-gray-200\"\n                      >\n                        <X className=\"h-4 w-4\" aria-hidden=\"true\" />\n                        <span className=\"sr-only\">Deactivate routine</span>\n                      </Button>\n                    </div>\n                  </div>\n                  \n                  <DndContext\n                    sensors={sensors}\n                    collisionDetection={closestCenter}\n                    onDragStart={(event) => {\n                      fetch('/api/debug/log', {\n                        method: 'POST',\n                        headers: { 'Content-Type': 'application/json' },\n                        body: JSON.stringify({\n                          message: `ACTIVE ROUTINE Drag started: ${event.active.id}`,\n                          level: 'info'\n                        })\n                      });\n                    }}\n                    onDragEnd={handleDragEnd}\n                  >\n                    <SortableContext\n                      items={activeRoutineItems.map(item => item.routineEntry?.['A'] || item['A'])}\n                      strategy={verticalListSortingStrategy}\n                    >\n                      <div className=\"space-y-2 mt-4\">\n                        {activeRoutineItems.map((item) => (\n                          <SortableItem\n                            key={item.routineEntry?.['A'] || item['A']}\n                            item={item}\n                            itemDetails={item.itemDetails}\n                            handleOpenChordCharts={handleOpenChordCharts}\n                          />\n                        ))}\n                      </div>\n                    </SortableContext>\n                  </DndContext>\n                </div>\n              ) : (\n                <div className=\"text-gray-400\">No active routine selected</div>\n              )\n            ) : (\n              <div className=\"text-gray-400\">Please log in to manage routines</div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Inactive Routines Section */}\n        <Card className=\"bg-gray-900 text-gray-100\">\n          <CardHeader>\n            <CardTitle>Inactive routines</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {isAuthenticated ? (\n              <>\n                {/* Routines List */}\n                <div className=\"space-y-2\">\n                  <div className=\"mb-4 flex space-x-2\">\n                    <label htmlFor=\"new-routine-name-input\" className=\"sr-only\">\n                      New routine name\n                    </label>\n                    <Input\n                      id=\"new-routine-name-input\"\n                      placeholder=\"New routine name\"\n                      value={newRoutineName}\n                      onChange={(e) => setNewRoutineName(e.target.value)}\n                      onKeyPress={(e) => e.key === 'Enter' && handleCreateRoutine()}\n                      className=\"flex-grow\"\n                    />\n                    <Button\n                      onClick={handleCreateRoutine}\n                      className=\"bg-blue-600 hover:bg-blue-700\"\n                      disabled={!newRoutineName.trim()}\n                    >\n                      <Plus className=\"h-5 w-5 mr-2\" aria-hidden=\"true\" />\n                      Add\n                    </Button>\n                  </div>\n                  \n                  <DndContext\n                    sensors={sensors}\n                    collisionDetection={closestCenter}\n                    onDragEnd={handleDragEndInactive}\n                  >\n                    <SortableContext\n                      items={inactiveRoutines.map(routine => routine.ID).filter(id => id != null)}\n                      strategy={verticalListSortingStrategy}\n                    >\n                      <div className=\"space-y-2\">\n                        {inactiveRoutines.filter(routine => routine.ID != null).map((routine) => (\n                          <SortableInactiveRoutine\n                            key={routine.ID}\n                            routine={routine}\n                            handleActivateRoutine={handleActivateRoutine}\n                            handleEditClick={handleEditClick}\n                            handleDeleteClick={handleDeleteClick}\n                          />\n                        ))}\n                      </div>\n                    </SortableContext>\n                  </DndContext>\n                </div>\n              </>\n            ) : (\n              <div className=\"text-gray-400\">Please log in to manage routines</div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Delete Confirmation Dialog */}\n        <AlertDialog \n          open={!!routineToDelete} \n          onOpenChange={(isOpen) => {\n            if (!isOpen) setRoutineToDelete(null);\n          }}\n        >\n          <AlertDialogContent>\n            <AlertDialogHeader>\n              <AlertDialogTitle>Delete routine</AlertDialogTitle>\n              <AlertDialogDescription>\n                Are you sure you want to delete \"{routineToDelete?.name}\"? This action cannot be undone.\n              </AlertDialogDescription>\n            </AlertDialogHeader>\n            <AlertDialogFooter>\n              <AlertDialogCancel>Cancel</AlertDialogCancel>\n              <AlertDialogAction onClick={handleDeleteConfirm} className=\"bg-red-500 hover:bg-red-600\">\n                Delete\n              </AlertDialogAction>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialog>\n      </div>\n\n      <RoutineEditor\n        open={isEditOpen}\n        onOpenChange={setIsEditOpen}\n        routine={editingRoutine}\n        onRoutineChange={handleRoutineChange}\n        items={items}\n      />\n\n      <ChordChartsModal\n        isOpen={chordChartsModalOpen}\n        onClose={() => setChordChartsModalOpen(false)}\n        itemId={selectedItemId}\n        itemTitle={selectedItemTitle}\n      />\n    </>\n  );\n};\n\nexport default RoutinesPage;","// hooks/useRoutines.js\nimport { useState, useEffect } from 'react';\n\nexport const useRoutines = () => {\n  const [routines, setRoutines] = useState([]);\n  const [activeRoutine, setActiveRoutine] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch all routines\n  const fetchRoutines = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/routines');\n      if (!response.ok) throw new Error('Failed to fetch routines');\n      const data = await response.json();\n      setRoutines(data);\n      setError(null);\n    } catch (err) {\n      console.error('Fetch routines error:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create new routine\n  const createRoutine = async (name) => {\n    try {\n      const response = await fetch('/api/routines', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ routineName: name })\n      });\n      if (!response.ok) throw new Error('Failed to create routine');\n      await fetchRoutines(); // Refresh the list\n      return true;\n    } catch (err) {\n      console.error('Create routine error:', err);\n      setError(err.message);\n      return false;\n    }\n  };\n\n  // Delete routine\n  const deleteRoutine = async (routineId) => {\n    try {\n      const response = await fetch(`/api/routines/${routineId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Failed to delete routine');\n      await fetchRoutines(); // Refresh the list\n      return true;\n    } catch (err) {\n      console.error('Delete routine error:', err);\n      setError(err.message);\n      return false;\n    }\n  };\n\n  // Set active routine\n  const activateRoutine = async (routine) => {\n    setActiveRoutine(routine);\n    // TODO: Persist active routine state to backend if needed\n  };\n\n  // Initial fetch\n  useEffect(() => {\n    fetchRoutines();\n  }, []);\n\n  return {\n    routines,\n    activeRoutine,\n    loading,\n    error,\n    createRoutine,\n    deleteRoutine,\n    activateRoutine,\n    refreshRoutines: fetchRoutines\n  };\n};\n","import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown } from \"lucide-react\"\nimport { cn } from \"@lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectContent = React.forwardRef(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n} ","import React, { useState } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@ui/card';\nimport { Button } from '@ui/button';\nimport { Textarea } from '@ui/textarea';\nimport { Label } from '@ui/label';\nimport { AlertCircle, CheckCircle } from 'lucide-react';\nimport { useRoutines } from '@hooks/useRoutines';\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n} from '@ui/select';\n\nexport default function ImportsPage() {\n    const [itemsData, setItemsData] = useState('');\n    const [routinesData, setRoutinesData] = useState('');\n    const [routineItemsData, setRoutineItemsData] = useState('');\n    const [selectedRoutineId, setSelectedRoutineId] = useState('');\n    const { routines, loading: routinesLoading } = useRoutines();\n\n    const handleItemsImport = async () => {\n        try {\n            const data = JSON.parse(itemsData);\n            const response = await fetch('/api/items/import', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            });\n            if (!response.ok) {\n                throw new Error('Failed to import items');\n            }\n            setItemsData('');\n        } catch (err) {\n            console.error('Import error:', err);\n        }\n    };\n\n    const handleRoutinesImport = async () => {\n        try {\n            const data = JSON.parse(routinesData);\n            const response = await fetch('/api/routines/import', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            });\n            if (!response.ok) {\n                throw new Error('Failed to import routines');\n            }\n            setRoutinesData('');\n        } catch (err) {\n            console.error('Import error:', err);\n        }\n    };\n\n    const handleRoutineItemsImport = async () => {\n        try {\n            if (!selectedRoutineId) {\n                throw new Error('Please select a routine first');\n            }\n            const data = JSON.parse(routineItemsData);\n            const response = await fetch(`/api/routines/${selectedRoutineId}/items/import`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            });\n            if (!response.ok) {\n                throw new Error('Failed to import routine items');\n            }\n            setRoutineItemsData('');\n        } catch (err) {\n            console.error('Import error:', err);\n        }\n    };\n\n    return (\n        <Card className=\"w-full max-w-4xl bg-gray-900 text-gray-100\">\n            <CardContent className=\"space-y-6\">\n                <div>\n                    <CardTitle className=\"text-2xl mb-4\">Import Items</CardTitle>\n                    <p className=\"text-gray-300 mb-4\">Import practice items from other sources. Items will be appended to your existing items.</p>\n                    <Textarea\n                        value={itemsData}\n                        onChange={(e) => setItemsData(e.target.value)}\n                        placeholder=\"Paste your JSON data here...\"\n                        className=\"h-48 font-mono bg-gray-800 mb-2\"\n                    />\n                    <p className=\"text-sm text-gray-400 mb-4\">Expected format: Array of objects with 'title' and 'duration' fields</p>\n                    <Button \n                        onClick={handleItemsImport}\n                        className=\"bg-blue-600 hover:bg-blue-700\"\n                    >\n                        Import Items\n                    </Button>\n                </div>\n\n                <div>\n                    <CardTitle className=\"text-2xl mb-4\">Import Routine Items</CardTitle>\n                    <p className=\"text-gray-300 mb-4\">Import items into an existing routine. Items will be matched by title with existing items.</p>\n                    <div className=\"mb-4\">\n                        <Label htmlFor=\"routine-select\" className=\"block mb-2\">Select Routine</Label>\n                        <Select\n                            value={selectedRoutineId}\n                            onValueChange={setSelectedRoutineId}\n                            disabled={routinesLoading}\n                        >\n                            <SelectTrigger className=\"w-full bg-gray-800\">\n                                <SelectValue placeholder=\"Select a routine\" />\n                            </SelectTrigger>\n                            <SelectContent className=\"bg-gray-800\">\n                                {routines.map((routine) => (\n                                    <SelectItem\n                                        key={routine.ID}\n                                        value={routine.ID}\n                                        className=\"text-gray-100 hover:bg-gray-700\"\n                                    >\n                                        {routine.name}\n                                    </SelectItem>\n                                ))}\n                            </SelectContent>\n                        </Select>\n                    </div>\n                    <Textarea\n                        value={routineItemsData}\n                        onChange={(e) => setRoutineItemsData(e.target.value)}\n                        placeholder=\"Paste your JSON data here...\"\n                        className=\"h-48 font-mono bg-gray-800 mb-2\"\n                    />\n                    <p className=\"text-sm text-gray-400 mb-4\">Expected format: Array of objects with 'title' field</p>\n                    <Button \n                        onClick={handleRoutineItemsImport}\n                        className=\"bg-blue-600 hover:bg-blue-700\"\n                    >\n                        Import Routine Items\n                    </Button>\n                </div>\n\n                <div>\n                    <CardTitle className=\"text-2xl mb-4\">Import Routines</CardTitle>\n                    <p className=\"text-gray-300 mb-4\">Import practice routines. Each routine will be created as a new routine.</p>\n                    <Textarea\n                        value={routinesData}\n                        onChange={(e) => setRoutinesData(e.target.value)}\n                        placeholder=\"Paste your JSON data here...\"\n                        className=\"h-48 font-mono bg-gray-800 mb-2\"\n                    />\n                    <p className=\"text-sm text-gray-400 mb-4\">Expected format: Array of objects with 'name' field</p>\n                    <Button \n                        onClick={handleRoutinesImport}\n                        className=\"bg-blue-600 hover:bg-blue-700\"\n                    >\n                        Import Routines\n                    </Button>\n                </div>\n            </CardContent>\n        </Card>\n    );\n} ","import { useState, useEffect, useCallback } from 'react';\n\nexport const useLightweightItems = () => {\n  const [lightweightItems, setLightweightItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [version, setVersion] = useState(0);\n\n  // Fetch full item data for drag and drop support\n  const fetchLightweightItems = async () => {\n    try {\n      const response = await fetch('/api/items');\n      if (!response.ok) {\n        throw new Error('Failed to fetch items');\n      }\n      const data = await response.json();\n      setLightweightItems(data);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n      console.error('Fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const refreshItems = useCallback(async () => {\n    setVersion(v => v + 1); // This will trigger the useEffect\n  }, []);\n\n  // Fetch items on mount and when version changes\n  useEffect(() => {\n    fetchLightweightItems();\n  }, [version]);\n\n  return {\n    items: lightweightItems,\n    loading,\n    error,\n    refreshItems\n  };\n};","// app/static/js/main.jsx\nimport '../css/input.css'\nimport React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { NavigationProvider, useNavigation } from '@contexts/NavigationContext';\nimport { PracticeItemsList } from '@components/PracticeItemsList';\nimport { PracticePage } from '@components/PracticePage';\nimport NavMenu from '@components/NavMenu';\nimport RoutinesPage from '@components/RoutinesPage';\nimport ImportsPage from '@components/ImportsPage';\nimport { useLightweightItems } from '@hooks/useLightweightItems';\n\nconst ItemsPage = () => {\n  const { items, refreshItems } = useLightweightItems();\n  return <PracticeItemsList items={items} onItemsChange={refreshItems} />;\n};\n\nconst PageContent = () => {\n  const { activePage } = useNavigation();\n  \n  switch (activePage) {\n    case 'Practice':\n      return <PracticePage />;\n    case 'Routines':\n      return <RoutinesPage />;\n    case 'Items':\n      return <ItemsPage />;\n    case 'Imports':\n      return <ImportsPage />;\n    default:\n      return <div>Page not implemented yet</div>;\n  }\n};\n\nconst App = () => {\n  const headerRef = useRef(null);\n  const [headerHeight, setHeaderHeight] = useState(160);\n\n  useEffect(() => {\n    const updateHeaderHeight = () => {\n      if (headerRef.current) {\n        const height = headerRef.current.offsetHeight;\n        setHeaderHeight(height + 20); // Add 20px buffer\n      }\n    };\n\n    updateHeaderHeight();\n    window.addEventListener('resize', updateHeaderHeight);\n    return () => window.removeEventListener('resize', updateHeaderHeight);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Fixed Header */}\n      <div ref={headerRef} className=\"fixed top-0 left-0 right-0 z-50 bg-gray-900\">\n        <div className=\"container mx-auto px-4 pt-4 pb-1\">\n          <h1 className=\"text-2xl sm:text-4xl font-bold text-orange-500 mb-2\">Guitar Practice Routine App</h1>\n          <NavMenu className=\"mb-0\" />\n        </div>\n      </div>\n\n      {/* Scrollable Content with dynamic top padding to account for fixed header */}\n      <div className=\"pb-4 px-4 container mx-auto\" style={{paddingTop: `${headerHeight}px`}}>\n        <PageContent />\n      </div>\n    </div>\n  );\n};\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <NavigationProvider>\n      <App />\n    </NavigationProvider>\n  </React.StrictMode>\n);"],"names":["m","require$$0","client","pageStartTimes","trackPageVisit","pageName","additionalProperties","previousPage","timeSpent","trackPracticeEvent","eventType","itemName","eventMap","trackChordChartEvent","action","trackItemOperation","operation","itemType","eventName","trackContentUpdate","updateType","trackSongbookLinkClick","folderPath","trackActiveRoutine","routineName","NavigationContext","createContext","NavigationProvider","children","getInitialPage","hash","activePage","setActivePage","useState","useEffect","timeoutId","setActivePageWithTracking","updateHistory","handlePopState","newPage","jsx","useNavigation","context","useContext","defaultAttributes","toKebabCase","string","createLucideIcon","iconName","iconNode","Component","forwardRef","color","size","strokeWidth","absoluteStrokeWidth","rest","ref","createElement","tag","attrs","createLucideIcon$1","AlertTriangle","Book","CheckCircle2","Check","ChevronDown","ChevronRight","Clock","FileText","GripVertical","Loader2","LogOut","Music","Pencil","Plus","Printer","Search","Sparkles","Trash2","Upload","Wand","X","Zap","r","e","t","f","n","o","clsx","twJoin","index","argument","resolvedValue","toValue","mix","k","CLASS_PART_SEPARATOR","createClassUtils","config","classMap","createClassMap","conflictingClassGroups","_config$conflictingCl","conflictingClassGroupModifiers","getClassGroupId","className","classParts","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","classGroupFromNextClassPart","classRest","_ref","validator","arbitraryPropertyRegex","arbitraryPropertyClassName","property","theme","prefix","prefixedClassGroupEntries","getPrefixedClassGroupEntries","_ref2","classGroup","processClassesRecursively","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","_ref3","key","path","currentClassPartObject","pathPart","func","classGroupEntries","_ref4","prefixedClassGroup","_ref5","value","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","IMPORTANT_MODIFIER","createSplitModifiers","separator","isSeparatorSingleCharacter","firstSeparatorCharacter","separatorLength","modifiers","bracketDepth","modifierStart","postfixModifierPosition","currentCharacter","baseClassNameWithImportantModifier","hasImportantModifier","baseClassName","maybePostfixModifierPosition","sortModifiers","sortedModifiers","unsortedModifiers","modifier","isArbitraryVariant","createConfigUtils","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","splitModifiers","classGroupsInConflict","originalClassName","_splitModifiers","variantModifier","modifierId","parsed","classId","group","createTailwindMerge","_len","createConfig","_key","cacheGet","cacheSet","functionToCall","initTailwindMerge","firstCreateConfig","restCreateConfig","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","result","fromTheme","themeGetter","arbitraryValueRegex","fractionRegex","stringLengths","tshirtUnitRegex","lengthUnitRegex","shadowRegex","isLength","isNumber","isArbitraryLength","getIsArbitraryValue","isLengthOnly","isArbitrarySize","isNever","isArbitraryPosition","isArbitraryUrl","isUrl","isArbitraryNumber","isPercent","isInteger","isIntegerOnly","isArbitraryValue","isAny","isTshirtSize","isArbitraryShadow","isShadow","label","testValue","getDefaultConfig","colors","spacing","blur","brightness","borderColor","borderRadius","borderSpacing","borderWidth","contrast","grayscale","hueRotate","invert","gap","gradientColorStops","gradientColorStopPositions","inset","margin","opacity","padding","saturate","scale","sepia","skew","space","translate","getOverscroll","getOverflow","getSpacingWithAutoAndArbitrary","getSpacingWithArbitrary","getLengthWithEmpty","getNumberWithAutoAndArbitrary","getPositions","getLineStyles","getBlendModes","getAlign","getZeroAndEmpty","getBreaks","getNumber","getNumberAndArbitrary","twMerge","cn","inputs","Card","React.forwardRef","props","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","falsyToString","cx","cva","base","_config_compoundVariants","variants","defaultVariants","getVariantClassNames","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","acc","param","getCompoundVariantClassNames","cvClass","cvClassName","compoundVariantOptions","buttonVariants","Button","asChild","Comp","Slot","Input","type","detectOS","userAgent","supportsFolderOpening","os","Dialog","DialogPrimitive.Root","DialogPortal","DialogPrimitive.Portal","DialogOverlay","DialogPrimitive.Overlay","DialogContent","jsxs","DialogPrimitive.Content","DialogPrimitive.Close","DialogHeader","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","Textarea","Label","TooltipProvider","TooltipPrimitive.Provider","TooltipRoot","TooltipPrimitive.Root","TooltipTrigger","TooltipPrimitive.Trigger","TooltipContent","sideOffset","TooltipPrimitive.Content","Tooltip","ItemEditor","open","onOpenChange","item","onItemChange","formData","setFormData","error","setError","isDirty","setIsDirty","fetchFullItemData","itemId","response","fullItem","err","handleFormChange","field","prev","handleSubmit","_G","dataToSend","baseUrl","url","errorData","savedItem","isCreating","originalNotes","originalTuning","originalSongbook","mins","secs","currentSecs","newSecs","BulkSongbookUpdate","onComplete","isOpen","setIsOpen","paths","setPaths","isUpdating","setIsUpdating","setResult","p","data","Fragment","usePracticeItems","items","setItems","loading","setLoading","version","setVersion","fetchItems","refreshItems","v","deleteItem","current","addItem","newItem","addedItem","updateItem","updatedItem","updated","updateItems","updatedItems","defaultChartConfig","fetchWithBackoff","options","maxRetries","onRetry","attempt","waitTime","message","resolve","ChordChartEditor","onSave","onCancel","editingChordId","insertionContext","defaultTuning","title","setTitle","startingFret","setStartingFret","numFrets","setNumFrets","numStrings","setNumStrings","editMode","setEditMode","editModeRef","tuning","setTuning","capo","setCapo","fingers","setFingers","barres","setBarres","openStrings","setOpenStrings","mutedStrings","setMutedStrings","isLoadingChord","setIsLoadingChord","showAdvancedSettings","setShowAdvancedSettings","selectedFinger","setSelectedFinger","addLineBreak","setAddLineBreak","editorChartRef","useRef","resultChartRef","editorContainerRef","lastChordDataRef","tryAutofill","chordName","matches","chart","chordToUse","searchResponse","commonMatches","commonError","a","b","orderA","orderB","normalizedFingers","finger","s","num","fingerNum","autofillBarres","chordToEdit","chord","loadedBarres","lineBreakValue","initializeCharts","script","currentHandlerRef","updateCharts","setupEditorInteraction","svg","mousedownHandler","event","clickHandler","handleEditorClick","currentEditMode","rect","rawX","rawY","svgViewBox","scaleX","scaleY","x","y","chartWidth","chartHeight","marginX","marginY","fretboardWidth","fretboardHeight","stringRatio","stringIndex","svguitarString","toggleNutMarker","relativeY","fretRatio","fretIndex","toggleFinger","selectFingerForNumbering","toggleBarre","fret","next","existingIndex","_","stringNum","isMuted","_string","barre","newBarre","setFingerNumber","number","currentNumber","editorElement","resultElement","chordData","fingerNumber","chartStateString","editorSvg","resultSvg","handleKeyPress","saveData","ApiErrorModal","onClose","countdown","setCountdown","canRetry","setCanRetry","errorInfo","errorMsg","timer","formatTime","seconds","handleRetry","AutocreateSuccessModal","autocreateData","chordCount","contentType","uploadedFileNames","isVisionAnalysis","isComplexVisionAnalysis","getIcon","getTitle","getDescription","getDetails","details","typeLabels","fileList","remainingCount","fileText","detail","isServerDown","lastConnectionAttempt","connectionCheckInterval","CONNECTION_CHECK_DELAY","serverLog","level","hideConnectionModal","showConnectionModal","scheduleReconnectionAttempts","originalConsoleError","originalConsoleLog","originalConsoleWarn","modal","existingModal","args","serverDebug","serverInfo","ROOT_NAME","createAlertDialogContext","createContextScope","createDialogScope","useDialogScope","AlertDialog","__scopeAlertDialog","alertDialogProps","dialogScope","TRIGGER_NAME","AlertDialogTrigger","forwardedRef","triggerProps","DialogPrimitive.Trigger","PORTAL_NAME","AlertDialogPortal","portalProps","OVERLAY_NAME","AlertDialogOverlay","overlayProps","CONTENT_NAME","AlertDialogContentProvider","useAlertDialogContentContext","AlertDialogContent","contentProps","contentRef","React.useRef","composedRefs","useComposedRefs","cancelRef","DialogPrimitive.WarningProvider","TITLE_NAME","composeEventHandlers","Slottable","DescriptionWarning","AlertDialogTitle","titleProps","DESCRIPTION_NAME","AlertDialogDescription","descriptionProps","ACTION_NAME","AlertDialogAction","actionProps","CANCEL_NAME","AlertDialogCancel","cancelProps","MESSAGE","React.useEffect","Root2","Portal2","Overlay2","Content2","Action","Cancel","Title2","Description2","AlertDialogPrimitive.Root","AlertDialogPrimitive.Portal","AlertDialogPrimitive.Overlay","AlertDialogPrimitive.Content","AlertDialogHeader","AlertDialogFooter","AlertDialogPrimitive.Title","AlertDialogPrimitive.Description","AlertDialogPrimitive.Action","AlertDialogPrimitive.Cancel","debounce","wait","timeout","later","normalizeText","str","extractBaseSongName","findSimilarSongs","sourceTitle","allItems","sourceItemId","baseName","normalizedBaseName","itemTitle","itemBaseName","normalizedItemBaseName","MemoizedChordChart","memo","onEdit","onDelete","onInsertAfter","showMenu","setShowMenu","menuRef","chartRef","handleClickOutside","actualChartData","chartInstance","handleEditClick","handleDeleteClick","handleInsertAfterClick","handleLineBreakClick","updatedChartData","handleMenuClick","ChordChartsModal","chordCharts","setChordCharts","chordSections","setChordSections","showChordEditor","setShowChordEditor","setEditingChordId","setInsertionContext","scrollBackContext","setScrollBackContext","deletingSection","setDeletingSection","showCopyModal","setShowCopyModal","copySourceItemId","setCopySourceItemId","copySearchTerm","setCopySearchTerm","selectedTargetItems","setSelectedTargetItems","itemsWithExistingCharts","setItemsWithExistingCharts","showOverwriteConfirmation","setShowOverwriteConfirmation","copyProgress","setCopyProgress","showAutocreateZone","setShowAutocreateZone","autocreateProgress","setAutocreateProgress","uploadedFiles","setUploadedFiles","youtubeUrls","setYoutubeUrls","manualChordInput","setManualChordInput","manualInputErrors","setManualInputErrors","isDragActive","setIsDragActive","autocreateAbortController","setAutocreateAbortController","processingMessages","processingMessageIndex","setProcessingMessageIndex","_messageQueue","setMessageQueue","showApiErrorModal","setShowApiErrorModal","apiError","setApiError","showAutocreateSuccessModal","setShowAutocreateSuccessModal","autocreateSuccessData","setAutocreateSuccessData","showCancelDialog","setShowCancelDialog","cancellingItemId","setCancellingItemId","showDeleteChordsModal","setShowDeleteChordsModal","deleteModalItemId","setDeleteModalItemId","getItemDetails","useCallback","itemIdToGet","loadChordChartsForItem","progress","shuffled","i","interval","prevQueue","newShuffled","nextIndex","newQueue","newItemsWithCharts","primaryKey","itemReferenceId","charts","sections","buildSectionsFromCharts","sectionsMap","sectionId","sectionLabel","sectionRepeatCount","getChordSections","similarItemIds","useMemo","allFilteredItems","sortedAndFilteredItems","normalizedTitle","normalizedSearch","aTitle","bTitle","aIsSimilar","bIsSimilar","debouncedUpdateSection","updates","sectionCharts","updatePromises","updateSectionLocal","updatedSections","section","deleteSection","itemCharts","deletePromises","remainingCharts","newSet","addNewSection","newSectionId","newSection","handleEditChordChart","chordId","_chartData","handleDeleteChordChart","updatedCharts","handleInsertChordAfter","contextData","handleSaveChordChart","chartData","isUpdate","chartDataWithSection","originalChord","itemSections","targetSection","method","updatedChart","newChart","scrollBackToChord","chordElement","handlePrintChords","printWindow","validateManualChordInput","input","trimmedInput","line","cleanLine","word","handleSingleFileDrop","files","handleProcessFiles","youtubeUrl","manualChords","handleYouTubeUrl","handleManualChordInput","handleFileDrop","chordInput","abortController","textBlob","textFile","itemDetails","newState","sanitizedUrl","transcriptResponse","transcriptData","transcriptBlob","transcriptFile","file","fileNames","handleAutocreateClick","handleDeleteExistingCharts","existingCharts","handleShowCancelConfirmation","handleCancelAutocreate","handleOpenCopyFromModal","handleOpenCopyModal","similarSongs","itemsToLoad","id","handleCloseCopyModal","handleToggleTargetItem","itemPrimaryKey","handleConfirmCopy","targetItemIds","affectedItems","itemIdToRefresh","refreshResponse","sectionsFromState","sectionsFromCharts","sectionIndex","firstChord","chordRows","currentRow","row","rowIndex","zoneExpanded","sanitizedValue","ChordIcon","SortableItem","React","onOpenChordCharts","attributes","listeners","setNodeRef","transform","transition","isDragging","useSortable","style","CSS","handleDelete","PracticeItemsList","onItemsChange","searchQuery","setSearchQuery","isDeleting","setIsDeleting","setIsDragging","isEditOpen","setIsEditOpen","editingItem","setEditingItem","itemToDelete","setItemToDelete","chordChartsModalOpen","setChordChartsModalOpen","selectedItemId","setSelectedItemId","selectedItemTitle","setSelectedItemTitle","confirmDelete","itemToDeleteData","handleOpenChordCharts","handleSave","handleDragStart","handleDragEnd","active","over","oldIndex","newIndex","withNewOrder","arrayMove","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","sortableKeyboardCoordinates","filteredItems","normalizeApostrophes","DndContext","closestCenter","SortableContext","verticalListSortingStrategy","useActiveRoutine","routine","setRoutine","fetchActiveRoutine","sortedItems","refreshRoutine","useItemDetails","itemDetailsCache","setItemDetailsCache","loadingItems","setLoadingItems","fetchItemDetails","isLoadingItem","clearCache","NoteEditor","currentNote","onNoteSave","noteText","setNoteText","PlayIcon","PauseIcon","ResetIcon","formatHoursAndMinutes","minutes","hours","generateChordDescription","parts","fingerPositions","fingerText","openStringNums","mutedStringNums","barreDescriptions","fromString","toString","PracticePage","expandedItems","setExpandedItems","expandedNotes","setExpandedNotes","activeTimers","setActiveTimers","notes","setNotes","isNoteEditorOpen","setIsNoteEditorOpen","editingNoteItemId","setEditingNoteItemId","timers","setTimers","expandedChords","setExpandedChords","showCopyFromModal","setShowCopyFromModal","copyFromSearchTerm","setCopyFromSearchTerm","selectedSourceItem","setSelectedSourceItem","copyFromTargetItemId","setCopyFromTargetItemId","messageQueue","showCancelConfirmation","setShowCancelConfirmation","pendingCancelItemId","setPendingCancelItemId","showMixedContentModal","setShowMixedContentModal","mixedContentData","setMixedContentData","showUnsupportedFormatModal","setShowUnsupportedFormatModal","unsupportedFormatData","setUnsupportedFormatData","showNoTranscriptModal","setShowNoTranscriptModal","noTranscriptData","setNoTranscriptData","manualTranscript","setManualTranscript","showNoChordNamesModal","setShowNoChordNamesModal","notifyOnCompleteRef","notificationConfirmMessage","setNotificationConfirmMessage","originalTitle","setOriginalTitle","handleNotifyRequest","sendCompletionNotification","restoreTitle","handleClick","sectionMap","aMinOrder","c","bMinOrder","transformedFreshCharts","chartsToUpdate","updateData","sectionKey","chartsToDelete","chordIds","loadAllChordCharts","allItemIds","itemIds","transformedBatchResults","itemsWithCharts","transformedCharts","completedItemIds","completedItems","setCompletedItems","audioContext","gainNode","timerSound","audioBuffer","arrayBuffer","decodedBuffer","changed","fetchNotes","similarItemIdsForCopyFrom","targetTitle","sortedAndFilteredCopyFromItems","allItemChordCounts","setAllItemChordCounts","counts","batchResults","copyFromItemsWithCharts","handleEscKey","handleCloseCopyFromModal","initTimer","duration","toggleItem","routineItem","toggleTimer","initialDuration","currentTimer","elapsedSeconds","toggleComplete","routineEntryId","currentIndex","nextItem","nextItemReferenceId","resetTimer","addNote","handleNoteSave","toggleNotes","resetProgress","totalMinutes","completedMinutes","total","sum","completed","toggleChords","savedChart","editingId","match","finalCharts","updatedChords","newSections","targetSectionIndex","insertOrder","insertionIndex","lastSection","chordToDelete","afterChordId","afterChartData","chordContainer","aFirstOrder","bFirstOrder","refreshError","handleOverwriteConfirmed","handleOverwriteCancelled","handleConfirmCopyFrom","response2","handleConfirmCancel","handleCancelDialog","processYouTubeTranscript","transcript","handleMixedContentChoice","byteCharacters","byteNumbers","byteArray","reconstructedFile","chartsResponse","isExpanded","isNotesExpanded","isTimerActive","isCompleted","timerValue","itemNotes","isChordsExpanded","displayTitle","isLoadingDetails","useAuth","isAuthenticated","setIsAuthenticated","hasSpreadsheetAccess","setHasSpreadsheetAccess","checking","setChecking","checkAuth","AuthButton","handleLogin","handleLogout","NavMenu","navItems","useRoutineEditor","routineId","initialRoutineDetails","availableItems","selectedItems","setSelectedItems","setItemDetails","fetchRoutine","selectedItemIds","isSelected","matchesSearch","routineEntries","AvailableItem","onAdd","SortableRoutineItem","onRemove","RoutineEditor","onRoutineChange","hookError","addToRoutine","removeFromRoutine","updateRoutineOrder","newRoutineName","setNewRoutineName","reordered","handleAddItem","handleRemoveItem","SortableInactiveRoutine","handleActivateRoutine","RoutinesPage","routines","setRoutines","routineToDelete","setRoutineToDelete","editingRoutine","setEditingRoutine","activeRoutineItems","setActiveRoutineItems","routineOrderDebounceRef","pendingRoutineOrderRef","activeRoutine","inactiveRoutines","fetchRoutines","routinesList","fetchItemsIfNeeded","itemsData","handleDeactivateRoutine","handleDeleteConfirm","handleCreateRoutine","routineDetails","handleRoutineChange","routineResponse","fetchActiveRoutineItems","activeId","orderUrl","orderResponse","errorText","saveRoutineOrder","handleDragEndInactive","prevRoutines","updatedInactive","useRoutines","setActiveRoutine","createRoutine","name","deleteRoutine","activateRoutine","Select","SelectPrimitive.Root","SelectValue","SelectPrimitive.Value","SelectTrigger","SelectPrimitive.Trigger","SelectPrimitive.Icon","SelectContent","position","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectLabel","SelectPrimitive.Label","SelectItem","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","SelectPrimitive.ItemText","SelectSeparator","SelectPrimitive.Separator","ImportsPage","setItemsData","routinesData","setRoutinesData","routineItemsData","setRoutineItemsData","selectedRoutineId","setSelectedRoutineId","routinesLoading","handleItemsImport","handleRoutinesImport","handleRoutineItemsImport","useLightweightItems","lightweightItems","setLightweightItems","fetchLightweightItems","ItemsPage","PageContent","App","headerRef","headerHeight","setHeaderHeight","updateHeaderHeight","height","ReactDOM"],"mappings":"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","x_google_ignoreList":[0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,55]}